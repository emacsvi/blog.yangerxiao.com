{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/anatomy-of-an-http-transaction"},"html":"<p><img src=\"https://zerosoul.github.io/2016/04/29/Anatomy-of-an-HTTP-Transaction/http.jpg\" alt=\"http\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>前两天node.js发布了新版本，想看看具体更新了啥，于是去<a href=\"http://nodejs.org\">官网</a>找changelog看了看，顺便逛了逛其它栏目。没想到，在DOCS下的<a href=\"https://nodejs.org/en/docs/guides/\">Guides</a>发现了一篇好文，讲的是node.js对http请求的处理过程，虽然不是很适合初学者，但顺藤摸瓜，能挖掘出许多知识点，串联起来，干货满满。下面是译文，没有逐字逐句翻译，有添油加醋的地方，但不影响原文的表达。</p>\n<h1 id=\"译文\"><a href=\"#%E8%AF%91%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>译文</h1>\n<h2 id=\"温馨提示\"><a href=\"#%E6%B8%A9%E9%A6%A8%E6%8F%90%E7%A4%BA\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>温馨提示</h2>\n<p>这篇文章目的在于阐释HTTP请求在node.js中的处理过程。所以前提是假定你知道HTTP为何物，并且对node.js的<a href=\"https://nodejs.org/api/events.html\">EventEmitters</a>和<a href=\"https://nodejs.org/api/stream.html\">Streams</a>有所了解，否则，最好快速过一下有关的<a href=\"https://nodejs.org/dist/latest-v6.x/docs/api\">API</a>。</p>\n<h2 id=\"创建服务器\"><a href=\"#%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建服务器</h2>\n<p>任何一个node web server在代码某一处都会通过<a href=\"https://nodejs.org/api/http.html#http_http_createserver_requestlistener\">createServer</a>创建一个web服务器对象.  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 见证奇迹的时刻</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>作为参数传入<code class=\"language-text\">createServer</code>的函数是http请求必由之路，因此也叫作请求处理函数。事实上，<code class=\"language-text\">createServer</code>返回的<code class=\"language-text\">server</code>对象是一个<code class=\"language-text\">EventEmitter</code>，因此，上面那段代码也可以这么写：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'request'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 见证奇迹的时刻</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>当请求来临时，node.js会调用请求处理函数，并且封装好了两个常用对象：<strong>request</strong>和<strong>response</strong>。稍后我们会经常碰到这两个家伙的。</p>\n<p>花开两朵，各表一枝。为了能够接收到http请求，还需要调用<code class=\"language-text\">server</code>对象的<code class=\"language-text\">listen</code>方法。多数情况下，你只需要传给<code class=\"language-text\">listen</code>一个端口号。还有一些其他设置，感兴趣的话请参考<a href=\"https://nodejs.org/api/http.html\">这里</a></p>\n<h2 id=\"method-url-和-headers\"><a href=\"#method-url-%E5%92%8C-headers\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Method-URL-和-Headers</h2>\n<p>处理一个请求时，你想知道的第一件事可能就是看一下这个请求的<code class=\"language-text\">method</code>和<code class=\"language-text\">url</code>，然后才会有相应的处理。node.js把这两个信息放在了<code class=\"language-text\">request</code>对象里了，直接调用即可：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> method <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<blockquote>\n<p>注:request 对象是 <a href=\"https://nodejs.org/api/http.html#http_class_http_incomingmessage\">IncommingMessage</a>的一个实例</p>\n</blockquote>\n<p><code class=\"language-text\">Headers</code>也在<code class=\"language-text\">request</code>对象里：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> headers <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> userAgent <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">[</span><span class=\"token string\">'user-agent'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>需要注意的是，无论客户端发送的是什么，node.js把所有的头信息关键词都小写化了。变单一的同时也就减少了因分歧出错的可能性。还有，如果有重复的头信息，有些会重写，有些会使用<code class=\"language-text\">,</code>合并成字符串。在一些场景可能会出现问题，没关系，<code class=\"language-text\">request</code>中还有个<a href=\"https://nodejs.org/api/http.html#http_message_rawheaders\">rawHeaders</a>，你值得拥有。</p>\n<h2 id=\"request-body（请求体）\"><a href=\"#request-body%EF%BC%88%E8%AF%B7%E6%B1%82%E4%BD%93%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request-Body（请求体）</h2>\n<p>当请求方法是<code class=\"language-text\">PUT</code>或者<code class=\"language-text\">POST</code>时，请求体就成了重点关注对象。获取请求体，相对于获取上面那三个值，就需要多知道点了：<code class=\"language-text\">request</code>对象实现了<a href=\"https://nodejs.org/api/stream.html#stream_class_stream_readable\">ReadableStream</a>接口，所以能够被监听或者管道化。因此，我们可以通过监听<code class=\"language-text\">data</code>和<code class=\"language-text\">end</code>事件来获取流内数据。</p>\n<p><code class=\"language-text\">data</code>过来的数据块都是<a href=\"https://nodejs.org/api/buffer.html\">Buffer</a>。如果你清楚的知道传输过来的数据是字符串，那么最好将它们存放在一个数组里，在<code class=\"language-text\">end</code>事件中，合并(concatenate)并字符串化(stringify)。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nrequest<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  body<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  body <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 代码执行到这里，body就拥有了整个字符串形式的数据了。</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<blockquote>\n<p>注：多数情况下，这样做有些啰嗦。幸运的是，npm上有许多能将这些逻辑隐藏的优秀模块，比如<a href=\"https://www.npmjs.com/package/concat-stream\">concat-stream</a>和<a href=\"https://www.npmjs.com/package/body\">body</a>。即便如此，还是希望能够好好理解一下这个细节，因为这属于基础。</p>\n</blockquote>\n<h2 id=\"有关错误（errors）\"><a href=\"#%E6%9C%89%E5%85%B3%E9%94%99%E8%AF%AF%EF%BC%88errors%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>有关错误（Errors）</h2>\n<p>既然<code class=\"language-text\">request</code>是一个<code class=\"language-text\">EventEmitter</code>，那么当有错误时，就可以触发<code class=\"language-text\">error</code>事件。<strong>如果你没有监听这个事件，错误会被抛出，进而很可能导致node.js程序的崩溃。</strong>所以，最佳实践便是给<code class=\"language-text\">request</code>增加<code class=\"language-text\">error</code>事件，在事件回调函数里面做一下日志记录的同时，最好给客户端返回对应的错误码，这个在后面会提到。  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">request<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// console的错误标准输出</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>有关错误的处理，还有其它方式，可以参考<a href=\"https://nodejs.org/api/errors.html\">这里</a>。记住，错误随时会发生，要对此有所警惕，对其有专门的处理总是好的。</p>\n<h2 id=\"小结一下\"><a href=\"#%E5%B0%8F%E7%BB%93%E4%B8%80%E4%B8%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>小结一下</h2>\n<p>走到这里，我们已经创建了一个web服务器，获取到了请求的<code class=\"language-text\">method</code>，<code class=\"language-text\">url</code>和<code class=\"language-text\">headers</code>，哦，还有请求体内容。现在我们将这些放在一起：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> headers <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> method <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    body<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    body <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 至此，我们就获取到了所有需要响应给客户端的数据</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Activates this server, listening on port 8080.</span></code></pre>\n      </div>\n<p>很显然，如果运行这个代码，服务器能接收到请求（request），但没发出响应（response）。也就是说，在浏览器里面发出请求，会超时。</p>\n<p>目前为止，我们还未碰触<code class=\"language-text\">response</code>对象，它是<a href=\"https://nodejs.org/api/http.html#http_class_http_serverresponse\">ServerResponse</a>的一个实例，也是一个<a href=\"https://nodejs.org/api/stream.html#stream_class_stream_writable\">WritableStream</a>，为了将数据传回客户端，其中包含了许多实用方法。好吧，依旧是花开两朵，各表一枝，我们先认识下http状态码，待会儿再谈<code class=\"language-text\">response</code>对象。</p>\n<h2 id=\"http状态码\"><a href=\"#http%E7%8A%B6%E6%80%81%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP状态码</h2>\n<p><code class=\"language-text\">response</code>默认状态码是<code class=\"language-text\">200</code>。当然，有些情况下，你需要返回不同的状态码。<code class=\"language-text\">response</code>中的<code class=\"language-text\">statusCode</code>属性就是为此存在的：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//告诉客户端资源未找到...</span></code></pre>\n      </div>\n<h2 id=\"设置响应头\"><a href=\"#%E8%AE%BE%E7%BD%AE%E5%93%8D%E5%BA%94%E5%A4%B4\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>设置响应头</h2>\n<p><code class=\"language-text\">response</code>中的<code class=\"language-text\">setHeader</code>该出场了：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">response<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'X-Powered-By'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'bacon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>需要注意的是，响应头关键词对大小写不敏感，如果重复设置一个响应头，那么客户端取到的是你最后一个。</p>\n<h2 id=\"显式发送响应头\"><a href=\"#%E6%98%BE%E5%BC%8F%E5%8F%91%E9%80%81%E5%93%8D%E5%BA%94%E5%A4%B4\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>显式发送响应头</h2>\n<p>上面提到的<code class=\"language-text\">statusCode</code>和<code class=\"language-text\">setHeader</code>属于<strong>隐式头部</strong>：意思是在发送body数据前，依赖的是node.js来发送头部数据。</p>\n<p>如果你愿意，也可以显式地将头部信息写到响应流里。<code class=\"language-text\">writeHead</code>便是为此而生：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">response<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token string\">'X-Powered-By'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'bacon'</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>设置完头部，接下来便是发送响应数据了。</p>\n<h2 id=\"发送响应数据\"><a href=\"#%E5%8F%91%E9%80%81%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>发送响应数据</h2>\n<p>既然<code class=\"language-text\">response</code>对象是个<code class=\"language-text\">WritableStream</code>，那么就可以使用流方法来向客户端写数据了。  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">response<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;html>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;body>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;h1>Hello, World!&lt;/h1>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/body>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;/html>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nresponse<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>以上代码也可以简写成以下形式：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;html>&lt;body>&lt;h1>Hello, World!&lt;/h1>&lt;/body>&lt;/html>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<blockquote>\n<p>注:响应体在响应头之后，因此往response里写数据之前就设置好状态码和头信息，一切才会有意义。</p>\n</blockquote>\n<h2 id=\"response的错误处理\"><a href=\"#response%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Response的错误处理</h2>\n<p>与<code class=\"language-text\">request</code>一样，<code class=\"language-text\">response</code>也会触发<code class=\"language-text\">error</code>事件。所以，有关<code class=\"language-text\">request</code>错误处理最佳实践，同样也适用于<code class=\"language-text\">response</code>。</p>\n<h2 id=\"再来小结一下\"><a href=\"#%E5%86%8D%E6%9D%A5%E5%B0%8F%E7%BB%93%E4%B8%80%E4%B8%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再来小结一下</h2>\n<p>目前来讲，我们已经不会让浏览器傻等了。那么，把所有代码放在一起，我们可以做到让服务端把浏览器过来的请求组织下数据再传送过去，注意，使用<code class=\"language-text\">JSON.stringify</code>格式化了下数据：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> headers <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> method <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    body<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    body <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// BEGINNING OF NEW STUFF</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 注：上面两行代码可以用下面一行替换</span>\n\n    <span class=\"token comment\">// response.writeHead(200, {'Content-Type': 'application/json'})</span>\n\n    <span class=\"token keyword\">var</span> responseBody <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n      headers<span class=\"token punctuation\">:</span> headers<span class=\"token punctuation\">,</span>\n\n      method<span class=\"token punctuation\">:</span> method<span class=\"token punctuation\">,</span>\n\n      url<span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">,</span>\n\n      body<span class=\"token punctuation\">:</span> body\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>responseBody<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 注：同样，可以这样替换</span>\n\n    <span class=\"token comment\">// response.end(JSON.stringify(responseBody))</span>\n\n    <span class=\"token comment\">// END OF NEW STUFF</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2 id=\"echo-服务器\"><a href=\"#echo-%E6%9C%8D%E5%8A%A1%E5%99%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Echo-服务器</h2>\n<p>基于上面代码，我们可以简化一下，做出一个Echo服务器，即请求什么数据，就返回什么数据。我们只需要从请求里面获取数据并写到响应里，和上面代码差不多：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    body<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    body <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>好吧，有些过于简单，我们再增加两个需求，满足下面两个条件才给出正确响应： </p>\n<ol>\n<li>请求的<code class=\"language-text\">method</code>是<code class=\"language-text\">GET</code>  </li>\n<li>URL是<code class=\"language-text\">/echo</code>，否则给出<code class=\"language-text\">404</code>。  </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'GET'</span> <span class=\"token operator\">&amp;&amp;</span> request<span class=\"token punctuation\">.</span>url <span class=\"token operator\">===</span> <span class=\"token string\">'/echo'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      body<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      body <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<blockquote>\n<p>注：检查URL，实质上就是一种路由<code class=\"language-text\">routing</code>形式。其它形式有简单如<code class=\"language-text\">swtich</code>语句，复杂如<strong><a href=\"https://www.npmjs.com/package/express\">Express</a></strong>框架。如果需要纯路由功能，可以试试[Router][https://www.npmjs.com/package/router]。](<a href=\"https://www.npmjs.com/package/router\">https://www.npmjs.com/package/router</a>]。)</p>\n</blockquote>\n<p>上面的代码能不能再精简下呢？别忘了，<code class=\"language-text\">request</code>对象是一个<code class=\"language-text\">ReadableStream</code>，<code class=\"language-text\">response</code>对象是一个<code class=\"language-text\">WritableStream</code>。这意味着可以使用管道（pipe）直接将数据从一端传到另一端。所以，更为精简的代码诞生了：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'GET'</span> <span class=\"token operator\">&amp;&amp;</span> request<span class=\"token punctuation\">.</span>url <span class=\"token operator\">===</span> <span class=\"token string\">'/echo'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n    response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>事情还没完，程序出错了怎么办？好吧，加上错误处理机制：在此，我们仅仅打印出错误，并将状态码置为<code class=\"language-text\">404</code>。（更为详细的错误处理机制可以参考<a href=\"https://nodejs.org/api/errors.html\">这里</a>）  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nhttp<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  response<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span>method <span class=\"token operator\">===</span> <span class=\"token string\">'GET'</span> <span class=\"token operator\">&amp;&amp;</span> request<span class=\"token punctuation\">.</span>url <span class=\"token operator\">===</span> <span class=\"token string\">'/echo'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n    response<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n\n    response<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>OK，node.js如何处理http请求，目前为止，我们已经把大部分的基础知识讲解到了。最后，我们总结下这些知识点：</p>\n<ol>\n<li>实例化一个HTTP服务器，并设置一个请求处理函数，另外别忘了监听一个端口</li>\n<li>从<code class=\"language-text\">request</code>获取<code class=\"language-text\">headers</code>,<code class=\"language-text\">url</code>,<code class=\"language-text\">method</code>,<code class=\"language-text\">body</code>等信息</li>\n<li>根据<code class=\"language-text\">url</code>或者其它信息路由</li>\n<li>通过<code class=\"language-text\">response</code>发送响应头、状态码和数据</li>\n<li><code class=\"language-text\">request</code>数据管道化到<code class=\"language-text\">response</code></li>\n<li>对<code class=\"language-text\">request</code>和<code class=\"language-text\">response</code>设置错误处理机制</li>\n</ol>\n<h1 id=\"参考\"><a href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<ul>\n<li>原文链接：<a href=\"https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/\">Anatomy of an HTTP Transaction</a></li>\n<li><a href=\"https://nodejs.org/api/events.html\">EventEmitters</a></li>\n<li><a href=\"https://nodejs.org/api/stream.html\">Streams</a></li>\n<li><a href=\"https://nodejs.org/api/http.html\">HTTP</a></li>\n</ul>","frontmatter":{"title":"HTTP的Node.js之旅","date":"2016-04-29T09:31:37.000Z","category":"它山之石","tags":["译文","技术","nodejs","javascript"],"cover":"https://zerosoul.github.io/2016/04/29/Anatomy-of-an-HTTP-Transaction/http.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li>\n<p><a href=\"/posts/anatomy-of-an-http-transaction/#%E8%AF%91%E6%96%87\">译文</a></p>\n<ul>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E6%B8%A9%E9%A6%A8%E6%8F%90%E7%A4%BA\">温馨提示</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E5%88%9B%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8\">创建服务器</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#method-url-%E5%92%8C-headers\">Method-URL-和-Headers</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#request-body%EF%BC%88%E8%AF%B7%E6%B1%82%E4%BD%93%EF%BC%89\">Request-Body（请求体）</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E6%9C%89%E5%85%B3%E9%94%99%E8%AF%AF%EF%BC%88errors%EF%BC%89\">有关错误（Errors）</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E5%B0%8F%E7%BB%93%E4%B8%80%E4%B8%8B\">小结一下</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#http%E7%8A%B6%E6%80%81%E7%A0%81\">HTTP状态码</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E8%AE%BE%E7%BD%AE%E5%93%8D%E5%BA%94%E5%A4%B4\">设置响应头</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E6%98%BE%E5%BC%8F%E5%8F%91%E9%80%81%E5%93%8D%E5%BA%94%E5%A4%B4\">显式发送响应头</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E5%8F%91%E9%80%81%E5%93%8D%E5%BA%94%E6%95%B0%E6%8D%AE\">发送响应数据</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#response%E7%9A%84%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\">Response的错误处理</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E5%86%8D%E6%9D%A5%E5%B0%8F%E7%BB%93%E4%B8%80%E4%B8%8B\">再来小结一下</a></li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#echo-%E6%9C%8D%E5%8A%A1%E5%99%A8\">Echo-服务器</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/anatomy-of-an-http-transaction/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","excerpt":"前言 前两天node.js发布了新版本，想看看具体更新了啥，于是去 官网 找changelog看了看，顺便逛了逛其它栏目。没想到，在DOCS下的 Guides 发现了一篇好文，讲的是node.js对http…"}},{"node":{"fields":{"slug":"/posts/geek-and-team"},"html":"<ul>\n<li>\n<p>工程问题都很简单，人际关系才是最难的。</p>\n</li>\n<li>\n<p>好点子和高超的技术并不是软件成功的充分条件，你的职业生涯能否成功完全看你能不能与人合作。</p>\n</li>\n<li>\n<p>确保失败尽早发生，尽快发生，经常发生。</p>\n</li>\n<li>\n<p>相比担心自己的创意被偷走或是被人笑话，你更应该担心自己是不是在错误的方向上浪费了大量时间。</p>\n</li>\n<li>\n<p>基本上所有的社交问题最终都是由于缺乏<strong>谦虚</strong>、<strong>尊重</strong>，或是<strong>信任</strong>而造成的。</p>\n</li>\n<li>\n<p>不要等到完美的时候再出来，只要产品大致可用，就立刻把它按照原样公开给大众。</p>\n</li>\n<li>\n<p>偶尔跳出自己的舒适区，在更大的舞台上接受各种挑战，这样你才能长久地保持愉快的心情。</p>\n</li>\n<li>\n<p>有时候最好的答案就是：我不知道。</p>\n</li>\n<li>\n<p>团队文化有意思的地方在于如果你清楚地定义好它，它是会进行自我选择的。</p>\n</li>\n<li>\n<p>沟通的指导原则之一就是在同步沟通时（比如开会），人越少越好。而在异步沟通时（比如邮件），涉及的听众越多越好。</p>\n</li>\n<li>\n<p>关注用户，其它的东西自会随之而来</p>\n</li>\n</ul>","frontmatter":{"title":"阅读笔记《极客与团队》","date":"2016-04-21T17:12:08.000Z","category":"阅读笔记","tags":["互联网","技术","管理","阅读"],"cover":null},"tableOfContents":"","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/explore-object-assign"},"html":"<p><img src=\"https://zerosoul.github.io/2016/03/25/explore-object-assign/obj.jpg\" alt=\"extend obj\"></p>\n<h1 id=\"起因\"><a href=\"#%E8%B5%B7%E5%9B%A0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起因</h1>\n<p>最近在重构以前写过的<strong>javascript</strong>代码，目的是为了去掉对<strong>jQuery</strong>的依赖。其中有多处用到了<a href=\"http://api.jquery.com/jQuery.extend/\"><code class=\"language-text\">$.extend()</code></a>方法，自然而然会想到这么一个问题：如何用自己的方式来实现？</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<p>首先，定义函数的功能：<strong>传入多个对象，将多个对象的内容合并到第一个对象中，最后返回合并后的对象，即参数中的第一个对象。</strong>这样的定义是否似曾相识？没错，和ES6中的新特性<code class=\"language-text\">Object.assign()</code>几乎一模一样。所以，可以从探索<code class=\"language-text\">Object.assign()</code>开始。</p>\n<h1 id=\"探索objectassign\"><a href=\"#%E6%8E%A2%E7%B4%A2objectassign\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>探索Object.assign()</h1>\n<p><code class=\"language-text\">Object.assign(target, ...sources)</code></p>\n<h1 id=\"使用场景\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用场景</h1>\n<h2 id=\"拷贝对象\"><a href=\"#%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拷贝对象</h2>\n<p>只需要传入的第一个参数是空对象即可：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> copy <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { foo: 1 }</span></code></pre>\n      </div>\n<h2 id=\"合并对象\"><a href=\"#%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>合并对象</h2>\n<p>注意第一个传参将会被改变，所以如果不想改变第一个有值参数，可以传入一个空对象：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> o1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> o2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> o3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> c<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">,</span> o2<span class=\"token punctuation\">,</span> o3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 1, b: 2, c: 3 }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// { a: 1, b: 2, c: 3 }, 注意第一个参数，即o1有了变化。</span></code></pre>\n      </div>\n<h1 id=\"注意事项\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事项</h1>\n<ul>\n<li>\n<p>在<code class=\"language-text\">Object.assign()</code>中，原型属性和非可枚举属性不会被拷贝。（<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">两种属性的解释</a>）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// foo是obj原型链上的属性</span>\n  bar<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>  <span class=\"token comment\">// bar 是非可枚举（non-enumerable）属性.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  baz<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    enumerable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>  <span class=\"token comment\">// baz是可枚举属性.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> copy <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { baz: 3 }，只拷贝了baz属性</span></code></pre>\n      </div>\n</li>\n<li>\n<p>元类型会被转化为对象</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> v1 <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> v2 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> v3 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">,</span> undefined<span class=\"token punctuation\">,</span> v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">//元类型里面的字符串被转化为字符数组，null和undefined被忽略</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { \"0\": \"a\", \"1\": \"b\", \"2\": \"c\" }</span></code></pre>\n      </div>\n</li>\n<li>\n<p>异常会抛出，但是已经执行的代码会生效</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  writable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// target.foo 为只读属性</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bar<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> foo2<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> foo3<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> baz<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 会抛出异常：TypeError: \"foo\" is read-only，但是之前的赋值操作已经生效。</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>foo2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1, 异常就是在这儿发生的，所以还是1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>foo3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>baz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span></code></pre>\n      </div>\n<h1 id=\"pollyfill\"><a href=\"#pollyfill\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pollyfill</h1>\n</li>\n</ul>\n<p>上面是对<code class=\"language-text\">Object.assign()</code>概念层面的探索，由于要考虑旧版本浏览器兼容性问题，需要写一个<strong>pollyfill</strong>，其实这才是重头戏。不过，只有理解了<code class=\"language-text\">Object.assign()</code>都干了些什么，才有可能写出来：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Object<span class=\"token punctuation\">.</span>assign <span class=\"token operator\">!=</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">assign</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//第一个传参不能是undefined和null，因为它们不能被转为对象</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">===</span> undefined <span class=\"token operator\">||</span> target <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Can not convert undefined or null to object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">//使用Object对象化target</span>\n        <span class=\"token keyword\">var</span> output <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> idx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//后续传参也需要判断undefined和null</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source <span class=\"token operator\">!==</span> undefined <span class=\"token operator\">&amp;&amp;</span> source <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                output<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> output<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"结束\"><a href=\"#%E7%BB%93%E6%9D%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结束</h1>\n<p>好了，现在可以在宿主环境大胆使用<code class=\"language-text\">Object.assign()</code>了，Let’s rock it~~~</p>\n<h1 id=\"参考链接：\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考链接：</h1>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\">MDN:Object.assign()</a></p>","frontmatter":{"title":"探索Object.assign()","date":"2016-03-25T09:31:37.000Z","category":"技术","tags":["javascript","ES6","前端"],"cover":"https://zerosoul.github.io/2016/03/25/explore-object-assign/obj.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/explore-object-assign/#%E8%B5%B7%E5%9B%A0\">起因</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E6%8E%A2%E7%B4%A2objectassign\">探索Object.assign()</a></li>\n<li>\n<p><a href=\"/posts/explore-object-assign/#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">使用场景</a></p>\n<ul>\n<li><a href=\"/posts/explore-object-assign/#%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1\">拷贝对象</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1\">合并对象</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/explore-object-assign/#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">注意事项</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E7%BB%93%E6%9D%9F\">结束</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\">参考链接：</a></li>\n</ul>","excerpt":"起因 最近在重构以前写过的 javascript 代码，目的是为了去掉对 jQuery…"}},{"node":{"fields":{"slug":"/posts/jquery-best-practice"},"html":"<p><img src=\"https://zerosoul.github.io/2016/03/06/jquery-best-practice/jquery.jpg\" alt=\"jquery\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>使用<a href=\"http://jquery.com/\">jQuery</a>已经有两年，其<a href=\"https://api.jquery.com/\">API</a>用起来非常的爽，甚至都成为了事实上的标准，以至于好多前端小白把jQuery等同于Javascript。虽然jQuery的普及度很高，但遵循最佳实践来写jQuery代码的却寥寥无几，下面就自己在工作的积累来写一些jQuery的最佳实践（也有从网络上搜集的）。</p>\n<h1 id=\"加载jquery\"><a href=\"#%E5%8A%A0%E8%BD%BDjquery\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加载jQuery</h1>\n<ul>\n<li>\n<p>使用CDN加载，<a href=\"http://www.paulirish.com/2010/the-protocol-relative-url/\">去掉<code class=\"language-text\">http:</code>或者<code class=\"language-text\">https:</code></a>，同时做好本地fallback。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">window<span class=\"token punctuation\">.</span>jQuery <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>'<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"js/jquery-2.1.4.min.js\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>')<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>如果可能，请在底部加载jQuery外部文件</p>\n</li>\n<li>\n<p>有关版本问题</p>\n<ul>\n<li>如果需要支持Internet Explorer 6/7/8，那就不要使用2.x</li>\n<li>对于web app，请大胆使用最新版本的jQuery，当然，也可以选择<a href=\"http://zeptojs.com/\">zepto.js</a></li>\n<li>不要使用<a href=\"http://blog.jquery.com/2014/07/03/dont-use-jquery-latest-js/\">jquery-last.js CDN</a></li>\n</ul>\n</li>\n<li>\n<p>检测浏览器特性，请用<a href=\"http://modernizr.com/\">Modernizr</a></p>\n</li>\n</ul>\n<h1 id=\"变量\"><a href=\"#%E5%8F%98%E9%87%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>变量</h1>\n<ul>\n<li>所有的jQuery对象命名最好加个<code class=\"language-text\">$</code>前缀加以区分</li>\n<li>\n<p>缓存通过选择符获取的jQuery对象，以待复用：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token keyword\">var</span> $myDiv <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    $myDiv<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"dom操作\"><a href=\"#dom%E6%93%8D%E4%BD%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM操作</h1>\n<ul>\n<li>\n<p>对于一些较为复杂的DOM操作，可以先<code class=\"language-text\">.detach()</code>，原因<a href=\"http://learn.jquery.com/performance/detach-elements-before-work-with-them/\">参考此处</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token keyword\">var</span> $myList <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list-container > ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//...在$myList上做了一系列复杂的操作后...</span>\n    \n    $myList<span class=\"token punctuation\">.</span><span class=\"token function\">appendTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list-container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>链式调用</p>\n<ul>\n<li>\n<p>链式调用让代码更具可读性</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>当调用过多时，注意合理加缩进，时刻维持代码可读性</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myClickHandler<span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseover\"</span><span class=\"token punctuation\">,</span> myMouseOverHandler<span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </code></pre>\n      </div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">#选择器</code></pre>\n      </div>\n</li>\n<li>\n<p>尽可能使用ID选择器，因为jQuery源码中调用的是<code class=\"language-text\">document.getElementById()</code></p>\n</li>\n<li>\n<p>当使用类选择器时，没必要再附加元素标签了</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token keyword\">var</span> $products <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.products\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SLOW</span>\n    \n    <span class=\"token keyword\">var</span> $products <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".products\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// FAST</span></code></pre>\n      </div>\n</li>\n<li>\n<p>对于像<em>Id->Child</em>这样的嵌套选择器，使用<code class=\"language-text\">.find()</code>性能更好些，因为id选择器不走Sizzle引擎，这能节约一些性能损耗。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD, 全部走的Sizzle选择器引擎</span>\n    \n    <span class=\"token keyword\">var</span> $productIds <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#products div.id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// GOOD, #products 走的是document.getElementById()，因此只有div.id走Sizzle 选择器引擎</span>\n    \n    <span class=\"token keyword\">var</span> $productIds <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#products\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>选择器父类越模糊越好，子类越详细越好。<a href=\"http://learn.jquery.com/performance/optimize-selectors/\">参考此处</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token comment\">// 未经优化的</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.data .gonzalez\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 优化后的</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".data td.gonzalez\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>给选择器以上下文</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// SLOWER 遍历了整个文档的class</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// FASTER 只在#class-container下遍历</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#class-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>避免使用通配符<code class=\"language-text\">*</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div.container > *'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div.container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BETTER</span></code></pre>\n      </div>\n</li>\n<li>\n<p>没有必要嵌套或组合使用ID选择器</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#outer #inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.outer-container #inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GOOD,  document.getElementById()搞定一切</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"事件\"><a href=\"#%E4%BA%8B%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件</h1>\n<ul>\n<li>\n<p>每个页面有且仅有一个DOMReady事件，便于调试。</p>\n</li>\n<li>\n<p>尽量不要使用匿名函数来用作事件处理，因为不利于调试，测试，维护和复用。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token comment\">// GOOD</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">myLinkClickHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myLinkClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>避免HTML结构中声明并绑定事件处理函数，这非常不利于调试，也破坏了HTML紧做结构表现的职责。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token comment\">&lt;!-- BAD --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myLink<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myEventHandler();<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>my link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myEventHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GOOD</span></code></pre>\n      </div>\n</li>\n<li>\n<p>使用<a href=\"http://learn.jquery.com/events/event-delegation/\">事件代理机制</a>，一个明显的好处就是当有新子元素插入时，不用重新绑定事件，<a href=\"http://api.jquery.com/on/#direct-and-delegated-events\">参考此处</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD, 相当于给list下的所有a元素都绑定了click事件.</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> myClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//GOOD, 只给父元素list绑定了click事件.</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"ajax\"><a href=\"#ajax\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ajax</h1>\n<ul>\n<li>\n<p>熟习<code class=\"language-text\">$.ajax()</code>，尽量不要用<code class=\"language-text\">.get()</code>,<code class=\"language-text\">.getJson()</code>这样的简洁方式。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">//ajax模板</span>\n    <span class=\"token keyword\">var</span> jqxhr <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">,</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认GET</span>\n        cache<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认true, 但对于dataType为'script'或者'jsonp'，则为false</span>\n        data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 请求附带的参数</span>\n        dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span> \n        jsonp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定回调参数的名称</span>\n        statusCode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 在此指定相应的响应状态的回调函数</span>\n            <span class=\"token number\">404</span><span class=\"token punctuation\">:</span> handler404<span class=\"token punctuation\">,</span>\n            <span class=\"token number\">500</span><span class=\"token punctuation\">:</span> handler500\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span>successHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span>failureHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>请求地址最好用<em>无协议的URL</em>，即去除<code class=\"language-text\">http:/https:</code></p>\n</li>\n<li>\n<p>使用<code class=\"language-text\">data</code>对象传送数据，而非附加在URL里</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// 可读性不好...</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"something.php?param1=test1&amp;param2=test2\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 更具可读性...</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"something.php\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> param1<span class=\"token punctuation\">:</span> test1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">:</span> test2 <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>使用Promise风格，<a href=\"http://www.htmlgoodies.com/beyond/javascript/making-promises-with-jquery-deferred.html\">例子</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>successHandler<span class=\"token punctuation\">,</span> failureHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// OR</span>\n    <span class=\"token keyword\">var</span> jqxhr <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span>successHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span>failureHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"动画效果\"><a href=\"#%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>动画效果</h1>\n<ul>\n<li>不要滥用动画效果，或者干脆不用，直到PM有切实需求。</li>\n<li>如果用动画，优先使用像<code class=\"language-text\">show/hide</code>和<code class=\"language-text\">slideUp/slideDown</code>这样的简单API</li>\n</ul>\n<h1 id=\"插件\"><a href=\"#%E6%8F%92%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插件</h1>\n<ul>\n<li>优先考虑有良好文档，有测试用例，有社区支持的插件</li>\n<li>使用插件前不要忘记检测与你正在使用的jQuery版本是否冲突</li>\n<li>任何可复用的组件都应该插件化，这里有个<a href=\"https://john-dugan.com/jquery-plugin-boilerplate-explained/\">插件模板</a>。</li>\n</ul>\n<h1 id=\"其他\"><a href=\"#%E5%85%B6%E4%BB%96\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他</h1>\n<ul>\n<li>\n<p>使用对象字面量设置特性</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD</span>\n    $myLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"my link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"external\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n    <span class=\"token comment\">// GOOD</span>\n    $myLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        href<span class=\"token punctuation\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"my link\"</span><span class=\"token punctuation\">,</span>\n        rel<span class=\"token punctuation\">:</span> <span class=\"token string\">\"external\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>避免使用jQuery添加CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#mydiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">,</span> <span class=\"token string\">'font-weight'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'bold'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span></code></pre>\n      </div>\n<p>定义好CSS rule</p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\">    <span class=\"token selector\">.error</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> /\\* GOOD */</code></pre>\n      </div>\n<p>然后通过jQuery添加class</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#mydiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GOOD</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"优秀资源\"><a href=\"#%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>优秀资源</h1>\n<ul>\n<li><a href=\"http://api.jquery.com/\">jQuery API Docs</a></li>\n<li><a href=\"http://learn.jquery.com/\">jQuery Learn</a></li>\n<li><a href=\"http://learn.jquery.com/performance/\">jQuery Performance</a></li>\n<li><a href=\"https://john-dugan.com/jquery-plugin-boilerplate-explained/\">A jQuery Plugin Boilerplate Explained</a></li>\n</ul>","frontmatter":{"title":"jQuery最佳实践","date":"2016-03-06T09:31:37.000Z","category":"技术","tags":["前端","备忘","jQuery","最佳实践"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/jquery-best-practice/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%8A%A0%E8%BD%BDjquery\">加载jQuery</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%8F%98%E9%87%8F\">变量</a></li>\n<li><a href=\"/posts/jquery-best-practice/#dom%E6%93%8D%E4%BD%9C\">DOM操作</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E4%BA%8B%E4%BB%B6\">事件</a></li>\n<li><a href=\"/posts/jquery-best-practice/#ajax\">Ajax</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C\">动画效果</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E6%8F%92%E4%BB%B6\">插件</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%85%B6%E4%BB%96\">其他</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90\">优秀资源</a></li>\n</ul>","excerpt":"前言 使用 jQuery 已经有两年，其 API 用起来非常的爽，甚至都成为了事实上的标准，以至于好多前端小白把jQuery等同于Javascript。虽然jQuery的普及度很高，但遵循最佳实践来写jQuery代码的却寥寥无几，下面就自己在工作的积累来写一些jQuery…"}},{"node":{"fields":{"slug":"/posts/how-to-interview"},"html":"<p><img src=\"https://zerosoul.github.io/2016/03/06/how-to-interview/areyouok.png\" alt=\"are you ready\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>最近公司在招前端，一件说大不大，说小不小的事情。第一次当起了面试官，不敢掉以轻心，准备工作要做足，毕竟要招进来的人是经常朝夕相处的同事，靠谱些为好。经过几天的实践与反思，总结了一套适合自己的面试问题，希望对一些人有所启发。每个题目都没有标准答案，注重的是答题的思路以及对问题本身的拓展，有些给出了<strong>参考链接</strong>，都是我曾经读过的文章，恩，如果英语不过关，祝好运。</p>\n<h1 id=\"面试题\"><a href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>面试题</h1>\n<h2 id=\"预热\"><a href=\"#%E9%A2%84%E7%83%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>预热</h2>\n<ul>\n<li>\n<p><strong>昨天或者最近这一周，学了些什么？</strong><br>\n前端这个工种是依托互联网的繁荣快速发展起来的，因而也就促使着前端不断革新技术来满足日新月异的互联网。学习不是为了跟风，什么新学什么，而是为了完善和更新自己的技能树，保持核心竞争力。如果能从这个问题的回答看出你有阅读，学习，实践的习惯，那就更好了。</p>\n</li>\n<li>\n<p><strong>如果今年想掌握一门新技术，会是什么？为什么选择它？</strong><br>\n如果说上面那个问题是战术问题，那么这个应该就是战略问题。无论想横向发展还是纵向发展，都逃不脱一个<strong>成长</strong>的话题，透过这个问题，可以了解下应聘者的技术视野，同时也是其成长的方向与潜力。</p>\n</li>\n<li>\n<p><strong>最近有没有遇到些问题？你是如何解决的？</strong><br>\n这个问题比较开放，即使遇到的不是技术问题，也可以回答，比如，遇到的问题是马桶堵了，也可以说出来。主要是了解下应聘者解决问题的思路。</p>\n</li>\n<li>\n<p><strong>谈谈你的开发流程与环境</strong><br>\n有多热爱开发，就得有多热心于开发环境的打磨，因为上班的绝大部分时间都是沉浸在这个环境下，舒适度很重要。</p>\n</li>\n<li>\n<p><strong>有没有在线的得意之作，为了完成这个作品，用到了哪些工具，你贡献了哪些功能或者想法，能谈谈吗？</strong><br>\n有些前端业余会做一些小项目，实践新知的同时涨涨姿势。这些小作品往往能给面试锦上添花。</p>\n</li>\n<li>\n<p><strong>有写博客吗？</strong><br>\n写博客是一种输出，也是一种沉淀，即便不怎么写技术类文章，能坚持写的，是靠谱特征之一。</p>\n</li>\n</ul>\n<h2 id=\"html\"><a href=\"#html\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML</h2>\n<p>HTML是骨架，是基础。语义化标签，SEO，兼容性，加载和渲染顺序与性能等等，在写HTML代码时都需要考虑进来。</p>\n<ul>\n<li>\n<p><strong>大概写一下你常用的HTML骨架（PC&#x26;Mobile）</strong></p>\n</li>\n<li>\n<p><strong>Quirks Mode（怪异模式）和Standards Mode（标准模式）的异同点</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Quirks_Mode_and_Standards_Mode\">参考链接</a></p>\n</li>\n<li>\n<p><strong>什么是Flash of Unstyled Content（FOUC），如何避免？</strong><br>\n<a href=\"http://www.techrepublic.com/blog/web-designer/how-to-prevent-flash-of-unstyled-content-on-your-websites/\">参考链接</a></p>\n</li>\n<li>\n<p><strong>尽可能多地列举出HTML5新标签</strong><br>\n基础问题，如果不能列举出三个以上，下面那个问题也没必要问了。</p>\n</li>\n<li>\n<p><strong>HTML5的新特性里面，你最喜欢哪个？为什么？</strong><br>\n开放性问题，目的在于了解对HTML5的认知与实践。</p>\n</li>\n<li>\n<p><strong>cookie,localStorage和sessionStorage 异同点</strong><br>\n<a href=\"http://stackoverflow.com/questions/19867599/what-is-the-difference-between-localstorage-sessionstorage-session-and-cookies\">参考链接</a></p>\n</li>\n<li>\n<p><strong>解释下CORS，怎样使用</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\">参考链接</a></p>\n</li>\n<li>\n<p><strong>script标签 <code class=\"language-text\">async</code> 与<code class=\"language-text\">defer</code>两个特性的异同点</strong><br>\n<a href=\"http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html\">参考链接</a></p>\n</li>\n<li>\n<p><strong>CSS放在head标签头部，js放在body标签底部，有啥优点？可不可以不这样？</strong><br>\n<a href=\"http://stackoverflow.com/a/25275805\">参考链接</a></p>\n</li>\n</ul>\n<ul>\n<li><strong><code class=\"language-text\">event.PreventDefault</code>，<code class=\"language-text\">event.stopPropagation</code>与<code class=\"language-text\">return false</code>异同点</strong><br>\n<a href=\"http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false\">参考链接</a></li>\n</ul>\n<h2 id=\"css\"><a href=\"#css\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS</h2>\n<p>CSS是我的薄弱项，只考察基础，但是有这些基础我认为也就够了。任重道远，共勉。</p>\n<ul>\n<li>\n<p><strong>尽可能多地列举display属性值，追问：<code class=\"language-text\">inline</code>和<code class=\"language-text\">inline-block</code>的区别</strong></p>\n</li>\n<li>\n<p><strong>尽可能多地列举position属性值，追问：<code class=\"language-text\">absolute</code>是怎么工作的</strong></p>\n</li>\n<li>\n<p><strong>为什么会产生浮动，清除浮动的技巧</strong><br>\n<a href=\"http://www.sitepoint.com/clearing-floats-overview-different-clearfix-methods/\">参考链接</a></p>\n</li>\n<li>\n<p><strong>描述下你对盒模型的理解，通过CSS怎么告知浏览器使用不同的盒模型</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model\">参考链接</a></p>\n</li>\n<li>\n<p><strong>解释下Block Formatting Content (BFC)，它是如何工作的</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context\">参考链接</a></p>\n</li>\n<li>\n<p><strong>使用过哪些CSS框架？有没有试过更改或者改进它们？</strong><br>\n开放性问题，目测一般会回答Bootstrap。</p>\n</li>\n</ul>\n<h2 id=\"javascript\"><a href=\"#javascript\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript</h2>\n<p>公司项目中写交互的场景比较多，所以这一块是重点考察的，虽然平时都使用jQuery，但有javascript的基础更为重要。</p>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">===</code>与<code class=\"language-text\">==</code>异同点</strong><br>\n基础问题，这个如果表现出不知所措，就没必要往下进行了。</p>\n</li>\n<li>\n<p><strong>实现下面的函数</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">duplicate</span><span class=\"token punctuation\">(</span>\\<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span>\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\\[1,2,3,1,2,3\\]</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>描述下document.write()使用场景</strong></p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">onload</code>和 <code class=\"language-text\">$(document).ready</code>的区别</strong><br>\n<a href=\"http://stackoverflow.com/questions/3698200/window-onload-vs-document-ready\">参考链接</a></p>\n</li>\n<li>\n<p><strong>immediately-invoked function expression（IIFE）的工作原理</strong><br>\n<a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/#iife\">参考链接</a></p>\n</li>\n<li>\n<p><strong>谈一下你对javascript中<code class=\"language-text\">this</code>的理解</strong><br>\n<a href=\"http://javascriptissexy.com/understand-javascripts-this-with-clarity-and-master-it/\">参考链接</a></p>\n</li>\n<li>\n<p><strong>事件代理(Event Delegation)</strong><br>\n<a href=\"https://davidwalsh.name/event-delegate\">参考链接</a></p>\n</li>\n<li>\n<p><strong>闭包是什么？举例它在实际工作的应用</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">参考链接</a></p>\n</li>\n<li>\n<p><strong>说出下面代码Person函数使用的区别</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> person1<span class=\"token operator\">=</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> person2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong><code class=\"language-text\">call</code>和<code class=\"language-text\">apply</code>的异同点</strong><br>\n<a href=\"http://stackoverflow.com/questions/1986896/what-is-the-difference-between-call-and-apply\">参考链接</a></p>\n</li>\n<li>\n<p><strong>你是如何理解</strong>hoisting<strong>的</strong><br>\n<a href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\">参考链接</a></p>\n</li>\n<li>\n<p><strong>尽可能详细地解释下AJAX，请写出创建并发送一个AJAX请求的过程。</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/AJAX\">参考链接</a></p>\n</li>\n<li>\n<p><strong>解释下JSONP，为什么说它不是真正的AJAX?</strong><br>\n<a href=\"http://stackoverflow.com/questions/7115940/difference-between-ajax-restful-rest-json-and-jsonp\">参考链接</a></p>\n</li>\n<li>\n<p><strong>当写<code class=\"language-text\">onscroll</code>事件的回调函数时，你能想到的最佳实践是什么？</strong><br>\n<a href=\"https://dannyvankooten.com/delay-scroll-handlers-javascript/\">参考链接</a></p>\n</li>\n</ul>\n<h2 id=\"jquery\"><a href=\"#jquery\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery</h2>\n<p>公司项目中，用到了jQuery，所以有必要考察一下这方面的基础，其实如果前面问题回答的足够出色，这一块可以忽略，因为相信有了前面的基础，jQuery上手会很快。</p>\n<ul>\n<li>\n<p><strong>jQuery是个框架还是类库，为什么使用？</strong></p>\n</li>\n<li>\n<p><strong>如何使用jQuery获取元素的属性</strong></p>\n</li>\n<li>\n<p><strong>如何使用jQuery同时选取多个元素</strong></p>\n</li>\n<li>\n<p><strong>单击下面P标签，其背景色变为黑色，再单击回复原来颜色，使用jQuery实现</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>test_tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我变色，再点我恢复<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>大概写出jQuery下AJAX使用场景</strong></p>\n</li>\n</ul>\n<h2 id=\"其它\"><a href=\"#%E5%85%B6%E5%AE%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其它</h2>\n<ul>\n<li>\n<p><strong>为什么说在多个域名下存放静态资源会好一些？</strong></p>\n</li>\n<li>\n<p><strong>浏览器地址栏输入URL敲回车那一刻起到页面完全呈现出，尽可能详细描述出中间发生了什么。</strong></p>\n</li>\n<li>\n<p><strong>长轮询，Websocket，SSE</strong></p>\n</li>\n<li>\n<p><strong>HTTP Method 有哪些，尽可能多地列举</strong></p>\n</li>\n</ul>\n<h1 id=\"结束\"><a href=\"#%E7%BB%93%E6%9D%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结束</h1>\n<p>以上是我经过思考与总结的一套前端技术面试题，大部分都能在网上找到答案。当然，面试时不会都问到，随机选七八个问题就差不多了。前端远不止这些，有很多比较成熟的技术并没有提及，比如NODE.js，比如Angular.js，再比如React.js，但招聘的目的不是为了炫技，更不是要故意为难应聘者，而是筛选出适合公司发展的人员。可以参考，但不要照搬，靠谱与否，自己衡量。</p>\n<h1 id=\"参考\"><a href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<ul>\n<li><a href=\"https://github.com/h5bp/Front-end-Developer-Interview-Questions\">Front-end Job Interview Questions</a></li>\n</ul>","frontmatter":{"title":"前端面试题的思考","date":"2016-03-06T09:31:37.000Z","category":"阅读笔记","tags":["前端","备忘","面试","成长"],"cover":"https://zerosoul.github.io/2016/03/06/how-to-interview/areyouok.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/how-to-interview/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li>\n<p><a href=\"/posts/how-to-interview/#%E9%9D%A2%E8%AF%95%E9%A2%98\">面试题</a></p>\n<ul>\n<li><a href=\"/posts/how-to-interview/#%E9%A2%84%E7%83%AD\">预热</a></li>\n<li><a href=\"/posts/how-to-interview/#html\">HTML</a></li>\n<li><a href=\"/posts/how-to-interview/#css\">CSS</a></li>\n<li><a href=\"/posts/how-to-interview/#javascript\">Javascript</a></li>\n<li><a href=\"/posts/how-to-interview/#jquery\">jQuery</a></li>\n<li><a href=\"/posts/how-to-interview/#%E5%85%B6%E5%AE%83\">其它</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/how-to-interview/#%E7%BB%93%E6%9D%9F\">结束</a></li>\n<li><a href=\"/posts/how-to-interview/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/hign-performance-site"},"html":"<p>“后端”用于分析用户请求、执行数据查询并对结果进行组织，形成浏览器可以呈现的内容；“前端”负责将后端生成的内容通过网络发送给客户端浏览器。</p>\n<h1 id=\"高性能网站指南\"><a href=\"#%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E6%8C%87%E5%8D%97\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>高性能网站指南</h1>\n<h2 id=\"减少http请求\"><a href=\"#%E5%87%8F%E5%B0%91http%E8%AF%B7%E6%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>减少HTTP请求</h2>\n<h2 id=\"使用cdn\"><a href=\"#%E4%BD%BF%E7%94%A8cdn\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用CDN</h2>\n<h2 id=\"添加expires头\"><a href=\"#%E6%B7%BB%E5%8A%A0expires%E5%A4%B4\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>添加Expires头</h2>\n<ul>\n<li>可以同时指定这两个响应头<code class=\"language-text\">Expires</code>和<code class=\"language-text\">Cache-Control max-age</code>，如果两个同时出现，<code class=\"language-text\">max-age</code>将重写<code class=\"language-text\">Expires</code>。</li>\n</ul>\n<h2 id=\"压缩脚本和样式表\"><a href=\"#%E5%8E%8B%E7%BC%A9%E8%84%9A%E6%9C%AC%E5%92%8C%E6%A0%B7%E5%BC%8F%E8%A1%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>压缩脚本和样式表</h2>\n<ul>\n<li>并不是每个浏览器都支持gzip的，所以Web服务器需要通过<code class=\"language-text\">Vary</code>头来告诉浏览器压缩的决定是基于哪种策略，比如<code class=\"language-text\">Vary:Accept-Encoding</code>、<code class=\"language-text\">Vary:Accept-Encoding,User-Agent</code>。</li>\n</ul>\n<h2 id=\"将样式表放在顶部\"><a href=\"#%E5%B0%86%E6%A0%B7%E5%BC%8F%E8%A1%A8%E6%94%BE%E5%9C%A8%E9%A1%B6%E9%83%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将样式表放在顶部</h2>\n<ul>\n<li>在样式表正确地下载并解析之后，已经呈现的文字和图片要用新的样式重绘了，这就是“无样式内容的闪烁”（Flash of Unstyled Content:FOUC）</li>\n</ul>\n<h2 id=\"将脚本放在底部\"><a href=\"#%E5%B0%86%E8%84%9A%E6%9C%AC%E6%94%BE%E5%9C%A8%E5%BA%95%E9%83%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将脚本放在底部</h2>\n<ul>\n<li><code class=\"language-text\">defer</code>属性表明脚本不包含<code class=\"language-text\">document.write</code>，浏览器得到这一线索就可继续进行呈现。</li>\n</ul>\n<h2 id=\"避免css表达式\"><a href=\"#%E9%81%BF%E5%85%8Dcss%E8%A1%A8%E8%BE%BE%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>避免CSS表达式</h2>\n<h2 id=\"外联javascript和css\"><a href=\"#%E5%A4%96%E8%81%94javascript%E5%92%8Ccss\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>外联Javascript和CSS</h2>\n<h2 id=\"减少dns查找\"><a href=\"#%E5%87%8F%E5%B0%91dns%E6%9F%A5%E6%89%BE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>减少DNS查找</h2>\n<ul>\n<li>使用<code class=\"language-text\">Keep-Alive</code>和较少的域名</li>\n</ul>\n<h2 id=\"精简javascript\"><a href=\"#%E7%B2%BE%E7%AE%80javascript\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>精简JavaScript</h2>\n<h2 id=\"避免重定向\"><a href=\"#%E9%81%BF%E5%85%8D%E9%87%8D%E5%AE%9A%E5%90%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>避免重定向</h2>\n<h2 id=\"删除重复脚本\"><a href=\"#%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%84%9A%E6%9C%AC\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>删除重复脚本</h2>\n<ul>\n<li>确保脚本只被包含一次</li>\n</ul>\n<h2 id=\"配置etag\"><a href=\"#%E9%85%8D%E7%BD%AEetag\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置ETag</h2>\n<h2 id=\"缓存ajax\"><a href=\"#%E7%BC%93%E5%AD%98ajax\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>缓存AJAX</h2>","frontmatter":{"title":"阅读笔记《高性能网站建设指南》","date":"2016-02-09T13:32:58.000Z","category":"阅读笔记","tags":["互联网","技术","备忘","阅读"],"cover":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/hign-performance-site/#%E9%AB%98%E6%80%A7%E8%83%BD%E7%BD%91%E7%AB%99%E6%8C%87%E5%8D%97\">高性能网站指南</a></p>\n<ul>\n<li><a href=\"/posts/hign-performance-site/#%E5%87%8F%E5%B0%91http%E8%AF%B7%E6%B1%82\">减少HTTP请求</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E4%BD%BF%E7%94%A8cdn\">使用CDN</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E6%B7%BB%E5%8A%A0expires%E5%A4%B4\">添加Expires头</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E5%8E%8B%E7%BC%A9%E8%84%9A%E6%9C%AC%E5%92%8C%E6%A0%B7%E5%BC%8F%E8%A1%A8\">压缩脚本和样式表</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E5%B0%86%E6%A0%B7%E5%BC%8F%E8%A1%A8%E6%94%BE%E5%9C%A8%E9%A1%B6%E9%83%A8\">将样式表放在顶部</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E5%B0%86%E8%84%9A%E6%9C%AC%E6%94%BE%E5%9C%A8%E5%BA%95%E9%83%A8\">将脚本放在底部</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E9%81%BF%E5%85%8Dcss%E8%A1%A8%E8%BE%BE%E5%BC%8F\">避免CSS表达式</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E5%A4%96%E8%81%94javascript%E5%92%8Ccss\">外联Javascript和CSS</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E5%87%8F%E5%B0%91dns%E6%9F%A5%E6%89%BE\">减少DNS查找</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E7%B2%BE%E7%AE%80javascript\">精简JavaScript</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E9%81%BF%E5%85%8D%E9%87%8D%E5%AE%9A%E5%90%91\">避免重定向</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%84%9A%E6%9C%AC\">删除重复脚本</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E9%85%8D%E7%BD%AEetag\">配置ETag</a></li>\n<li><a href=\"/posts/hign-performance-site/#%E7%BC%93%E5%AD%98ajax\">缓存AJAX</a></li>\n</ul>\n</li>\n</ul>","excerpt":"“后端”用于分析用户请求、执行数据查询并对结果进行组织，形成浏览器可以呈现的内容；“前端”负责将后端生成的内容通过网络发送给客户端浏览器。 高性能网站指南 减少HTTP请求 使用CDN 添加Expires…"}},{"node":{"fields":{"slug":"/posts/high-performance-web-sites-note"},"html":"<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>这篇文章是<a href=\"http://book.douban.com/subject/3132277/\">《高性能网站建设指南——前端工程师技能精髓》</a>的读书笔记，即，<a href=\"https://developer.yahoo.com/performance/rules.html\">雅虎14条军规</a>扩展版。个人认为书名副标题取名并不精确，<strong>前端工程师优化技能精髓</strong>似乎更适合，本文粗线条地记录了我觉得应该记录下来的知识点。个人备忘录，不具备连贯性，看不懂就对了。</p>\n<h1 id=\"通识\"><a href=\"#%E9%80%9A%E8%AF%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>通识</h1>\n<h1 id=\"性能黄金法则\"><a href=\"#%E6%80%A7%E8%83%BD%E9%BB%84%E9%87%91%E6%B3%95%E5%88%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>性能黄金法则</h1>\n<p>最终用户只有10%~20%的响应时间花在了下载HTML文档上，其余的80%~90%时间花在了下载页面中的所有组件上。<br>\n<strong>注：该统计出于大概十年前，现在比例应该有所变化，但还是有很大的优化空间</strong></p>\n<h1 id=\"http备忘点\"><a href=\"#http%E5%A4%87%E5%BF%98%E7%82%B9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTTP备忘点</h1>\n<h2 id=\"压缩\"><a href=\"#%E5%8E%8B%E7%BC%A9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>压缩</h2>\n<p>Request：<code class=\"language-text\">Accept-Encoding: gzip,deflate</code><br>\nResponse:<code class=\"language-text\">Content-Encoding: gzip</code></p>\n<h2 id=\"条件get请求\"><a href=\"#%E6%9D%A1%E4%BB%B6get%E8%AF%B7%E6%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>条件Get请求</h2>\n<p>Request:<code class=\"language-text\">If-Modified-Since: Wed, 22 Feb 2016 09:23:44 GMT</code><br>\nResponse:<code class=\"language-text\">Last-Modified: Wed, 22 Feb 2016 09:23:44 GMT</code></p>\n<h2 id=\"expires\"><a href=\"#expires\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Expires</h2>\n<p>Response:<code class=\"language-text\">Expires: Wed, 22 Feb 2016 09:23:44 GMT</code></p>\n<h2 id=\"keep-alive\"><a href=\"#keep-alive\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keep-Alive</h2>\n<p>Request:<code class=\"language-text\">Connection: keep-alive</code><br>\nResponse:<code class=\"language-text\">Connection: keep-alive</code></p>\n<h1 id=\"14军规\"><a href=\"#14%E5%86%9B%E8%A7%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://developer.yahoo.com/performance/rules.html\">14军规</a></h1>\n<h1 id=\"减少http请求-make-fewer-http-request\"><a href=\"#%E5%87%8F%E5%B0%91http%E8%AF%B7%E6%B1%82-make-fewer-http-request\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>减少HTTP请求 <em>Make Fewer HTTP Request</em></h1>\n<ul>\n<li>图片地图</li>\n<li>CSS Sprites<br>\n很多人认为合并后的图片会比分离的图片综合要大，因为合并后包含附加的空白区域。实际上恰恰相反，因为它降低了图片自身的开销（颜色表，格式信息，等等）</li>\n<li>内联图片<br>\n<code class=\"language-data:[<mediatype\">][;base64],&lt;data</code></li>\n<li>合并脚本和样式表</li>\n</ul>\n<h1 id=\"使用内容发布网络（cdn）\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%86%85%E5%AE%B9%E5%8F%91%E5%B8%83%E7%BD%91%E7%BB%9C%EF%BC%88cdn%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用内容发布网络（CDN）</h1>\n<ul>\n<li>缺点：修改HTTP响应头必须通过第三方完成。</li>\n</ul>\n<h1 id=\"添加expires头\"><a href=\"#%E6%B7%BB%E5%8A%A0expires%E5%A4%B4\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>添加Expires头</h1>\n<ul>\n<li>可以同时制定两个响应头：Expires和Cache-Control的max-age。如果两者同时出现，HTTP规范规定max-age指令将重写Expires头，例如：<br>\n<code class=\"language-text\">Expires: Mon,15 Apr 2024 20:00:00 GMT</code><br>\n<code class=\"language-text\">Cache-Control: max-age=312</code></li>\n</ul>\n<h1 id=\"开启gzip压缩\"><a href=\"#%E5%BC%80%E5%90%AFgzip%E5%8E%8B%E7%BC%A9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开启Gzip压缩</h1>\n<ul>\n<li>注意点：代理缓存</li>\n<li>在Web服务器相应中添加<code class=\"language-text\">Vary</code>头，这样就可以告诉代理根据一个或多个请求头来改变缓存的响应。<br>\n<code class=\"language-text\">Vary: Accept-Encoding</code><br>\n代理缓存响应的多个版本，当有gzip头的请求时，响应压缩过的，反之是未经压缩的。</li>\n<li>禁用缓存：<code class=\"language-text\">Vary: *</code>或<code class=\"language-text\">Cache-Control: private</code></li>\n</ul>\n<h1 id=\"将样式表放在顶部\"><a href=\"#%E5%B0%86%E6%A0%B7%E5%BC%8F%E8%A1%A8%E6%94%BE%E5%9C%A8%E9%A1%B6%E9%83%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将样式表放在顶部</h1>\n<ul>\n<li>样式表放在底部对加载页面所需的实际时间并没有太大影响，但会导致浏览器阻止内容逐步呈现，这让用户感性上觉得页面加载更慢。</li>\n<li>无样式内容的闪烁FOUC（Flash of Unstyled Content）是浏览器行为，在样式表正确地下载并解析后，已经呈现的文字和图片要用新的样式重绘了。浏览器可以延迟呈现，知道所有样式表下载完毕，这导致了白屏，反之可以逐步呈现，但要承担闪烁的风险，这里没有完美的选择。</li>\n</ul>\n<h1 id=\"将脚本放在底部\"><a href=\"#%E5%B0%86%E8%84%9A%E6%9C%AC%E6%94%BE%E5%9C%A8%E5%BA%95%E9%83%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>将脚本放在底部</h1>\n<ul>\n<li>\n<p>放在顶部的影响：</p>\n<ul>\n<li>会阻塞对其后面内容的呈现</li>\n<li>会阻塞对其后面资源的下载</li>\n</ul>\n</li>\n<li><code class=\"language-text\">defer</code>属性表明脚本不包含<code class=\"language-text\">document.write</code>，浏览器有这个线索可以继续呈现。</li>\n</ul>\n<h1 id=\"避免css表达式\"><a href=\"#%E9%81%BF%E5%85%8Dcss%E8%A1%A8%E8%BE%BE%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>避免CSS表达式</h1>\n<ul>\n<li>谁会想到用户点击了一个文本框会导致IE锁死呢。</li>\n<li>\n<p>避免方式：创建一次性表达式和使用事件处理器取代CSS表达式</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n    <span class=\"token selector\">p</span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">expression</span><span class=\"token punctuation\">(</span> <span class=\"token function\">altBg</span><span class=\"token punctuation\">(</span>this<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n    <span class=\"token keyword\">function</span> <span class=\"token function\">altBg</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        ele<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"#f08\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"B98\"</span>\n    <span class=\"token punctuation\">}</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"使用外部javascript和css\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8javascript%E5%92%8Ccss\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用外部javascript和css</h1>\n<ul>\n<li>页面浏览量越少，内联论据越强势，反之外置论据越强势。</li>\n</ul>\n<h1 id=\"减少dns查找\"><a href=\"#%E5%87%8F%E5%B0%91dns%E6%9F%A5%E6%89%BE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>减少DNS查找</h1>\n<ul>\n<li>将静态资源放在独立域名下较好，但不要超过四个，在减少DNS查找和允许并行下载之间做出权衡。</li>\n</ul>\n<h1 id=\"精简javascript和css\"><a href=\"#%E7%B2%BE%E7%AE%80javascript%E5%92%8Ccss\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>精简javascript和CSS</h1>\n<ul>\n<li>gzip压缩产生的影响更大，但精简能够进一步减小文件大小。</li>\n</ul>\n<h1 id=\"避免重定向\"><a href=\"#%E9%81%BF%E5%85%8D%E9%87%8D%E5%AE%9A%E5%90%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>避免重定向</h1>\n<ul>\n<li>\n<p>当服务器向浏览器返回一个重定向时，是指一个范围在3XX的状态码，表示用户代理必须执行进一步操作才能完成请求。</p>\n<ul>\n<li>300 Multiple Choices</li>\n<li>302 Moved Permancently</li>\n<li>302 Moved Temporarily</li>\n<li>303 See other</li>\n<li>304 Not Modified (并非重定向，用来响应条件GET请求)</li>\n<li>305 Use Proxy</li>\n<li>306 不再使用</li>\n<li>307 Temporary Redirect</li>\n</ul>\n</li>\n<li><code class=\"language-text\">301</code>和<code class=\"language-text\">302</code>是使用最多的,<code class=\"language-text\">303</code>和<code class=\"language-text\">307</code>是HTTP 1.1添加的，用来澄清对302的使用，但现实情况是几乎没人采用。</li>\n<li>\n<p>还有其他方式：</p>\n<ul>\n<li>HTML META :<code class=\"language-text\">&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0; url=http://google.com&quot;&gt;</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"删除重复脚本\"><a href=\"#%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%84%9A%E6%9C%AC\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>删除重复脚本</h1>\n<ul>\n<li>确保脚本只被包含一次，否则会带来性能损伤。</li>\n</ul>\n<h1 id=\"配置etag\"><a href=\"#%E9%85%8D%E7%BD%AEetag\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配置ETag</h1>\n<ul>\n<li>ETag是唯一标识一个静态资源特定版本的字符串。</li>\n<li>If-None-Match比If-Modified-Since具有更高的优先级</li>\n<li>ETag可能会引发性能问题，这时候完全可以移除ETag</li>\n</ul>\n<h1 id=\"使ajax可缓存\"><a href=\"#%E4%BD%BFajax%E5%8F%AF%E7%BC%93%E5%AD%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使AJAX可缓存</h1>\n<ul>\n<li>当数据被认为是私有的时候，大多会使用<code class=\"language-text\">Cache-Control: no-store</code>。这样的响应根本不会被写入磁盘。</li>\n<li>确保AJAX请求遵守性能优化原则，尤其应具有长久的Expires头</li>\n</ul>\n<h1 id=\"读后感\"><a href=\"#%E8%AF%BB%E5%90%8E%E6%84%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>读后感</h1>\n<p>虽然知识点比较基础，但并不过时，读后我立即在自己博客上实践了下：</p>\n<ul>\n<li>图片使用七牛CDN，感谢<a href=\"https://github.com/gyk001/hexo-qiniu-sync\">hexo-qiniu-sync</a>，访问速度明显加快。</li>\n<li>删掉和替换掉了一些鸡肋功能，比如<a href=\"https://github.com/iissnan/hexo-theme-next\">NexT主题</a>自带的浏览图片插件，换成了自己的简洁实现。</li>\n<li>本来想搞一下HTTP配置，由于本站HOST在Github上，无从下手，好在Github在HTTP优化原则上已经做得很好了，省心省力。</li>\n</ul>\n<p>除了HTML/CSS/JavaScript(这三样已经够折腾的了)，一个优秀的前端工程师还应该具备什么样的技能呢？从这本书可以得到点启发：</p>\n<ul>\n<li>理解HTTP协议[<a href=\"http://book.douban.com/subject/10746113/\">《HTTP权威指南》</a>足矣]</li>\n<li>了解浏览器工作原理及不同浏览器间的差异</li>\n<li>掌握服务器端编程[可以从Node入手]</li>\n<li>了解网络环境配置[可以学学Nginx]</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2016/01/30/high-performance-web-sites-note/hp.jpg\" alt=\"high performance\"></p>","frontmatter":{"title":"再读雅虎14条军规","date":"2016-01-30T09:31:37.000Z","category":"阅读笔记","tags":["前端","备忘","优化","雅虎军规"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E9%80%9A%E8%AF%86\">通识</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E6%80%A7%E8%83%BD%E9%BB%84%E9%87%91%E6%B3%95%E5%88%99\">性能黄金法则</a></li>\n<li>\n<p><a href=\"/posts/high-performance-web-sites-note/#http%E5%A4%87%E5%BF%98%E7%82%B9\">HTTP备忘点</a></p>\n<ul>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%8E%8B%E7%BC%A9\">压缩</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E6%9D%A1%E4%BB%B6get%E8%AF%B7%E6%B1%82\">条件Get请求</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#expires\">Expires</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#keep-alive\">Keep-Alive</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/high-performance-web-sites-note/#14%E5%86%9B%E8%A7%84\">14军规</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%87%8F%E5%B0%91http%E8%AF%B7%E6%B1%82-make-fewer-http-request\">减少HTTP请求 Make Fewer HTTP Request</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E4%BD%BF%E7%94%A8%E5%86%85%E5%AE%B9%E5%8F%91%E5%B8%83%E7%BD%91%E7%BB%9C%EF%BC%88cdn%EF%BC%89\">使用内容发布网络（CDN）</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E6%B7%BB%E5%8A%A0expires%E5%A4%B4\">添加Expires头</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%BC%80%E5%90%AFgzip%E5%8E%8B%E7%BC%A9\">开启Gzip压缩</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%B0%86%E6%A0%B7%E5%BC%8F%E8%A1%A8%E6%94%BE%E5%9C%A8%E9%A1%B6%E9%83%A8\">将样式表放在顶部</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%B0%86%E8%84%9A%E6%9C%AC%E6%94%BE%E5%9C%A8%E5%BA%95%E9%83%A8\">将脚本放在底部</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E9%81%BF%E5%85%8Dcss%E8%A1%A8%E8%BE%BE%E5%BC%8F\">避免CSS表达式</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E4%BD%BF%E7%94%A8%E5%A4%96%E9%83%A8javascript%E5%92%8Ccss\">使用外部javascript和css</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%87%8F%E5%B0%91dns%E6%9F%A5%E6%89%BE\">减少DNS查找</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E7%B2%BE%E7%AE%80javascript%E5%92%8Ccss\">精简javascript和CSS</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E9%81%BF%E5%85%8D%E9%87%8D%E5%AE%9A%E5%90%91\">避免重定向</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E8%84%9A%E6%9C%AC\">删除重复脚本</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E9%85%8D%E7%BD%AEetag\">配置ETag</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E4%BD%BFajax%E5%8F%AF%E7%BC%93%E5%AD%98\">使AJAX可缓存</a></li>\n<li><a href=\"/posts/high-performance-web-sites-note/#%E8%AF%BB%E5%90%8E%E6%84%9F\">读后感</a></li>\n</ul>","excerpt":"前言 这篇文章是 《高性能网站建设指南——前端工程师技能精髓》 的读书笔记，即， 雅虎14条军规 扩展版。个人认为书名副标题取名并不精确， 前端工程师优化技能精髓 似乎更适合，本文粗线条地记录了我觉得应该记录下来的知识点。个人备忘录，不具备连贯性，看不懂就对了。 通识 性能黄金法则 最终用户只有1…"}},{"node":{"fields":{"slug":"/posts/financial-iq"},"html":"<p><img src=\"https://zerosoul.github.io/2016/04/16/Financial-IQ/fubaba.jpg\" alt=\"富爸爸\"></p>\n<blockquote>\n<p>财富就是支撑一个人生存多长时间的能力，或者说，如果我今天停止工作，我还能活多久。\n<cite>巴克敏斯特.富勒</cite></p>\n</blockquote>\n<h1 id=\"一\"><a href=\"#%E4%B8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>一</h1>\n<p>美国作家罗伯特清崎写的<a href=\"https://book.douban.com/subject/1033778/\">《富爸爸穷爸爸》</a>是本老书了，因为在我的记忆里，自家小书店很久就有这本书了，而且属于积压货，对，就是连我都不屑翻看的那种积压货。前段时间有同事推荐一读，于是买来就一直放着，最近两天才拿起。差点被这沾满铜臭味的书名欺骗了，其实不谈钱就像迷恋钱一样，是一种精神上的疾病，书中所讲的一些观点还是值得深思与实践的。</p>\n<h1 id=\"二\"><a href=\"#%E4%BA%8C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>二</h1>\n<p>罗伯特清崎从人的个体出发分析富人之所以成为富人，穷人之所以成为穷人，提出了一个全新的“财商”的概念，并向学校教育提出挑战。清崎有两个爸爸，一个有博士学位是他的亲生爸爸，也就是本书中的穷爸爸，另外一个初中都没有读完是他好友的爸爸，即富爸爸。两个爸爸都有非常高的收入，但是穷爸爸却常为钱所烦恼，而富爸爸最终成为了夏威夷最富有的人，并在过世后给家人留下了很多财产，而穷爸爸则给家人留下了很多还没有还清的债务。之所以会出现这种情况，是因为穷爸爸缺乏基本的财务知识，而关于财商的培养最大的问题是学校没有教授过这门学科，即使穷爸爸是博士学位。有关财商的教育基本是来自家庭，这就造成了穷人家庭接受的是穷人思维，富人更富有创造性，愿意经过精心筹划后再去冒险，阶级自此划分。</p>\n<p>我们从小就被教育说：好好上学，毕业了找份好工作，但几乎从未认真思考过这样一个问题：好好读书就可以找到好工作吗，找到好工作就可以变富有吗。现在来看，尤其是工作几年后，答案应该都是否定的。真相是天天为金钱而忙碌，一旦陷入这种虚假的忙碌陷阱，就和那些蹬着小铁笼不停转圈的老鼠一样，它们的小毛腿蹬得飞快，小铁笼也转的飞快，可到了第二天早上，发现自己依然被困在笼子里，就像你被你的工作困住一样。这样的生活毫无意义，疲于奔命却摆脱不了贫困的现实。，那么，为什么不能让金钱为我们工作呢？学会管理风险与投资，似乎是走向这条道路的第一步。把金钱看得越重，就会为金钱工作得越辛苦，如果知道“金钱不是真实的资产”这一道理，小铁笼似乎就开始松垮了…</p>\n<h1 id=\"三\"><a href=\"#%E4%B8%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三</h1>\n<p>如果你和我一样并没有出身在那1%的家庭，可以学习作者向富爸爸学习的知识：首先，必须要了解两个词<strong>资产</strong>和<strong>负债</strong>。资产就是能把钱放入自己口袋的东西，而负债就是把钱从口袋里取走的东西。任何东西都可以是资产，也可以是负债。比如说你拥有一套房子，每个月要支付3000元，那这套房子就是负债，而如果租出去每月能带来3000元房租，那它就是你的一项资产了。了解这两者的差别非常重要，因为穷人花钱只有消费，没有购置资产的意识，富人花钱则是买进资产，而中产阶级花钱买自以为是资产的负债。</p>\n<p>毕业后在求职大军里谋得一份工作，于是就有了收入，随着经验的丰富，薪水提高了，但更多的问题产生了，会面临着买房买车，也会想换一个iPhone 6s，于是就开始买入自以为是资产的负债，每个月要为房子还贷，为车子加油，为电话缴费，除非对金钱的思维方式作出重大改变，也就是买能把钱放进口袋的资产，不然无论薪水有多高，钱都会比必要支出多出那么一点点而已。朋友可能会羡慕你的最新款手机，但实际上并没有钱，只是看起来很有钱罢了。</p>\n<p>如果跟随上学然后上班的道路，那么在继续工作的同时，要确保辛苦赚来的钱投入在购买真正的资产而非看起来像资产的负债上，当资产产生的收入，这好像叫<strong>被动收益</strong>，高于你的支出，那就不再需要这份工作了，进而达到了财务自由的境界。</p>\n<h1 id=\"四\"><a href=\"#%E5%9B%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>四</h1>\n<p>学校是生产好雇员而非好雇主的地方，当前的教育体系致力于让学生学习知识并找到好工作，一旦从学校走出，每个人便不得不贴上职业标签：程序员，销售员，工程师，科学家，厨师，警察等等。成为工薪阶层，并为钱而工作，但是只局限于所学专业的可怕后果在于：它会让你忘记关注自己的事业，反而耗尽一生去关注别人的事业，也就是老板的事业，并使他人致富。而自己的事业重心是资产项，而不是收入项，正如前面说过的秘诀是要知道资产与负债的区别，并且去买入资产。富人关心的是资产，而其他人关心的是收入，如果我们学习掌握一些财务知识，在通向财务自由的路上还是会面临许多的障碍：</p>\n<ol>\n<li>恐惧心理</li>\n<li>愤世嫉俗</li>\n<li>懒惰</li>\n<li>不良习惯</li>\n<li>自负</li>\n</ol>\n<p>如果我们知道自己在哪一个问题上有所欠缺，那最好找本领域的相关书籍好好学习克服我们所面临的困难。解决了这五个问题就可以开始行动了：</p>\n<ul>\n<li>首先要有发自内心深处的精神动力，如果促使前进的动力不够强大，那么前行道路上的严酷现实就会退缩，所以必须要有一个强有力的理由和目标，只有这样才会有持续前进的动力。</li>\n<li>行动中也要明白关系的力量，也就是朋友圈。当然不应该把金钱当成挑选朋友的唯一标准，朋友中可以有穷困潦倒的，也有财务自由的，三人行必有我师焉，学习每个人身上的优点，与有钱的朋友交往并非是为了得到他们的钱财，而是学习他们得以致富的方法和知识。</li>\n<li>掌握一种模式，然后再学习一种新的模式，重要的是要学会快速学习。在钱的问题上，大多数人只知道一个基本的挣钱模式，这个模式在学校就已经奠定，就是为了金钱工作，每天数以亿计的人起床上班挣钱还贷支付账单，如果对自己所做的工作感到厌倦或是觉得挣得不多，那么可以尝试下改变你的挣钱模式，</li>\n<li>学会控制自己，也就是自律，首先支付自己，当资金短缺时，让压力发挥作用，而不要动用储蓄或资本。</li>\n</ul>\n<h1 id=\"五\"><a href=\"#%E4%BA%94\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>五</h1>\n<p>在今天这个日新月异的社会中，如果想找一个赚钱的方法机会很多，可以先停下来评估下自己的做法中哪些有效，哪些无效，在学习中寻找新的思想和新的赚钱模式。上天赐予每个人两样伟大礼物：思想和时间。运用这两件礼物去做愿意做的事情吧，比如致富。</p>\n<h1 id=\"金句\"><a href=\"#%E9%87%91%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>金句</h1>\n<ul>\n<li>受过良好教育的父亲鼓励儿子成为聪明人，而富有的父亲则鼓励雇用聪明人</li>\n<li>一个爸爸会说：贪财乃万恶之源。而另一个爸爸却说：贫穷才是万恶之本。</li>\n<li>我的一个爸爸总是习惯说“我可付不起”，而另一个爸爸则禁止我们说这样的话，他坚持让我这样说：“我怎样才能付得起？”这两句话，一句是陈述句，另一句是疑问句。一句让你放弃，而另一句则促使你去想办法。我那个在不久之后就富起来的爸爸解释，当你下意识地说出“我付不起”的时候，你的大脑就会停止思考；而如果你自问“我怎样才能付得起”，则会让你的大脑动起来。当然，他的意思并不是让你把每件想要的东西都买到手，这里只是强调要不停地锻炼你的大脑——它是世界上最强大的“计算机”。富爸爸说：“我的大脑越用越活，大脑越活，我挣的钱就越多。”他认为，下意识地说“我可付不起”意味着精神上的懒惰。</li>\n<li>一个爸爸努力存钱，而另一个爸爸则不断投资。</li>\n<li>了解钱的运动规律并让钱为我工作。我不为钱工作，我要让钱为我工作。</li>\n<li>你的确想赢，但失败的恐惧超过了成功的兴奋。只有你知道，在你的内心深处，你始终认为 你不可能赢，所以你选择了稳定。</li>\n<li>造成贫困和财务问题的主要原因是恐惧和无知，而不是经济环境、政府或者富人。</li>\n<li>一直生活在无知和恐惧中，从不追求自己的梦想，这是可悲的。为钱拼命工作，以为钱能带来快乐，也是可悲的。</li>\n<li>我想这就是财务上的自由。资产已经多到可以自我增值，就像种下了一棵树，你年复一年地浇灌它，终于有一天它不再需要你的照料，可以自己生长了。它的根已足够深，你现在开始享受它的树荫了。</li>\n<li>在现实世界里，人们往往是依靠勇气而不是聪明去领先于其他人的。</li>\n<li>你把金钱看得越重要，你就会为金钱工作得越辛苦。如果你能够懂得‘金钱不是真实的资产’这一道理，你就会更快地富起来。” </li>\n<li>大部分人从来不赢是因为他们太害怕失去，这也是我发现的学校教育的一大误区。在学校里，我们被告知错误是坏事，如果我们犯了错误就会受到惩罚。然而，如果你看看人类学习的方法，就会明白人类其实就是在犯错误的过程中进行学习的。我们从跌倒中学会了走路，如果我们从不跌倒，我们就永远也学不会走路。学骑自行车也是同样的道理，尽管我的膝盖上仍有伤疤，但我今天骑自行车时已不费吹灰之力了。富裕起来更是同样的道理，不幸的是，大部分人不富有的主要原因就在于他们太担心失去。胜利者是不怕失去的，但失败者都害怕失去。失败是成功之母，如果避开失败，也就避开了成功。 </li>\n<li>对于受过良好教育的爸爸来说，稳定的工作就是一切。而对于富爸爸来说，不断学习才是一切。 </li>\n<li>一旦人们为支付生活的账单而整天疲于奔命，就和那些蹬着小铁笼子不停转圈的小老鼠一样了。老鼠的小毛腿蹬得飞快，小铁笼也转得飞快，可到了第二天早上醒来，他们发现自己依然困在老鼠笼里。</li>\n<li>生活就像我去健身房，最痛苦的事情是作出去锻炼的决定，一旦你过了这一关，以后的事情就好办了。有很多次，我害怕去健身房，但是只要我去了，我心里就会感到非常愉快。做完了健身练习后我总是非常高兴地对自己说：做运动真好！</li>\n<li>许多才华横溢的人之所以贫穷，是因为他们只是专心于做好产品，而对如何运作商务体系却知之甚少。</li>\n<li>如果你没有什么资金而又想致富，你首先必须“集中”于一点，而不是追求“平衡”或者说是“分散风险”。那些成功者，在最初并不是追求“平衡”的，追求平衡的人只会在原地踏步而不会前进。要取得进步，你就必须先做到“不平衡”，并注意你怎样才能使自己不断取得进展。 </li>\n<li>未经证实的怀疑和恐惧会产生愤世嫉俗者。愤世嫉俗者抱怨现实，而成功者分析现实。</li>\n<li>当你资金短缺时，去承受外在压力而不要动用你的储蓄或投资，利用这种压力来激发你的财务天赋，想出新办法挣到更多的钱，然后再支付账单。</li>\n</ul>","frontmatter":{"title":"阅读笔记《富爸爸穷爸爸》","date":"2016-01-26T09:31:37.000Z","category":"阅读笔记","tags":["理财","经典","成长","阅读"],"cover":"https://zerosoul.github.io/2016/04/16/Financial-IQ/fubaba.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/financial-iq/#%E4%B8%80\">一</a></li>\n<li><a href=\"/posts/financial-iq/#%E4%BA%8C\">二</a></li>\n<li><a href=\"/posts/financial-iq/#%E4%B8%89\">三</a></li>\n<li><a href=\"/posts/financial-iq/#%E5%9B%9B\">四</a></li>\n<li><a href=\"/posts/financial-iq/#%E4%BA%94\">五</a></li>\n<li><a href=\"/posts/financial-iq/#%E9%87%91%E5%8F%A5\">金句</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/shoot-the-meeting"},"html":"<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>从有单反开始，已经多次跟拍公司活动和会议。依旧小白，经验为数不多，教训却一大堆。最近一次的年会拍摄，环境比较复杂，幸好有位经验丰富的姐姐，我与她一起工作，学了不少实战经验，这篇文章记录了我觉得应该注意的地方，以备后忘。</p>\n<h1 id=\"硬件准备\"><a href=\"#%E7%A1%AC%E4%BB%B6%E5%87%86%E5%A4%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>硬件准备</h1>\n<ul>\n<li>相机：确认没故障，如果有条件，可以有个备用相机；</li>\n<li>电池：最好两块以上的电池，并带好充电器，以免电池原因耽误工作。我有过两次因为相机没电不得不终止拍摄任务的时候，给人一种不专业的感觉。</li>\n<li>镜头：以24-70焦段作为主要镜头。原因很简单，这个焦段广角变形不严重而且包含人像拍摄最佳的50焦段。广角镜头边缘变形很严重，谁也不想自己的面部在照片里变形，所以最好不用。如果可能，带上70-200或100-300的镜头，长焦镜头拍一些领导讲话的特写十分方便，如果可以在会场里走来走去甚至走上主席台，那这个长焦也不用带了；</li>\n<li>储存卡：最好带上一个备用储存卡，尽管现在的记录介质储存容量可以达到2千张4兆图片的容量，但是仍然要带上一个备用的。这种事不怕一万，就怕万一，反正不重。</li>\n<li>脚架：三脚架在这种需要不停走动的场合一般用不上，但是最好带上独脚架，有备无患，反正也不占地。如需拍摄合影，那就别怕麻烦了。</li>\n<li>闪光灯：带上一只机外闪光灯和<strong>两套电池</strong>（备用电池真的很有必要，意外总是能在你想象不到的时候发生）。一般相机自带的闪灯指数较小而且只能直闪，局限较大，容易过度曝光。</li>\n<li>工具：镜头纸、小皮枪、刷子等清洁用品。</li>\n<li>包：准备一个能把这些东西都放进去的摄影包。</li>\n</ul>\n<h1 id=\"相机的使用\"><a href=\"#%E7%9B%B8%E6%9C%BA%E7%9A%84%E4%BD%BF%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>相机的使用</h1>\n<ul>\n<li>iso：如果可能，在室内尽量提高iso。活动拍摄曝光速度的提高能更好的提高图片的清晰度。至于噪点，如果受众不专业，那么根本不会在乎；不过即使碰到了十分专业的看客，那也能理解你的做法。我用过三部相机，都是佳能，以我的感受，5Dmark2以上的相机，iso开到2000,70D的相机可开1000，噪点都在可以忍受的范围之内。如果是600D一类的入门相机，iso800问题也不大[我的就是600D，噗~]。</li>\n<li>光圈：就算镜头很棒，也尽量不要把光圈开的很大。原因有二，首先尽量不使用镜头的光圈值两端，画质会有些轻微的影响；最重要的是大光圈（如2.8）的对焦平面很薄，如果你拍的人物前后相差10厘米，就会出现一实一虚的情况。所以最好在4.5以上。</li>\n<li>闪光灯：屋顶不很高的话，最大值四米左右，采用反射闪光并利用<a href=\"http://toutiao.com/a3676271723/\">眼神光板</a>。反射闪光的好处是在提高拍摄主题亮度的同时，还可以适当提高拍摄环境的亮度，且被摄主题四周，尤其是后面，不会出现十分明显的黑影。眼神光板可以增加被摄主体的亮度，调整眼神光板的反光量可通过调整闪光灯的输出功率（使亮度更高或更低）、改变闪光灯焦段或直接使用柔光板（增加闪光角度）</li>\n</ul>\n<p>在必须使用闪光灯而且需要交代环境的情况下，一般应保证快门速度最少80、光圈不低于4.5（保证足够的对焦平面）、并相应调整iso值后测出曝光准确值。在使用闪光灯后通过调整闪光灯的输出量，找出满意曝光值。这样可以更好表现被摄主体所处的环境。</p>\n<h1 id=\"现场拍摄\"><a href=\"#%E7%8E%B0%E5%9C%BA%E6%8B%8D%E6%91%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>现场拍摄</h1>\n<ol>\n<li>\n<p>空镜头拍摄：到场后一定不要忘记拍摄会场以及会场各区域的空镜。包括会场（曝光要以会场主体，如舞台等数值为主）、大门口签到处、一些较大的会议活动还会在会场外布置横幅、氢气球一类的的布置，也不能忘掉，还有就是特别的细节拍摄（会场装饰物），比如：准备发奖用的奖杯、奖状特写等等。</p>\n</li>\n<li>\n<p>主要人物会前拍摄：活动前要和承办负责人沟通，确定拍摄人物重点（包括主要领导以及受邀来宾等），并且记录主要领导或重要来宾交谈的场面，包括寒暄和互赠名片，尽量能够结合背景的陈设，交代会议场所和环境。</p>\n</li>\n<li>\n<p>过程拍摄：</p>\n</li>\n<li>\n<p>领导讲话：如果条件允许，尽量抵近拍摄。这样可以将主席台的横幅、投影等反映会议内容的信息拍摄在画面当中。拍摄时机需要摄影者掌握，一般在讲话者抬头与参会者眼神交流活有手势时按下快门，这样可使讲话者显得更加生动。也有的领导自始至终不抬头交流，这样的拍摄一般在讲话开始时活结束时会出现抬头的机会。但是为了保险起见，低头的时候一定要拍上几张以免内容缺失。拍摄角度一般要与讲话者同高，尽量不使用仰角或俯角拍摄，并和讲话者保持45度左右的角度；</p>\n</li>\n<li>\n<p>会场：主席台拍摄一定要有全景和单人的特写。由于主席台背景一般色调较暗，拍摄尽量使用人脸曝光值测光数据，注意不要让麦克风、水杯等挡住面部，如果有必要可以有一定的角度。另外会场内前排就坐的一般为比较重要的参会者，所以需要从左右两个方向对会场进行拍摄。最后还要对会场全景拍摄，拍摄位置一般为后场后左、中、右三个位置各拍一张，曝光值同样应该以主席台测光数值为准。</p>\n</li>\n<li>\n<p>互动：一定要注意主要领导和重要与会者的活动并兼顾其他与会者。拍摄尽量做到人物和能够表现活动的主题的背景相结合。当参与活动的人员走动时，应尽量走到前面拍摄，而不是从后面跟随。还要提醒一下，照片的曝光时间，宁欠勿过[这点我做的很不好，往往造成了在光圈模式下照虚了的结果]。</p>\n</li>\n</ol>\n<h1 id=\"再说两句\"><a href=\"#%E5%86%8D%E8%AF%B4%E4%B8%A4%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再说两句</h1>\n<p>以上所讲大部分并非我的原创，有感于年会专业摄影姐姐的谆谆教导，最近这两天也看了一些相关文章，才汇集出此篇文章。会议或活动摄影类似纪实摄影，就算注意事项熟记于心，现场千奇百怪的突发现象也会让你不知所措，这时候才是真正的考验。</p>\n<p>有人问过我，为毛明明可以参与热闹，却干起了累死累活的摄影记录者，最后的结果往往也是吃力不讨好。个中原因我也说不清，最初也是有私心，想借此挡酒，后来觉得这里面有学问，既然做了，就尽力做好。简言之：<strong>始于私心，归于热爱</strong>。</p>\n<p>至此，现场摄影告一段落，需要学的还有很多，不仅仅是技术，更多的是感觉。最后，附上几张我拍过的现场照：</p>\n<p>注：我挑选的是<strong>个人认为可公开的图片</strong>，所以如果有冒犯之处，请与我<a href=\"https://zerosoul.github.io/about/#%E9%9D%9E%E8%AF%9A%E5%8B%BF%E6%89%B0\">联系</a>，删除并道歉。</p>\n<p><img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_1.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_2.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_3.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_4.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_5.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_6.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_7.jpg\"> <img src=\"http://7xo6wq.com1.z0.glb.clouddn.com/static/images/live_8.jpg\"></p>","frontmatter":{"title":"会议&活动拍摄备忘录","date":"2016-01-25T09:31:37.000Z","category":"技术","tags":["摄影","总结"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/shoot-the-meeting/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/shoot-the-meeting/#%E7%A1%AC%E4%BB%B6%E5%87%86%E5%A4%87\">硬件准备</a></li>\n<li><a href=\"/posts/shoot-the-meeting/#%E7%9B%B8%E6%9C%BA%E7%9A%84%E4%BD%BF%E7%94%A8\">相机的使用</a></li>\n<li><a href=\"/posts/shoot-the-meeting/#%E7%8E%B0%E5%9C%BA%E6%8B%8D%E6%91%84\">现场拍摄</a></li>\n<li><a href=\"/posts/shoot-the-meeting/#%E5%86%8D%E8%AF%B4%E4%B8%A4%E5%8F%A5\">再说两句</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/another-email-hiding-technique"},"html":"<p><img src=\"https://zerosoul.github.io/2016/01/23/another-email-hiding-technique/spambot.jpg\" alt=\"spam bot\"></p>\n<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>我们经常会受到垃圾邮件的骚扰，究其原因，其中主要就是平时email地址赤裸裸地暴露在网页中，被垃圾邮件程序（<a href=\"https://en.wikipedia.org/wiki/Spambot\">spambot</a>）探测到，进而向你的邮箱发送大量的营销信息，恶心到吐。</p>\n<h1 id=\"怎么办\"><a href=\"#%E6%80%8E%E4%B9%88%E5%8A%9E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>怎么办</h1>\n<p>上面提到的问题解决办法有许多，这里列举几个常用的：</p>\n<ul>\n<li>使用图片（使用谷歌邮箱的同学应该有所体会）</li>\n<li>使用javascript输出（爬虫只探测静态HTML）</li>\n<li>使用AT, DOT,代替<code class=\"language-text\">@</code>,<code class=\"language-text\">.</code>（好像现在一些爬虫也能识别了）</li>\n<li>简单加密，比如：foo@REMOVETHISbar.baz，真正的email是去掉 <strong>REMOVETHIS</strong>之后的（也可以更形象点foo@REMOVETHISbar.baz）</li>\n<li>使用CSS中的伪类<code class=\"language-text\">:after</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">p:after { content: \"foo\\\\40bar.baz\"; }\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>email me: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n\n/* \\\\40 是Unicode字符 '@'*/\nemail me: foo@bar.baz</code></pre>\n      </div>\n<ul>\n<li>使用flash</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>object</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>application/x-shockwave-flash<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>media/flash/articles/email.swf<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">codebase</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,0,0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>param</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>movie<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>media/email.swf<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>object</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h1 id=\"最优解\"><a href=\"#%E6%9C%80%E4%BC%98%E8%A7%A3\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最优解</h1>\n<blockquote>\n<p>世界上本来没有最优解，用的人觉得很爽，于是就有了。 —詹姆斯.杨二</p>\n</blockquote>\n<p>我个人比较喜欢最小化成本解决问题，所以除了上述几种方式，我更倾向于下面这种：<br>\n不知道你有没有发现，Unicode中有个和 <strong>@</strong>符号很像的字符：<code class=\"language-text\">0xFF20</code>，除此之外，还有个和 <strong>.</strong>很像的字符：<code class=\"language-text\">0x2024</code>。那么这两个Unicode字符在此处就有用武之地了。在网页里，我们可以把foo@bar.com编码为  </p>\n<p>1</p>\n<p>foo＠BAR․com</p>\n<p>最终显示效果：<strong>foo＠BAR․com</strong></p>\n<p>很强大有木有！</p>\n<p>这种方式也不是完美无缺：</p>\n<ul>\n<li>如果流行普及了，爬虫会重新设计算法将其也计入探测范围。</li>\n<li>使用复制粘贴并非预期文本</li>\n</ul>\n<p>总之，没有最好，只有最合适的。</p>\n<h1 id=\"参考\"><a href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<ul>\n<li>\n<p><a href=\"http://www.csarven.ca/hiding-email-addresses\">Methods to hide email addresses from page source</a></p>\n</li>\n<li>\n<p><a href=\"http://lea.verou.me/2009/11/exploring-browser-supported-unicode-characters-and-a-tweet-shortening-experiment/\">exploring browser-supported Unicode characters</a></p>\n</li>\n<li>\n<p><a href=\"http://lea.verou.me/2009/11/yet-another-email-hiding-technique/\">Yet another email hiding technique?</a></p>\n</li>\n</ul>","frontmatter":{"title":"隐藏email地址的小技巧","date":"2016-01-23T09:31:37.000Z","category":"技术","tags":["备忘","email"],"cover":"https://zerosoul.github.io/2016/01/23/another-email-hiding-technique/spambot.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/another-email-hiding-technique/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/another-email-hiding-technique/#%E6%80%8E%E4%B9%88%E5%8A%9E\">怎么办</a></li>\n<li><a href=\"/posts/another-email-hiding-technique/#%E6%9C%80%E4%BC%98%E8%A7%A3\">最优解</a></li>\n<li><a href=\"/posts/another-email-hiding-technique/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","excerpt":"引子 我们经常会受到垃圾邮件的骚扰，究其原因，其中主要就是平时email地址赤裸裸地暴露在网页中，被垃圾邮件程序（ spambot…"}},{"node":{"fields":{"slug":"/posts/evil-with-baidu-connvince"},"html":"<p><img src=\"https://zerosoul.github.io/2016/01/22/evil-with-baidu-connvince/luxun.jpg\" alt=\"missing luxun\"></p>\n<h1 id=\"起早\"><a href=\"#%E8%B5%B7%E6%97%A9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起早</h1>\n<p>深冬的后半夜，月亮下去了，太阳还没有出，只剩下一片冷蓝的天；除了夜游的东西，什么都睡着了。</p>\n<p>华老栓忽然坐起，摸索下了床，找到了开关。啪！阴暗的出租屋内便弥满了青白的光。他走到窗边的桌子，滴，破旧的老电脑出现了熟悉的开机界面。</p>\n<p>过了两三分钟，他熟练地点开浏览器，首页是刺眼的某度LOGO。</p>\n<p>他输入了几个字，进入到某某病的贴吧，点开了一篇图文并茂的帖子，又认真读了一遍，并再三确认了帖子里的评论，拿起了纸，在上面记下了一串数字。</p>\n<p>“小栓他爹，这就去么？”</p>\n<p>是一个老女人的声音。里边的小黑屋里，也发出一阵咳嗽。</p>\n<p>“唔。”</p>\n<p>老栓一面听，一面应，一面扣上衣服；伸手过去说，“你给我罢”。</p>\n<p>华大妈在枕头底下掏了半天，掏出一张银行卡，交给老栓，老栓接了，抖抖的装入衣袋，又在外面按了两下；便拿上手电筒，关掉灯，走向里屋子去了。</p>\n<p>那屋子里面，悉悉窣窣，接着便是一通咳嗽。老栓候他平静下去，才低低的叫道，“小栓……你不要起来。……早饭么？你娘会安排到跟前”。</p>\n<h1 id=\"路上\"><a href=\"#%E8%B7%AF%E4%B8%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>路上</h1>\n<p>老栓听得儿子不再说话，料他安心睡了，便出了门。</p>\n<p>走到街上。街上黑沉沉的一无所有，雾霾都分辨不得，只有一条灰白的路，看得分明。电筒光照着他的两脚，一前一后的走。有时也遇到几只流浪狗，可是一只也没有叫。</p>\n<p>天气比屋子里冷多了；老栓倒觉爽快，仿佛一旦变了少年，得了神通，有给人生命的本领似的，跨步格外高远。而且路也愈走愈分明，天也愈走愈亮了。</p>\n<h1 id=\"买药\"><a href=\"#%E4%B9%B0%E8%8D%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>买药</h1>\n<p>老栓走到银行门口，停住脚步，想了想，拿起手机拨打了电话。电话接通了，传来不耐烦慵懒的声音。</p>\n<p>“谁啊？那么早！”<br>\n“是我，那个…老栓。我现在就打钱给你们，药什么时候能到？”<br>\n“哦！”手机里传来的声音瞬间精神起来，“您放心！今天就给您发货！这两天肯定送到您家！”<br>\n“那药真的管用吗？”<br>\n“您放心吧！您要不信任我们的话，可以上某度贴吧看看啊！里面有好多吃了我们药后康复的病友发的贴子！您说，要没用的话早就有帖子说我们是假药了不是？这消费者的口碑是做不了假的，您就放一百个心吧！”<br>\n“哦，不能便宜点吗？为这病家也没剩多少钱了……”<br>\n“哎呀大叔！我们这药为什么这么贵？就是因为有效果啊！如果卖便宜的话您才需要担心呐！您去某度搜搜这病，首页出来的是不是我们公司的药？为什么？就是因为它效果好啊！如果没有重金投入，怎么出好效果？老实说，要不是您在贴吧咨询过我那么多次，我也了解点您的情况，我怎么可能会给您这么低的价格？”<br>\n“嗯嗯，我知道了，谢谢你啊。我现在就给你转过去，是这个账号没错吧？”老栓拿出纸条，念出数字。<br>\n“没错！就这个！我上班后就给您发货！嘿，老爷子，您可够早的，我这儿天还没亮呢……”<br>\n老栓走到ATM前，插入卡，输入密码，对着纸条一个数字一个数字地输入账号，把钱汇了过去。</p>\n<h1 id=\"回家\"><a href=\"#%E5%9B%9E%E5%AE%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>回家</h1>\n<p>“哎哟老栓这么早出来锻炼？”他走出银行，似乎听得有人问他，但他并不答应；他的精神，现在只在一个包裹上，仿佛那是一个十世单传的婴儿，别的事情，都已置之度外。他现在正等着这个新的生命，移植到家里，收获许多幸福。</p>\n<p>天完全亮了，在他面前，显出一条大道；雾霾淹没了一切，路虽宽，却不知尽头。</p>\n<p>老栓似乎已习惯了这一切，微笑着望向前方，心里感慨道：这世道真是变了啊。从前遇到疑难杂症问路无门，现在有了某度，一切都方便快捷了。</p>\n<h1 id=\"结束\"><a href=\"#%E7%BB%93%E6%9D%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结束</h1>\n<p>“救星啊！”老栓心里暗自感叹，心里有种似曾相识的感觉，想了很久，“对，我儿子出生那天的感觉！”。</p>\n<p>老栓边走边想着病好后的家庭计划，渐渐地，消失在雾霾里…</p>","frontmatter":{"title":"老栓买药","date":"2016-01-22T09:31:37.000Z","category":"技术","tags":["小说","故事新编","鲁迅","百度"],"cover":"https://zerosoul.github.io/2016/01/22/evil-with-baidu-connvince/luxun.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/evil-with-baidu-connvince/#%E8%B5%B7%E6%97%A9\">起早</a></li>\n<li><a href=\"/posts/evil-with-baidu-connvince/#%E8%B7%AF%E4%B8%8A\">路上</a></li>\n<li><a href=\"/posts/evil-with-baidu-connvince/#%E4%B9%B0%E8%8D%AF\">买药</a></li>\n<li><a href=\"/posts/evil-with-baidu-connvince/#%E5%9B%9E%E5%AE%B6\">回家</a></li>\n<li><a href=\"/posts/evil-with-baidu-connvince/#%E7%BB%93%E6%9D%9F\">结束</a></li>\n</ul>","excerpt":"起早 深冬的后半夜，月亮下去了，太阳还没有出，只剩下一片冷蓝的天；除了夜游的东西，什么都睡着了。 华老栓忽然坐起，摸索下了床，找到了开关。啪！阴暗的出租屋内便弥满了青白的光。他走到窗边的桌子，滴，破旧的老电脑出现了熟悉的开机界面。 过了两三分钟，他熟练地点开浏览器，首页是刺眼的某度LOGO…"}},{"node":{"fields":{"slug":"/posts/how-to-ppt"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>技术从业者似乎有个普遍的问题：<strong>不擅长表达</strong>。当然，表达方式有多种：写作，作画，舞蹈，甚至摄影，等等。而此处要说的，特指口头表达，也就是演讲。</p>\n<h1 id=\"工具\"><a href=\"#%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>工具</h1>\n<p>提到演讲，无论是给领导汇报，还是给同事做分享，最好有个PPT做辅助，而这正是干技术的头痛所在：不愿意花时间把PPT做到像市场部那样美轮美奂，认为是浪费时间，最后只是在每一张Slide上放几个词，美名曰“简单即美”，其实是在自欺欺人。</p>\n<p>如果你也遇到过类似烦恼，或许下面提到的两个工具能帮助你：</p>\n<h1 id=\"impressjs\"><a href=\"#impressjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://impress.github.io/impress.js/\">impress.js</a></h1>\n<p><img src=\"https://zerosoul.github.io/2016/01/16/how-to-ppt/impress.png\" alt=\"impress.js\"></p>\n<p>这个神器是我在2014年找工作期间无意间看到的，被官方<a href=\"http://impress.github.io/impress.js/\">Demo</a>的效果惊艳到了，果断找来<a href=\"https://github.com/impress/impress.js/blob/master/js/impress.js\">源码</a>阅读，研究了一下其中的原理，又发现如此绚丽的效果，用到的技术并不复杂：其核心便是CSS3的Transform和Transition特性。但能把这两个特性运用的如此炉火纯青，歪果仁在利用技术方面，又一次领先了。出于对impress.js的喜爱，当时利用此工具，给自己的做了个<a href=\"https://zerosoul.github.io/impress-resume/#/landing_page\">在线简历</a>。现在看来内容多少有些幼稚，但从浏览体验来说，依然不错。Thank to impress.js!</p>\n<p>如果想超赶市场部同事的PPT特效，名副其实的impress.js不会让你失望，相信也会impress到你！</p>\n<h1 id=\"revealjs\"><a href=\"#revealjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://lab.hakim.se/reveal-js/#/\">reveal.js</a></h1>\n<p><img src=\"https://zerosoul.github.io/2016/01/16/how-to-ppt/reveal.png\" alt=\"reveal.js\"></p>\n<p>这个神器是最近一两周才结识的，也是一见钟情并实战了一次，效果不错。它的特点就是简洁，高大上。impress.js的使用还需要一些坐标计算，reveal.js仅仅需要考虑方向，上下左右，so easy！前两天部门领导要在年度总结大会上做演讲，正发愁怎么做PPT呢，果断不能错过推销神器的机会。在了解领导演讲意图之后，我在impress.js和reveal.js之间选择了reveal.js出马。</p>\n<p><img src=\"https://zerosoul.github.io/2016/01/16/how-to-ppt/ppt.jpg\" alt=\"ppt\"></p>\n<p>值得一提的是，reveal.js有插件机制，有许多优秀插件可以提高演讲逼格，比如，这次总结大会上用到的<a href=\"https://github.com/ysmood/notell\">远程控制插件</a>，乔布斯演讲的即视感有木有！？如果对自己要讲什么已经胸有成竹，做PPT的目的仅仅是为了提示自己讲到哪儿了，该讲哪儿了。那么，reveal.js来干这事儿再适合不过了。</p>\n<h1 id=\"再说两句\"><a href=\"#%E5%86%8D%E8%AF%B4%E4%B8%A4%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再说两句</h1>\n<p>以上只是简单感性地介绍一下两款神器，其实还有很多特性都没有介绍到，等待你去挖掘。不过工具终究是工具，不能代替我们思考。做演讲最重要的还是清楚自己要讲什么：<strong>主题明确，逻辑清晰，没有PPT，同样能达到表达的目的。</strong></p>","frontmatter":{"title":"工程师的演讲利器","date":"2016-01-16T09:31:37.000Z","category":"技术","tags":["前端","工具","ppt","impress.js","reveal.js"],"cover":"https://zerosoul.github.io/2016/01/16/how-to-ppt/impress.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/how-to-ppt/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/how-to-ppt/#%E5%B7%A5%E5%85%B7\">工具</a></li>\n<li><a href=\"/posts/how-to-ppt/#impressjs\">impress.js</a></li>\n<li><a href=\"/posts/how-to-ppt/#revealjs\">reveal.js</a></li>\n<li><a href=\"/posts/how-to-ppt/#%E5%86%8D%E8%AF%B4%E4%B8%A4%E5%8F%A5\">再说两句</a></li>\n</ul>","excerpt":"引子 技术从业者似乎有个普遍的问题： 不擅长表达 。当然，表达方式有多种：写作，作画，舞蹈，甚至摄影，等等。而此处要说的，特指口头表达，也就是演讲。 工具 提到演讲，无论是给领导汇报，还是给同事做分享，最好有个PPT做辅助，而这正是干技术的头痛所在：不愿意花时间把PPT…"}},{"node":{"fields":{"slug":"/posts/improve-your-workflow-with-browser-sync-2-0"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>Web开发，尤其是前端开发，经常要做的就是不停地“试错”。下面的场景你是否熟悉：</p>\n<p>1.在浏览器打开网页<br>\n2.更改一两行代码<br>\n3.点击浏览器的刷新，重复 <strong>步骤2</strong></p>\n<p>周而复始，还要在不同的设备，不同的浏览器，不同的测试方法，Oh God，编码本来是一项充满创造性的工作，为何如此苦逼？</p>\n<h1 id=\"希望\"><a href=\"#%E5%B8%8C%E6%9C%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>希望</h1>\n<p>程序员应该养成一个优秀习惯：当意识到有重复性的动作，反思一下能不能交给机器来做？有关上面提到的不停地“试错”，其实早就有了解决方式：BrowserSync。我比较懒，懒到人家都出2.0了，才开始了解与使用。</p>\n<blockquote>\n<p>好工具从来不会缺席，只是有时候会迟到。 – 尼古拉斯•杨二</p>\n</blockquote>\n<p>让我们先来看一下新版本有哪些特性：</p>\n<h1 id=\"实时刷新-live-reloading\"><a href=\"#%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0-live-reloading\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实时刷新 (Live reloading)</h1>\n<p>这个应该是基本的吧。修改某个文件（html,css,js），会自动刷新你所打开的所有浏览页面，对，也包括手机端的，这个挺酷的。</p>\n<h1 id=\"交互同步interaction-synchronization\"><a href=\"#%E4%BA%A4%E4%BA%92%E5%90%8C%E6%AD%A5interaction-synchronization\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>交互同步(Interaction synchronization)</h1>\n<p>一句话概括就是：镜像你的交互。滚动页面，点击，表单操作等等会被同步到每个你打开的浏览器。这招在调试移动端页面相当有用，都知道在手机输入文字的痛苦，尤其是英文，有了它，妈妈再也不会看到你拿着手机打字纠结的表情了：完全可以在PC上相应文本框输入文本，然后会同步到每个关联的移动设备上，Amazing！除此之外，你还可以选择哪些交互可以被镜像，真贴心！</p>\n<h1 id=\"远程调试remote-inspector\"><a href=\"#%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95remote-inspector\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>远程调试(Remote inspector)</h1>\n<p>可以使用类似谷歌的 <a href=\"https://developer.chrome.com/devtools\">Dev Tools</a> 来远程调试页面。</p>\n<p><img src=\"https://zerosoul.github.io/2016/01/14/Improve-Your-Workflow-With-BrowserSync-2-0/browsersync2-weinre.png\"></p>\n<h1 id=\"模拟网速simulate-slower-connections\"><a href=\"#%E6%A8%A1%E6%8B%9F%E7%BD%91%E9%80%9Fsimulate-slower-connections\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>模拟网速(Simulate slower connections)</h1>\n<p>Dev Tools 里面已有这个功能，相当实用的一个功能，有些开发问题只有在网速慢的情况才好复现。看来，优秀的工具总是能戳中使用者的痛点。</p>\n<h1 id=\"记录浏览历史url-history\"><a href=\"#%E8%AE%B0%E5%BD%95%E6%B5%8F%E8%A7%88%E5%8E%86%E5%8F%B2url-history\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>记录浏览历史(URL history)</h1>\n<p>浏览历史被记录的好处就是可以随时推送某个测试网址到所有设备，免去记忆和输入的成本，相当便捷。</p>\n<h1 id=\"新ui！new-ui\"><a href=\"#%E6%96%B0ui%EF%BC%81new-ui\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新UI！(New UI)</h1>\n<p>如果不习惯命令行控制方式，可以使用基于网页的UI管理。</p>\n<p><img src=\"https://zerosoul.github.io/2016/01/14/Improve-Your-Workflow-With-BrowserSync-2-0/browsersync2-gui.png\"></p>\n<h1 id=\"兼容构建工具build-tool-compatibility\"><a href=\"#%E5%85%BC%E5%AE%B9%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7build-tool-compatibility\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>兼容构建工具(Build-tool compatibility)</h1>\n<p>可以和Gulp,Grunt以及其它构建工具配套使用。<br>\n<strong>注：这个特性我还没有尝试，不过看起来很高级很好玩的样子。</strong></p>\n<h1 id=\"下载即用！install-anywhere-for-free\"><a href=\"#%E4%B8%8B%E8%BD%BD%E5%8D%B3%E7%94%A8%EF%BC%81install-anywhere-for-free\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>下载即用！(Install anywhere for free)</h1>\n<p>BrowserSync是开源作品，并且支持Windows, Mac OS and Linux三大操作平台。不需要安装浏览器插件或者其他软件，妈妈再也不用担心乱装东西啦。</p>\n<h1 id=\"browsersync-是怎样的工作原理\"><a href=\"#browsersync-%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BrowserSync 是怎样的工作原理</h1>\n<p>启用BrowserSync时，会建立一个小型web服务器。如果本地存在一个web服务器或者需要与一个线上网站建立联系，可以将BrowserSync当做一个代理服务器。它将在每个访问的页面注入一小段js代码，并使用 <a href=\"https://developer.mozilla.org/en-US/docs/WebSockets/WebSockets_reference\"><strong>websocket</strong></a>与服务器通信。当有事件触发时，比如更改了某个文件或者触发了滚动操作，服务端便会向所有的连接设备发送更新。</p>\n<p>如果你的定位是使用而非参与开发BrowserSync，了解到这里就足够啦。</p>\n<h1 id=\"如何安装\"><a href=\"#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何安装</h1>\n<p>那么…如何安装呢？有个前提条件：安装<a href=\"http://nodejs.org/\">Node.js</a>。</p>\n<p>命令行执行<code class=\"language-text\">node -v</code>，确保Node安装OK。</p>\n<p>全局安装BrowserSync:<code class=\"language-text\">npm install browser-sync -g</code></p>\n<p>注：我在Mac下遇到个问题，需要在npm前面加<code class=\"language-text\">sudo</code>，才能执行成功，应该跟本人的环境配置有关。</p>\n<p>测试安装OK与否：<code class=\"language-text\">browser-sync --version</code></p>\n<p>看看BrowserSync下有哪些命令可以使用：<code class=\"language-text\">browser-sync --help</code></p>\n<h1 id=\"如何使用\"><a href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何使用</h1>\n<p>举个例子：<br>\n假设有个<code class=\"language-text\">test</code>文件夹，里面有HTML文件和css文件夹，css文件夹里面当然是css文件啦。<br>\n首先，先跑到<code class=\"language-text\">test</code>文件夹下：<code class=\"language-text\">cd test</code></p>\n<p>然后 BrowserSync 之：<code class=\"language-text\">browser-sync start --server --files &quot;*.html, css/*.css&quot;</code></p>\n<p>随后将启用一个小型服务器，并监听test下的所有html和css文件夹下的css文件。此时此刻，命令行界面应该显示类似这样的一列信息：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">[BS] Access URLs:\n -------------------------------------\n       Local: http://localhost:3000\n    External: http://192.168.1.21:3000\n -------------------------------------\n          UI: http://localhost:3001\n UI External: http://192.168.1.21:3001\n -------------------------------------\n[BS] Serving files from: ./\n[BS] Watching files...</code></pre>\n      </div>\n<p><code class=\"language-text\">External</code>表示在同一网段下的所有设备都可以访问这个地址。<code class=\"language-text\">UI</code>的意思就是网页版的控制中心。</p>\n<p>还有许多其它特性可以从命令行挖掘。总而言之，花上一两个小时来体验一下，相信你从今以后会离不开它！</p>\n<h1 id=\"参考\"><a href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<p><a href=\"http://www.browsersync.io/\">BrowserSync官网</a><br>\n<a href=\"http://www.browsersync.io/docs/command-line/\">BrowserSync文档</a></p>","frontmatter":{"title":"使用BrowserSync 2.0提高前端开发逼格","date":"2016-01-14T09:31:37.000Z","category":"技术","tags":["前端","工具","BrowserSync"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%B8%8C%E6%9C%9B\">希望</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0-live-reloading\">实时刷新 (Live reloading)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E4%BA%A4%E4%BA%92%E5%90%8C%E6%AD%A5interaction-synchronization\">交互同步(Interaction synchronization)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95remote-inspector\">远程调试(Remote inspector)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E6%A8%A1%E6%8B%9F%E7%BD%91%E9%80%9Fsimulate-slower-connections\">模拟网速(Simulate slower connections)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E8%AE%B0%E5%BD%95%E6%B5%8F%E8%A7%88%E5%8E%86%E5%8F%B2url-history\">记录浏览历史(URL history)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E6%96%B0ui%EF%BC%81new-ui\">新UI！(New UI)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%85%BC%E5%AE%B9%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7build-tool-compatibility\">兼容构建工具(Build-tool compatibility)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E4%B8%8B%E8%BD%BD%E5%8D%B3%E7%94%A8%EF%BC%81install-anywhere-for-free\">下载即用！(Install anywhere for free)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#browsersync-%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\">BrowserSync 是怎样的工作原理</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85\">如何安装</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\">如何使用</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","excerpt":"引子 Web开发，尤其是前端开发，经常要做的就是不停地“试错”。下面的场景你是否熟悉： 1.在浏览器打开网页 2.更改一两行代码 3.点击浏览器的刷新，重复  步骤2 周而复始，还要在不同的设备，不同的浏览器，不同的测试方法，Oh God…"}},{"node":{"fields":{"slug":"/posts/on-top-of-tides"},"html":"<p>浪潮之巅确实值得每个IT从业人员一读。</p>\n<h1 id=\"技术\"><a href=\"#%E6%8A%80%E6%9C%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>技术</h1>\n<p>第一个维度是从技术角度。纵览整个IT行业的发展史，从AT&#x26;T,IBM,朗讯，苹果，微软，惠普，雅虎，google，每个曾经在浪潮之巅，能够在那个时代呼风唤雨的企业，都有起家的绝活，有一个一句话能说清楚的商业模式。衰落的原因又各不相同，有的是因为管理决策层（CEO，董事会，华尔街的影响）的无能或短视造成（比如AT&#x26;T，朗讯，惠普），有的是因为太大的企业内部阻碍了创新的发展（微软），有的是注重技术但是领导人缺少商业机制，抱着金矿慢慢堕落（比如sun和雅虎）。当然也有焕发多春，成功转型的（比如IBM，苹果，GE）。\n从这个角度来看，google在搜索领域成为了霸主，但随着社交网络，电子商务，移动的发展，google的脚步也在变慢，虽然拥有youtube，android等绝对领先的技术，但gooel+似乎是对facebook无奈的拷贝，大公司对所有新兴的技术领域都需要跟进和投资（自己开发，或者收购），大公司这张策略大网总有力不从心的时候，就像微软无法扼杀google一样，期待下一个google的诞生。</p>\n<h1 id=\"资本\"><a href=\"#%E8%B5%84%E6%9C%AC\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>资本</h1>\n<p>第二个维度是资本维度。这部分也是之前了解最少的。最底层是一个美国良好的信用制度，不用担心创业者恶意卷钱走人，否则信用为0，在整个美国都无法生存（贷款，刷信用卡等）。在硅谷，创业不再是全靠创业者自己的家底（很多中国的创业者是要掘到自己第一桶金，冯仑的野蛮成长中介绍，中国的第一桶金，大多是黑心钱），创业住需要一份专利（美国产权保护做得很好）然后有一个产品原型，加一份商业计划署，然后有天使投资人可以对其投资，待有一定规模（用户，流量等），就可以引入风险投资，几轮风投之后，如果增长很快或者已经盈利（风投对增长的看重超过盈利），就可以引入投资银行来运作上市。创业者，风投，投资银行一起分享胜利果实。这是一个健康的游戏，而不是零和游戏。\n资本有好的一面，也有贪婪凶恶的一面。风投对创业结果不理想的企业，会毫不手软的卖掉，优先止损。创业者如何拿捏融资额和对企业的控制很是有学问，面对老辣的风投，必须是个谈判高手。投行对已上市的公司也影响很大，业绩符合或者超过的股价会大涨，反之则大跌，被华尔街卖空，股价一落千丈。投行还主导了上市公司的拆分和并购，从中收取手续费，拆分和并购，有时候会因为是否有利于华尔街，而不是有利于整个公司的长期业务。</p>\n<h1 id=\"机制\"><a href=\"#%E6%9C%BA%E5%88%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>机制</h1>\n<p>第三个维度是机制，也可以说是制度。斯坦福为代表的大学输送人才，硅谷孵化创业企业，风投提供初期资金支持，投行为最终上市铺路。美国政府没有提供太多的政策和资金支持，但却提供的激发创新的机制。政府做得最多的是举行反垄断的听证会，裁决让那些事实垄断的公司赔偿给其他创新公司。不知道是斯坦福成就了硅谷，还是硅谷成就了斯坦福，斯坦福诞生了太多的IT业界领袖，他们又很慷慨的捐赠回馈斯坦福。硅谷的企业为斯坦福提供研究经费，研究的成果又用于新技术转化为新产品。风投提供给助力创业人员（车库等）资金用于启动项目，同时早期的介入，让他们获利颇丰，虽然投得项目大部分都失败，成功的项目足以让他们有几十倍的赚头。投行有大有小，IPO估价有高有低，选择什么样的投行做IPO也是有学问的，总体来看，投行帮助IT公司实现上市融资是不争的事实。</p>\n<h1 id=\"启发\"><a href=\"#%E5%90%AF%E5%8F%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>启发</h1>\n<p>这是一个完善的生态系统，食物链的每个环节都有自己的G点。</p>\n<p>以史为鉴，方知兴替。身处IT公司的民工们，需要擦亮自己的眼睛，分析自己所处的时代，看清哪些公司已经处在浪潮之巅，哪些正要登上浪潮之巅。商业模式要有创新，难以被复制，有持续的盈利增长空间；企业领导人要有远见，魄力，上可以搞的定风投，投行，下可以搞定客户，员工。选一个正要登上浪潮之巅的企业，一起登顶。</p>","frontmatter":{"title":"阅读笔记《浪潮之巅》","date":"2015-12-30T05:23:08.000Z","category":"阅读笔记","tags":["互联网","历史","吴军","阅读"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/on-top-of-tides/#%E6%8A%80%E6%9C%AF\">技术</a></li>\n<li><a href=\"/posts/on-top-of-tides/#%E8%B5%84%E6%9C%AC\">资本</a></li>\n<li><a href=\"/posts/on-top-of-tides/#%E6%9C%BA%E5%88%B6\">机制</a></li>\n<li><a href=\"/posts/on-top-of-tides/#%E5%90%AF%E5%8F%91\">启发</a></li>\n</ul>","excerpt":"浪潮之巅确实值得每个IT从业人员一读。 技术 第一个维度是从技术角度。纵览整个IT行业的发展史，从AT&T,IBM,朗讯，苹果，微软，惠普，雅虎，google…"}},{"node":{"fields":{"slug":"/posts/about-2016"},"html":"<p><img src=\"https://zerosoul.github.io/2015/12/20/about-2016/about-2016.jpg\" alt=\"carrying man\"></p>\n<h1 id=\"楔子\"><a href=\"#%E6%A5%94%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>楔子</h1>\n<p>生命是场持续而长久的积累，没有人真正在乎你在何时，在何地，是在烧着脑细胞，还是在洒着汗水。人们往往只是在你惊艳众人那一刻惊呼：卧槽，这么牛X怎么做到的？！甚至没有仔细听你解释是如何做到的，就去猎奇下一个惊艳时刻。所以，没那么多观众，放轻松，别活得太累。偶尔遇到愿意听你说到口干舌燥的，别犹豫，那不是友情便是爱情。</p>\n<h1 id=\"正文\"><a href=\"#%E6%AD%A3%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>正文</h1>\n<p>去年此时，我大概在构思今年要做的事情，并有意地把其中<a href=\"https://zerosoul.github.io/2015/02/01/against-the-flow/\">十件事</a>以博文的形式暴露出来，其目的是为了形成某种监督，进而对自己有所激励。此时此刻，恰好一年，这种方式目前来看是有效果的，所以没有理由不沿用一下。</p>\n<ol>\n<li>\n<p>每月写博文<br>\n忙碌不是逃避思考的借口，恰恰是应该坐下来想一下：为什么这么忙？以前常常有想法，却没有以文字的方式沉淀下来，我觉得是种浪费，效率上的浪费，因为能把思考写出来才有生根发芽的可能性，好记性不如烂博文。一篇技术，一点译文，一篇随笔，或者读书笔记都行，每月至少两篇吧。一年下来24篇，恩，不能再少了。</p>\n</li>\n<li>\n<p>物尽其用<br>\n这里的“物”，主要指的是我的MAC本。MAC除了用来装X，对于开发人员更重要的是提高效率，目前我还没有完全适应使用MAC工作，所以物尽其用还有距离呢。当然，工具终究是工具，更重要的是想法，两条腿走路，更稳当一些。</p>\n</li>\n<li>\n<p>APP<br>\n在技术行业工作了几年，耳濡目染久了，也有了互联网产品情节。所以想凭一己之力做个能解决个人具体需求的APP产品，由于自己是干前端的，自然而然的就想到了以前端方式来做。这个过程应该是个学习与实践的好机会，恩，好好玩。</p>\n</li>\n<li>\n<p>塑身<br>\n今年跑步坚持的还不错，身材也相应地变好了一些，但距离“好身材”还略远。所以借着今年打下的底子，继续坚持跑步的同时，办个健身卡，有条件就再请个私教，制定科学的健身计划，持之以恒。虽然走的是健身流程，但最终目的还是想打造完美的身材协调比例，比如肩膀匀不匀称，小腿粗不粗壮，挺胸抬头，全身看上去很协调，就算OK。总之，“主要看气质”，这也是我用的是“塑身”一词，而不是“健身”的原因，至于胸肌，腹肌，肱二头肌发不发达，恩，全是赠品。</p>\n</li>\n<li>\n<p>环台湾岛骑行<br>\n本来计划在今年春节期间去，种种原因拖延到现在，已经来不及了，推到下一年年底吧。或许还是一个人，或许是两人，恩，不能再多了…</p>\n</li>\n<li>\n<p>阅读<br>\n听说能让人保持创造力的最好方式便是持续地阅读，如果说今年的阅读是为了广度，那么明年便是着重深度。不求多，但求精，速度不快，一两个月啃下一本足矣，附带读书笔记。So… 10本书吧，不能再多了，再多就醉了。</p>\n</li>\n<li>\n<p>再去一次怀化某山村<br>\n今年10月份去了次，山清水秀，民风淳朴，与那里结下了更为深厚的不解之缘。从今年开始，每年都会去一次。</p>\n</li>\n<li>\n<p>英语进阶<br>\n英语一直是半瓶子醋水平，虽说应付工作日常足矣，但作为一种开阔视野的好工具，谁不想更为全面地掌握呢。打算通过翻译一本书做起，也算是给“阅读”和“博文”做贡献。</p>\n</li>\n<li>\n<p>摄影进阶<br>\n摄影是个烧钱的爱好，我不是器材党，所以目前来看，总投资没超过5K，都不好意思说自己喜欢摄影了。所谓的进阶，可能更多的是片子的后期。另，入手一个广角镜头，恩，不能再多了。</p>\n</li>\n<li>\n<p>学一种乐器<br>\n说来惭愧，曾经有学吉他的冲动，但也就止于冲动了。吉他携带有些不方便，我更习惯低调，所以想到了口琴，恩，练练口活。</p>\n</li>\n</ol>\n<p>还是那个意思：10件事不是目标，也不是梦想，只是10件事。有些需要常做，比如塑身，有些是一次性，比如骑行，有些烧脑，有些烧钱，有些流汗，甚至有些流泪。不管怎样，都需要努力。努力不是一场真人秀，更像是在做幕后，在看不到的时间与空间持续付出着…</p>\n<p>至于梦想，我觉得其实是一个很平常的东西，那句话怎么说的来着：梦想就像内裤，你得有，但是不要经常拿出来炫耀。从不觉得一个人为了梦想付出很多就显得很高尚。每个人都有自己的生活方式，没有梦想或者不愿意为梦想付出的人也值得尊重，毕竟做成一件事有时不是靠实力，还有运气。</p>\n<p>“内裤”就不晒了，不过做完以上10件事，梦想应该是更近了一步，更何况明年不止这10件。</p>\n<p>努力成为自己想成为的人，不明不白盲目努力的生活，不值得一过。</p>","frontmatter":{"title":"杨二小","date":"2015-12-20T09:31:37.000Z","category":"技术","tags":["年终总结","计划"],"cover":"https://zerosoul.github.io/2015/12/20/about-2016/about-2016.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/about-2016/#%E6%A5%94%E5%AD%90\">楔子</a></li>\n<li><a href=\"/posts/about-2016/#%E6%AD%A3%E6%96%87\">正文</a></li>\n</ul>","excerpt":"楔子 生命是场持续而长久的积累，没有人真正在乎你在何时，在何地，是在烧着脑细胞，还是在洒着汗水。人们往往只是在你惊艳众人那一刻惊呼：卧槽，这么牛X…"}},{"node":{"fields":{"slug":"/posts/build-personal-site-with-hexo-and-github-pages"},"html":"<h1 id=\"准备工作\"><a href=\"#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>准备工作</h1>\n<h2 id=\"githubgithub\"><a href=\"#githubgithub\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#Github\" title=\"Github\"></a><a href=\"http://github.com\">Github</a></h2>\n<ol>\n<li>登陆你的Github</li>\n<li>新建一个Repository</li>\n<li>将之命名为<em>yourGithubName.github.io</em>(注意替换yourGithubName)</li>\n<li>关键步骤已经完成，其他选项随意啦。点击新建后，别忘了把<em>SSH</em>的地址copy一份，后面有用到</li>\n</ol>\n<h1 id=\"hexo\"><a href=\"#hexo\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://hexo.io\">Hexo</a></h1>\n<ol>\n<li>打开终端</li>\n<li>Hexo依赖 Node 环境，如果没有先安装 Node &#x26; npm，参考<a href=\"http://nodejs.org\">官网</a></li>\n<li>安装 Hexo<br>\n<code class=\"language-text\">npm install -g hexo</code></li>\n<li>齐活，Hexo准备完毕</li>\n</ol>\n<h1 id=\"使用hexo撸github需要的东西\"><a href=\"#%E4%BD%BF%E7%94%A8hexo%E6%92%B8github%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用Hexo撸Github需要的东西</h1>\n<ol>\n<li>进入到你想放置github pages repository的目录</li>\n<li>在此创建Hexo Project<br>\n<code class=\"language-text\">hexo init yourGithubName.github.io</code></li>\n<li>切换到刚刚创建的目录<br>\n<code class=\"language-text\">cd yourGithubName.github.io</code></li>\n<li>安装依赖&#x26;生成静态文件&#x26;启动本地服务器<br>\n<code class=\"language-text\">npm install &amp; hexo g &amp; hexo s</code></li>\n<li>目测现在就可以通过访问localhost:4000来瞅瞅网站啥样了</li>\n</ol>\n<h1 id=\"部署到github上\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>部署到Github上</h1>\n<ol>\n<li>首先，停掉Hexo <code class=\"language-text\">Control + C</code></li>\n<li>打开根目录的_config.yml，设置Github地址<br>\n<code class=\"language-text\">deploy: type: git repo: git@github.com:yourGithubName/yourGithubName.github.io.git</code></li>\n<li>部署前，先确认有没有安装<em><a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a></em><br>\n<code class=\"language-text\">npm install hexo-deployer-git --save</code></li>\n<li>部署<br>\n<code class=\"language-text\">hexo d</code></li>\n<li>打开浏览器，访问 <em>yourGithubName.github.io</em></li>\n</ol>\n<h1 id=\"写作\"><a href=\"#%E5%86%99%E4%BD%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>写作</h1>\n<ol>\n<li>使用Markdown写作，完事后保存到source/_posts/</li>\n<li>重新生成静态文件<br>\n<code class=\"language-text\">hexo g</code></li>\n<li>运行<code class=\"language-text\">hexo s</code>在本地查看刚刚写的文章</li>\n<li>木问题的话，更新至Github<br>\n<code class=\"language-text\">hexo d</code></li>\n</ol>\n<h1 id=\"绑定自己的域名\"><a href=\"#%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>绑定自己的域名</h1>\n<blockquote>\n<p>我通过淘宝代理<a href=\"https://www.godaddy.com/\">Godaddy</a>购买了 <a href=\"http://zerosou.us\">zerosoul.github.io</a> 域名，就拿这个举例如何绑定吧</p>\n</blockquote>\n<ol>\n<li>Github上进入 zerosoul.github.io</li>\n<li>创建并提交CNAME文件，里面只有一行内容，就是域名：<code class=\"language-text\">zerosoul.github.io</code></li>\n<li>去Godaddy网站管理域名页面<br>\n<img src=\"https://zerosoul.github.io/2015/11/05/build-personal-site-with-hexo-and-github-pages/godaddy_setting.jpg\" alt=\"godaddy setting\"></li>\n<li>增加一条 A 记录:host=<code class=\"language-text\">@</code>，Points to=<code class=\"language-text\">192.30.252.153</code></li>\n<li>增加一条 CNAME 记录:host=<code class=\"language-text\">www</code>，Points to=<code class=\"language-text\">zerosoul.github.io</code></li>\n<li>最后，一定要记得保存更改！<br>\n<img src=\"https://zerosoul.github.io/2015/11/05/build-personal-site-with-hexo-and-github-pages/godaddy_saving.jpg\" alt=\"godaddy saving\"></li>\n<li>静待更改生效，大概一两个小时。</li>\n</ol>\n<h1 id=\"两个小时后\"><a href=\"#%E4%B8%A4%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>两个小时后…</h1>\n<p><strong>装X成功！</strong></p>\n<h1 id=\"相关链接\"><a href=\"#%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>相关链接</h1>\n<p><a href=\"https://hexo.io/docs/\">hexo doc</a><br>\n<a href=\"https://help.github.com/categories/github-pages-basics/\">github pages basic</a><br>\n<a href=\"http://andrewsturges.com/blog/jekyll/tutorial/2014/11/06/github-and-godaddy.html\">Configuring a Godaddy domain name with github pages</a></p>","frontmatter":{"title":"科学地使用 Hexo 和 Github Pages 装X","date":"2015-11-05T09:31:37.000Z","category":"技术","tags":["hexo","github","nodejs","前端"],"cover":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">准备工作</a></p>\n<ul>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#githubgithub\">GithubGithub</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#hexo\">Hexo</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E4%BD%BF%E7%94%A8hexo%E6%92%B8github%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF\">使用Hexo撸Github需要的东西</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A\">部署到Github上</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E5%86%99%E4%BD%9C\">写作</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D\">绑定自己的域名</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E4%B8%A4%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%90%8E\">两个小时后…</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5\">相关链接</a></li>\n</ul>","excerpt":"准备工作 Github 登陆你的Github 新建一个Repository 将之命名为 yourGithubName.github.io (注意替换yourGithubName) 关键步骤已经完成，其他选项随意啦。点击新建后，别忘了把 SSH 的地址copy一份，后面有用到 Hexo…"}},{"node":{"fields":{"slug":"/posts/about-full-stack-engineer"},"html":"<p><img src=\"https://zerosoul.github.io/2016/06/18/about-full-stack-engineer/fullstack.jpg\" alt=\"full stack engineer\"><br>\n全栈工程师现在是个很热的话题，如何定义全栈工程师？在著名的问答网站Quora上有人提出了这个问题，其中一个获得了高票的回答是：</p>\n<blockquote>\n<p>全栈工程师是指，一个能处理数据库、服务器、系统工程和客户端的所有工作的工程师。根据项目的不同，客户需要的可能是移动栈、Web栈，或者原生应用栈</p>\n</blockquote>\n<p>深以为然，所以，全栈工程师应该分为<strong>Web全栈</strong>和<strong>App全栈</strong>。恰巧最近看了本有关<strong>Web全栈工程师</strong>的书，记录下其中一些观点。</p>\n<h1 id=\"笔记笔记\"><a href=\"#%E7%AC%94%E8%AE%B0%E7%AC%94%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E7%AC%94%E8%AE%B0\" title=\"笔记\"></a>笔记</h1>\n<ul>\n<li>应该从能力和思维方式两方面来判定一个人是否是一个合格的全栈工程师。</li>\n<li>对于一些经理来说，宁可雇佣多个可管理的普通工程师，也不愿意聘请一个不可管理的天才工程师。</li>\n<li>一个前端工程师可能会不加思考地实现视觉设计稿，因为他的岗位说明里规定了自己的职责，这其中不包括质疑设计稿，所以他忽略了自己的最终目标：让产品更好。</li>\n<li>全栈工程师除了在一个专精知识领域有深入研究之外，还以知识广博和解决问题能力强著称。</li>\n<li>Done is better than perfect</li>\n<li>老板雇佣一个员工，不是因为他能写程序，而是因为他能帮助自己赚钱。赚钱有两种方法：减少成本和增加收入。</li>\n<li>如果增加一个用户需要的功能是加分项的话，拒绝一个用户不需要的需求更加值得推崇。</li>\n<li>要先看看有哪些问题需要解决，然后再补充您的工具箱。永远从商业目标的角度来决定学习什么，而不是纯粹为了锻炼技术能力去学习。</li>\n<li>如果我开创一个公司需要招聘“全栈工程师”，我要求的三个能力就是一专多长、关注商业目标和关注用户体验。</li>\n<li>绕开每个人都会去做的事情–投简历–转而做一个自己的作品，这就给企业传达了一个信号。</li>\n<li>主动性是全栈工程师必备的一个特质，没有一个全栈工程师是被别人逼出来的。</li>\n<li>每个人都要有意识地维护自己的作品集，它在半年一次的考核、晋升面试甚至以后的跳槽中都非常有用。</li>\n<li>尽量减少同一域下的HTTP请求数，以及尽量减少每一个资源的体积。</li>\n<li>把静态资源放在非主域名下，除了可以增加浏览器并发，还可以减少HTTP请求中携带的不必要的cookie。</li>\n<li><code class=\"language-text\">gzip</code>是一种开源的数据压缩算法，其中<code class=\"language-text\">g</code>代表免费的意思。</li>\n<li>DDoS攻击者喜欢攻击的页面一般是会对数据库进行写操作的页面，这样的页面无法静态化，服务器更容易宕机。</li>\n<li>越接近高级工程师，越考察对某个点的本质理解，以及在项目和团队中的引导作用，而不是对某工具的使用经验。</li>\n<li>框架应该是比库更广泛的概念。一个库是一系列对象、方法等代码，您的应用程序可以把这个库<em>链接</em>进来，起到了重用代码的作用，剩下了重写这部分代码的工作量，而一个框架是一个系统中可重用的一部分。</li>\n<li>行动重于计划，自己给自己挠痒。</li>\n<li>因为大家害怕失败，所以想把产品调整得完美无缺才发布。但是世界上成功的软件都不是完美的软件，而是在合适的时间发布的、刚刚够用的产品。如果它能活下来，在后面的版本中，他才有机会越来越好。</li>\n<li>让市场认可你的能力，而不是让老板认可，因为老板会变，老板的标准不一致，而市场是一致的。</li>\n<li><a href=\"http://semver.org/\">semver</a> &#x26; <a href=\"https://docs.npmjs.com/files/package.json#dependencies\">npm dependencies rules</a></li>\n<li>架构是当项目变得复杂之后必须考虑的问题，而项目总是会变得复杂的。</li>\n<li>“任何能用Javascript实现的，最终都必将用Javascript实现。”<em>Atwood定律</em></li>\n<li>语言只负责描述一个程序，而程序运行的速度，不取决于语言，而是算法和编译器的质量。</li>\n<li>\n<p>如果您平时没有做重要的事情，就会发现自己常常在做紧急的事情。</p>\n<ul>\n<li>如果平时没有注意锻炼身体，就会常常去医院，花费更多时间</li>\n<li>如果没有培养后辈，为每个项目设置接班人，就会常常需要到处救火。</li>\n<li>如果没有配置好版本管理系统就开始工作，就会浪费更多时间去找回丢失的代码</li>\n<li>如果偷懒硬编码一些变量在代码中，后续会花费更多时间过去调试</li>\n</ul>\n</li>\n<li>时间四象限：<br>\n<img src=\"https://zerosoul.github.io/2016/06/18/about-full-stack-engineer/time.jpg\" alt=\"four blocks\"></li>\n<li>拿工作时长来拼，这是体力劳动时代打工者的心态在作祟。</li>\n<li>程序员大致分两种：科学家和工程师。科学家关注技术是否优越，而工程师关注产品是否完美。</li>\n<li>懒惰的终极原因就是你想逃避这件事。</li>\n<li>耐心是一种能力</li>\n<li>用市场最高价格雇佣高效能人士组成团队 <em>Netflix企业文化</em></li>\n<li>所谓自我提升，首先是接纳自我，而不是贬低自我的性格。</li>\n<li>不要为了迎合主流社会，而伪装成一个外向、热情、合群的人。</li>\n<li>项目的定义是：在一定的约束条件下（时间和资源），具有明确目标的一次性任务。</li>\n</ul>\n<h1 id=\"后记后记\"><a href=\"#%E5%90%8E%E8%AE%B0%E5%90%8E%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E5%90%8E%E8%AE%B0\" title=\"后记\"></a>后记</h1>\n<p>做自己感兴趣的事情，学想学的知识，不要怕走偏了，如果有人说不务正业，那就让他们说去吧。如果你能远离传统的路子，将会不同凡响。 <em>–Steve Jobs</em></p>","frontmatter":{"title":"阅读笔记《Web全栈工程师的自我修养》","date":"2015-10-18T09:31:37.000Z","category":"阅读笔记","tags":["前端","全栈","阅读"],"cover":"https://zerosoul.github.io/2016/06/18/about-full-stack-engineer/fullstack.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/about-full-stack-engineer/#%E7%AC%94%E8%AE%B0%E7%AC%94%E8%AE%B0\">笔记笔记</a></li>\n<li><a href=\"/posts/about-full-stack-engineer/#%E5%90%8E%E8%AE%B0%E5%90%8E%E8%AE%B0\">后记后记</a></li>\n</ul>","excerpt":"全栈工程师现在是个很热的话题，如何定义全栈工程师？在著名的问答网站Quora上有人提出了这个问题，其中一个获得了高票的回答是： 全栈工程师是指，一个能处理数据库、服务器、系统工程和客户端的所有工作的工程师。根据项目的不同，客户需要的可能是移动栈、Web…"}},{"node":{"fields":{"slug":"/posts/connect-everything"},"html":"<p>互联网产业特征：高科技、低能耗、高附加值。</p>\n<p>要做产品经理，就要做好万金油的准备和决心，什么都略懂一些，工作更精彩一些。缺少项目经理和营销团队，产品经理就是第一替补。</p>\n<p>只有从零开始创建过一款产品并且亲历整个流程，才会发现这其中有无数细节、困难和感动，才能真正明白各种理论和经验的价值，才会知道理论永远是理想化的、不完备的。</p>\n<p>交换的前提是自己能够创造价值，所以在考虑回报之前，要先想想自己付出了什么，给他人提供了哪些价值。</p>\n<p><img src=\"/images/product.PNG\" alt=\"产品\"></p>\n<p>如果一句话讲不清楚一个概念所能带来的好处，那么这个概念就有大问题。</p>\n<p>项目是为完成某一既定目标所进行的一次性努力。</p>\n<blockquote>\n<p>如果你想造一艘船，不要抓一批人来搜集材料，不要指挥他们做这个做那个，你只要教他们如何渴望浩瀚的大海就行了。 ——圣埃克絮佩里，《小王子》作者</p>\n</blockquote>","frontmatter":{"title":"阅读笔记《结网》","date":"2015-10-08T11:44:08.000Z","category":"阅读笔记","tags":["互联网","产品","阅读"],"cover":null},"tableOfContents":"","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/json-and-jsonp"},"html":"<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>前端开发有个问题不可避免：<strong>跨域获取异步数据</strong>。我比较推崇的解决方式是：<strong>用JSON传数据，靠JSONP来跨域</strong>。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。</p>\n<p>JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿：<strong>JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。一个是描述信息的格式，一个是信息传递双方约定的方法。</strong></p>\n<h1 id=\"什么是json\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjson\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSON</h1>\n<p>有关JSON的概念，曾经写过一篇文章专述，请<a href=\"https://zerosoul.github.io/2015/06/18/explore-json/\">移步这里</a>。</p>\n<p>概括下其优点：</p>\n<ul>\n<li>基于纯文本，跨平台传递；</li>\n<li>Javascript原生支持，后台语言几乎全部支持；</li>\n<li>轻量级数据格式，占用字符少，特别适合网络传递；</li>\n<li>可读性较强，虽然比不上XML一目了然，但在合理的缩进之后还是易识别的；</li>\n<li>容易编写和解析；</li>\n</ul>\n<h1 id=\"什么是jsonp\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSONP</h1>\n<h1 id=\"jsonp是怎么产生的\"><a href=\"#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSONP是怎么产生的</h1>\n<p>我试着用自己的方式来阐释一下这个问题：</p>\n<ol>\n<li>一个众所周知的问题，AJAX直接请求普通文件存在跨域访问的问题，甭管网页是静态的还是动态的，只要是跨域请求，一律不准；</li>\n<li>不过，WEB页面上调用js文件时则不受是否跨域的影响（不仅如此，凡是拥有<code class=\"language-text\">src</code>这个属性的标签都有跨域的能力，比如<code class=\"language-text\">&lt;script&gt;</code>、<code class=\"language-text\">&lt;img&gt;</code>、<code class=\"language-text\">&lt;iframe&gt;</code>）；</li>\n<li>于是可以判断，当前阶段如果想通过纯WEB端（ActiveX控件、服务端代理、属于未来的HTML5之Websocket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js文件里，供客户端调用和进一步处理；</li>\n<li>JSON的纯字符数据格式可以简洁的描述复杂数据，更妙的是JSON被javascript原生支持，所以在客户端几乎可以随心所欲的处理这种格式的数据；</li>\n<li>这样子解决方案就水到渠成了，WEB客户端通过与调用脚本一模一样的方式，来调用跨域服务器上动态生成的js格式文件（一般以JSON为后缀），显而易见，服务器之所以要动态生成JSON文件，目的就在于把客户端需要的数据装入进去。</li>\n<li>客户端在对JSON文件调用成功之后，也就获得了自己所需的数据，剩下的就是按照自己需求进行处理和展现了，这种获取远程数据的方式看起来非常像AJAX，但其实并不一样。</li>\n<li>为了便于客户端使用数据，逐渐形成了一种非正式传输协议，人们把它称作JSONP，该协议的一个要点就是允许用户传递一个<code class=\"language-text\">callback</code>参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。</li>\n</ol>\n<p>我想JSONP的发展历程大概就是这样子，应该八九不离十，下面看一看具体实现。</p>\n<h1 id=\"具体实现\"><a href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>具体实现</h1>\n<p>1.远程服务器<code class=\"language-text\">remote.server.com</code>根目录下有个<code class=\"language-text\">remote.js</code>文件代码如下：  </p>\n<p>1</p>\n<p>alert('我来自远程文件');</p>\n<p>本地服务器<code class=\"language-text\">local.server.com</code>下有个测试页面<code class=\"language-text\">test.html</code>代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>毫无疑问，页面将会弹出一个提示窗体，显示跨域调用成功。<br>\n2.现在<code class=\"language-text\">test.html</code>页面定义一个函数，然后在远程<code class=\"language-text\">remote.js</code>中传入数据进行调用。  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">localHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是本地函数，可以被跨域的remote.js文件调用，远程js带来的数据是：'</span> \\<span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>remote.js文件代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">localHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"我是远程js带来的数据\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>运行之后查看结果，页面成功弹出提示窗口，显示本地函数被跨域的远程js调用成功，并且还接收到了远程js带来的数据。很好，跨域远程获取数据的目的基本实现了，但是又一个问题出现了，怎么让远程js知道它应该调用的本地函数叫什么名字呢？毕竟是JSONP的服务者都要面对很多服务对象，而这些服务对象各自的本地函数都不相同啊？</p>\n<p>3.很容易想到，只要服务端提供的js脚本是动态生成的就行了，这样调用者可以传一个参数过去告诉服务端“我想要一段调用XXX函数的js代码，请你返回给我”，于是服务器就可以按照客户端的需求来生成js脚本并响应了。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n    <span class=\"token comment\">// 得到航班信息查询结果后的回调函数</span>\n\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">flightHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你查询的航班结果是：票价 '</span> \\<span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，'</span> \\<span class=\"token operator\">+</span> <span class=\"token string\">'余票 '</span> \\<span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 提供jsonp服务的url地址（不管是什么类型的地址，最终生成的返回值都是一段javascript代码）</span>\n\n    <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998&amp;callback=flightHandler\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 创建script标签，设置其属性</span>\n\n    <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 把script标签加入head，此时调用开始</span>\n\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span>\\<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>这次的代码变化比较大，不再直接把远程js文件写死，而是编码实现动态查询，而这也正是JSONP客户端的核心部分。</p>\n<p>调用的url中传递了一个code参数，告诉服务器我要查的是<strong>CA1998</strong>次航班的信息，而<strong>callback</strong>参数则告诉服务器，我的本地回调函数叫做<strong>flightHandler</strong>，所以请把查询结果传入这个函数中进行调用。</p>\n<p>服务器很聪明，这个叫做flightResult.aspx的页面生成了一段这样的代码提供给test.html（服务端的实现这里就不演示了，与选用的语言无关，说到底就是拼接字符串）：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">flightHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CA1998\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1780</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string\">\"tickets\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>传递给flightHandler函数的是一个JSON，它描述了航班的基本信息。运行页面，成功弹出提示窗口，JSONP的执行全过程顺利完成。<br>\n4.什么？你用的是jQuery？那再来一个使用jQuery实现JSONP的例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\n            $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n                 type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>\n\n                 <span class=\"token keyword\">async</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n                 url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998\"</span><span class=\"token punctuation\">,</span>\n\n                 dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"jsonp\"</span><span class=\"token punctuation\">,</span>\n\n                 jsonp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)</span>\n\n                 jsonpCallback<span class=\"token punctuation\">:</span><span class=\"token string\">\"flightHandler\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写\"?\"，jQuery会自动为你处理数据</span>\n\n                 success<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n                     <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您查询到航班信息：票价： '</span> \\<span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，余票： '</span> \\<span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                 error<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n                     <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                 <span class=\"token punctuation\">}</span>\n\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>是不是有点奇怪？为什么这次没有写<code class=\"language-text\">flightHandler</code>这个函数呢？竟然也运行成功了！这就是jQuery的功劳了，在处理JSONP类型的ajax时（虽然jQuery也把JSONP归入了AJAX，但它们真的不是一回事儿），自动帮你生成回调函数并把数据取出来供success属性方法来调用，很爽有木有？</p>\n<h1 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h1>\n<ul>\n<li>\n<p>AJAX和JSONP这两种技术在调用方式上<strong>看起来很像</strong>，目的也一样，都是请求一个url，然后把服务器返回的数据进行处理，因此jQuery把JSONP作为AJAX的一种形式进行了封装；</p>\n</li>\n<li>\n<p>AJAX和JSONP其实本质上是不同的东西。AJAX的核心是通过<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XmlHttpRequest</a>获取非本页内容，而JSONP的核心则是动态添加<code class=\"language-text\">&lt;script&gt;</code>来调用服务器提供的js脚本。</p>\n</li>\n<li>\n<p>AJAX与JSONP的区别不在于是否跨域，AJAX通过服务端代理一样可以实现跨域，JSONP本身也不排斥同域的数据的获取。</p>\n</li>\n<li>\n<p>JSONP是一种方式或者说非强制性协议，如同AJAX一样，它也不一定非要用json格式来传递数据，如果你愿意，字符串都行，只不过这样不利于用JSONP提供公开服务。</p>\n</li>\n</ul>\n<p>总而言之，JSONP不是AJAX的一个特例。</p>","frontmatter":{"title":"探索AJAX和JSONP","date":"2015-08-27T09:31:37.000Z","category":"技术","tags":["json","jsonp","javascript","jquery","前端"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/json-and-jsonp/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjson\">什么是JSON</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\">什么是JSONP</a></li>\n<li><a href=\"/posts/json-and-jsonp/#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\">JSONP是怎么产生的</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\">具体实现</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ul>","excerpt":"前言 前端开发有个问题不可避免： 跨域获取异步数据 。我比较推崇的解决方式是： 用JSON传数据，靠JSONP来跨域 。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。 JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿： JSON…"}},{"node":{"fields":{"slug":"/posts/an-inquiry-into-the-value-of-work"},"html":"<h1 id=\"摘记\"><a href=\"#%E6%91%98%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>摘记</h1>\n<p>修车师傅靠的是自己的知识和经验。面对像“这辆车没事吧”这种问题，他的回答直截了当，根本不用考虑什么办公室政治，无需受制于什么中央权力。每天工作结束后，他可以看到自己实实在在的工作成果，为自己解决的那些问题而自豪。</p>\n<p>节俭只是一个表面的经济原因，自力更生实际上是为了满足更深层次的一种需求：我们必须感受到这个世界是可以被理解和把控的，我们可以承担起相应的责任。</p>\n<p>通过动手能力来向世界实实在在地证明自己，由此带来的满足感能让人感到轻松平静。</p>\n<p><strong>工匠精神意味着长期致力于一项工作，深入地钻研它，因为你想把它做好。</strong></p>\n<p><strong>创造力是精通的副产品，而精通只能通过长期的实践来培养。</strong>只有不断地屈从于既定规则，才能实现对某项事务的精通。</p>\n<p>对于那些希望依靠自身力量生活的人而言，手工艺业自然而然地成为了他们的乐土：自由自在，既不受麻木抽象的拘束，也不受当今经济生活两大特色——骗人的美梦及与日俱增的不安全感影响。无欲无求，远离恐惧，正是标准的淡泊之人。</p>\n<h1 id=\"译者后记\"><a href=\"#%E8%AF%91%E8%80%85%E5%90%8E%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>译者后记</h1>\n<p>曾几何时，中国大地上开始盛行白领。白领给人们的印象就是衣着光鲜，西装革履，手提公文包，出入高档写字楼。于是年轻人的志愿就变成大学毕业后加入白领的浩荡队伍，在格子间里占据一席之地。但慢慢地，许多人开始质疑究竟什么是白领。忙碌工作一天后，却说不清楚自己一整天到底干了什么，失落感如影随形，日子越过越麻木。那份工作恰如鸡肋，弃之可惜，食之无味。幸福感究竟在哪里？</p>\n<p>现在有些大学生在毕业后就失业，他们梦想的是白领的光鲜生活，但能力有限，经验有限，机会有限，梦想无法得以实现。不过许多人又不肯放下架子，到基层去工作，去学习，认为有失身份。当看到大学生毕业后去养猪，去卖猪肉，或者去擦皮鞋的新闻时，人们莫不为之可惜，认为书白读了。其实他们不知，每份工作都蕴含了知识，那些大学生从实践中学习到了许多书本未能教给他们的知识，将自己的事业干得有模有样。</p>\n<p>《摩托车修理店的未来工作哲学》一书的作者是一名政治哲学博士，曾经也认定必须找一份与自身身份相称的工作，但“技术工人”的工作让他感觉自己迷失了方向。于是他选择了自己喜欢的摩托车修理工作，开设了自己的摩托车修理店，从摩托车修理中找到了知识和快乐。<strong>compensation这个词语，在英语既表示补偿，也表示薪酬。技术工人们拿着高薪，但工作无法给他们带来成就感，所以薪水也就成为对无聊乏闷和无用感的一种补偿。</strong></p>\n<p>或许你现在正对未来感到迷茫，不知道自己究竟要往何处走：也许你对目前的工作生活状态感到厌倦，觉得幸福离自己很遥远。不管怎样，这本书都值得一读。幸福和价值不在于你是否身居高位，不在于你是否日进斗金。<strong>幸福在于我们能将动手和动脑结合在一起，工作和生活不会完全脱离，幸福在于我们能做一个完整的人。</strong></p>","frontmatter":{"title":"阅读笔记《摩托车修理店未来工作哲学》","date":"2015-08-25T04:26:08.000Z","category":"阅读笔记","tags":["工匠精神","阅读"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/an-inquiry-into-the-value-of-work/#%E6%91%98%E8%AE%B0\">摘记</a></li>\n<li><a href=\"/posts/an-inquiry-into-the-value-of-work/#%E8%AF%91%E8%80%85%E5%90%8E%E8%AE%B0\">译者后记</a></li>\n</ul>","excerpt":"…"}}],"pathPrefix":"archives","first":false,"last":false,"index":3,"pageCount":6,"additionalContext":{"totalCount":116}}}