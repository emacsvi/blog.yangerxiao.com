{"pageContext":{"slug":"/posts/array-filter-trick","html":"<h1 id=\"filter简述\"><a href=\"#filter%E7%AE%80%E8%BF%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>filter简述</h1>\n<p><code class=\"language-text\">filter</code>是Javascript中Array常用的操作，它用于把Array的某些元素过滤掉，然后返回剩下的元素。</p>\n<p>和<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"><code class=\"language-text\">map</code></a>类似，Array的<code class=\"language-text\">filter</code>也接收一个函数。但是和map不同的是，<code class=\"language-text\">filter</code>把传入的函数依次作用于每个元素，然后根据返回值是<code class=\"language-text\">true</code>还是<code class=\"language-text\">false</code>决定保留还是丢弃该元素。</p>\n<p>例如，在一个Array中，删掉偶数，只保留奇数，可以这么写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nr<span class=\"token punctuation\">;</span> <span class=\"token comment\">// [1, 5, 9, 15]</span></code></pre>\n      </div>\n<p>把一个Array中的空字符串删掉，可以这么写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> undefined<span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'  '</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> s <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 注：IE9(不包含IE9)以下的版本没有trim()方法</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\narr<span class=\"token punctuation\">;</span> <span class=\"token comment\">// ['A', 'B', 'C']</span></code></pre>\n      </div>\n<p>可见用<code class=\"language-text\">filter</code>这个高阶函数，关键在于正确实现一个“筛选”函数。</p>\n<h1 id=\"回调函数\"><a href=\"#%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>回调函数</h1>\n<p><code class=\"language-text\">filter</code>接收的回调函数，其实可以有多个参数。通常我们仅使用第一个参数，表示Array的某个元素。回调函数还可以接收另外两个参数，表示元素的位置和数组本身：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> r <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 依次打印'A', 'B', 'C'</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 依次打印0, 1, 2</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// self就是变量arr</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>利用<code class=\"language-text\">filter</code>，可以巧妙地去除Array的重复元素：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> r<span class=\"token punctuation\">,</span>\n\n    arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'banana'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pear'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'apple'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strawberry'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nr <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> index<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>去除重复元素依靠的是<code class=\"language-text\">indexOf</code>总是返回第一个元素的位置，后续的重复元素位置与<code class=\"language-text\">indexOf</code>返回的位置不相等，因此被<code class=\"language-text\">filter</code>滤掉了。</p>","frontmatter":{"title":"Javascript中Array.filter()的妙用","date":"2016-11-29T09:31:37.000Z","category":"技术","tags":["javascript","array","filter"],"cover":null},"excerpt":"filter简述 是Javascript中Array常用的操作，它用于把Array的某些元素过滤掉，然后返回剩下的元素。 和 类似，Array的 也接收一个函数。但是和map不同的是， 把传入的函数依次作用于每个元素，然后根据返回值是 还是 决定保留还是丢弃该元素。 例如，在一个Array…","tableOfContents":"<ul>\n<li><a href=\"/posts/array-filter-trick/#filter%E7%AE%80%E8%BF%B0\">filter简述</a></li>\n<li><a href=\"/posts/array-filter-trick/#%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0\">回调函数</a></li>\n</ul>","prev":{"fields":{"slug":"/posts/array-filter-map-reduce-in-js"},"html":"<h1 id=\"写在前面的话\"><a href=\"#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2%E7%9A%84%E8%AF%9D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>写在前面的话</h1>\n<p>前几天<a href=\"/array-filter-trick\">写了篇文章</a>科普了下Javascript中<code class=\"language-text\">Array.filter()</code>的妙用，后来无意间发现了<a href=\"http://atendesigngroup.com/blog/array-map-filter-and-reduce-js\">一篇好文章</a>，一次性科普了三个API：<code class=\"language-text\">filter</code>、<code class=\"language-text\">map</code>和<code class=\"language-text\">reduce</code>，生动形象，尤其是配图，显然是用了心思。下面是译文：</p>\n<h1 id=\"译文\"><a href=\"#%E8%AF%91%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>译文</h1>\n<p><img src=\"https://zerosoul.github.io/2016/12/06/array-filter-map-reduce-in-js/array-1.png\" alt=\"array top image\"></p>\n<p>最近，一直在为一个客户做一个视觉化数据的项目，从服务端API拉取数据回来然后转换出视觉效果，自然少不了大量的数据操作，为此我一再使用Javascript中的Array 三个API：<code class=\"language-text\">filter</code>、<code class=\"language-text\">map</code>和<code class=\"language-text\">reduce</code>。</p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Map</a>、<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter\">Filter</a>和<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce\">Reduce</a>常常被用于对一个数组做一些操作，进而转换成某个新的东西（数据类型不一定还是数组哦~）。下面是我对这三个API的直观认识：</p>\n<h1 id=\"map\"><a href=\"#map\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Map</h1>\n<p><img src=\"https://zerosoul.github.io/2016/12/06/array-filter-map-reduce-in-js/array-map.png\" alt=\"array-map\"><br>\n你想将一个数组中的每一项做个转换，结果生成了一个新数组，并且新数组的长度和原数组一致。</p>\n<h1 id=\"filter\"><a href=\"#filter\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filter</h1>\n<p><img src=\"https://zerosoul.github.io/2016/12/06/array-filter-map-reduce-in-js/array-filter.png\" alt=\"array-filter\"><br>\n你想将一个数组做一个过滤，按照某规则提取出一些特定的项来。结果也生成了一个新数组，但新数组的长度小于或等于原数组。</p>\n<h1 id=\"reduce\"><a href=\"#reduce\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reduce</h1>\n<p><img src=\"https://zerosoul.github.io/2016/12/06/array-filter-map-reduce-in-js/array-reduce.png\" alt=\"array-reduce\"><br>\n你想通过遍历一个数组的每一项来计算出一个新东西，最后生成的结果可以是任何类型的变量：一个新数组，一个新对象，一个新布尔值…</p>\n<p><code class=\"language-text\">filter</code>、<code class=\"language-text\">map</code>和<code class=\"language-text\">reduce</code>共同点就是并不会对原数组做任何改动，结果都是生成一个新变量。让我们来看一些例子：</p>\n<h1 id=\"arraymap\"><a href=\"#arraymap\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array.map()</h1>\n<p>现在我们有一个对象列表，其中每个对象代表的是一种变形金刚（译注：看来这位歪果仁是个变形金刚粉丝）：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> transformers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Optimus Prime'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Freightliner Truck'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Autobot'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Megatron'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Gun'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bumblebee'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'VW Beetle'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Autobot'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Soundwave'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Walkman'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>那么，问题来了，如果想得到一个包含所有变形（form）的列表该怎么做呢？<code class=\"language-text\">Array.map()</code>让一切变得简单。它的基本使用语法是这样的：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>当然，还有种更复杂点的语法场景，只不过不常用到：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> thisArg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p><code class=\"language-text\">callback</code>会遍历数组的每个元素，在其中返回的每一个数值将会组成新数组。<code class=\"language-text\">callback</code>有多种书写方式：<br>\n命名函数：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">getForm</span><span class=\"token punctuation\">(</span>transformer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> transformer<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> robotsInDisguise <span class=\"token operator\">=</span> transformers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>getForm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* robosInDisguise === ['Freightliner Truck', 'Gun', 'VW Beetle', 'Walkman'] */</span></code></pre>\n      </div>\n<p>匿名函数：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">robotsInDisguise <span class=\"token operator\">=</span> transformers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>transformer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> transformer<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>箭头函数：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">robotsInDisguise <span class=\"token operator\">=</span> transformers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>transformer <span class=\"token operator\">=></span> transformer<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>ES2015的箭头函数和<code class=\"language-text\">Array.map()</code>搭配使用简直不能更爽了！</p>\n<h1 id=\"arrayfilter\"><a href=\"#arrayfilter\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array.filter()</h1>\n<p>语法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p><code class=\"language-text\">callback</code>将数组元素当参数传入，并返回一个布尔值。当返回值为真时，该元素被加入新数组中，反之则被过滤掉。<br>\n现在我们把这些变形金刚过滤出<strong>汽车人</strong>(Autobots)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">isAutobot</span><span class=\"token punctuation\">(</span>transformer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> transformer<span class=\"token punctuation\">.</span>team <span class=\"token operator\">===</span> ‘Autobot’<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> autobots <span class=\"token operator\">=</span> transformers<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>isAutobot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n\nautobots ==  [\n\n  {\n\n    name: 'Optimus Prime',\n\n    form: 'Freightliner Truck',\n\n    team: 'Autobot'\n\n  },\n\n  {\n\n    name: 'Bumblebee',\n\n    form: 'VW Beetle',\n\n    team: 'Autobot'\n\n  }\n\n]\n\n*/</span></code></pre>\n      </div>\n<h1 id=\"arrayreduce\"><a href=\"#arrayreduce\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Array.reduce()</h1>\n<p><code class=\"language-text\">Array.reduce()</code>是通过遍历每个数组元素对其做运算，因此，也是三个API之间最富有技巧的，其使用语法也略显复杂：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">Array<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>previousValue<span class=\"token punctuation\">,</span> currentValue<span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> initialValue<span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>谨记一条：我们是将数组元素通过遍历减少到一个值。比如现在有一组<strong>可组合变形金刚</strong>（译者注：我也不知道什么鬼，该怎么翻译，原词：Construction Transformers），它们能够组合成更大的变形金刚，我们可以通过代码来做出这样的组合：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> constructicons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Scrapper'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Freightliner Truck'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span><span class=\"token punctuation\">,</span>\n\n    bodyPart<span class=\"token punctuation\">:</span> <span class=\"token string\">'rightLeg'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hook'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Mobile Crane'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span><span class=\"token punctuation\">,</span>\n\n    bodyPart<span class=\"token punctuation\">:</span> <span class=\"token string\">'upperTorso'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bonecrusher'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Bulldozer'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span><span class=\"token punctuation\">,</span>\n\n    bodyPart<span class=\"token punctuation\">:</span> <span class=\"token string\">'leftArm'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Scavenger'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Excavator'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span><span class=\"token punctuation\">,</span>\n\n    bodyPart<span class=\"token punctuation\">:</span> <span class=\"token string\">'rightArm'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Mixmaster'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Concrete Mixer'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span><span class=\"token punctuation\">,</span>\n\n    bodyPart<span class=\"token punctuation\">:</span> <span class=\"token string\">'leftLeg'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token punctuation\">{</span>\n\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'Long Haul'</span><span class=\"token punctuation\">,</span>\n\n    form<span class=\"token punctuation\">:</span> <span class=\"token string\">'Dump Truck'</span><span class=\"token punctuation\">,</span>\n\n    team<span class=\"token punctuation\">:</span> <span class=\"token string\">'Decepticon'</span><span class=\"token punctuation\">,</span>\n\n    bodyPart<span class=\"token punctuation\">:</span> <span class=\"token string\">'lowerTorso'</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Reduce的<code class=\"language-text\">callback</code>需要至少两个参数。第一个是从上次遍历中返回的一个值，第二个是当前数组遍历到的一个值，返回值又将当做第一个参数被传入到下一次遍历。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">assemble</span><span class=\"token punctuation\">(</span>combiner<span class=\"token punctuation\">,</span> transformer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">//每次遍历都会将当前的变形金刚（transformer）的名字加入到组合器（combiner）的form中去。</span>\n\n  combiner<span class=\"token punctuation\">.</span>form<span class=\"token punctuation\">[</span>transformer<span class=\"token punctuation\">.</span>bodyPart<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> transformer<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> combiner<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这样，我们可以在调用reduce的时候，将<code class=\"language-text\">assemble</code>当做第一个参数传入，第二个参数是用来初次调用时的初始数据。接下来的例子便是我们提供一个仅仅有名字（name）和派别（team）的变形金刚，通过reduce中的<code class=\"language-text\">assemble</code>我们来组合成一个强大的变形金刚吧！</p>\n<p><img src=\"https://zerosoul.github.io/2016/12/06/array-filter-map-reduce-in-js/transform.gif\" alt=\"transforming\"></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> devastator <span class=\"token operator\">=</span> constructicons<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span>assemble<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n\n  name<span class=\"token punctuation\">:</span> ‘Devastator’<span class=\"token punctuation\">,</span>\n\n  team<span class=\"token punctuation\">:</span> ‘Decepticon’<span class=\"token punctuation\">,</span>\n\n  form<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\ndevastator == {\n\n  name: ‘Devastator’,\n\n  team: ‘Decepticon’,\n\n  form: {\n\n    leftArm: \"Bonecrusher\"\n\n    leftLeg: \"Mixmaster\"\n\n    lowerTorso: \"Long Haul\"\n\n    rightArm: \"Scavenger\"\n\n    rightLeg: \"Scrapper\"\n\n    upperTorso: \"Hook\"\n\n  }\n\n}\n\n*/</span></code></pre>\n      </div>\n<p>这些三个基本API一旦组合起来使用，也是很强大的。在此只是根据自己的使用经验抛砖引玉，想进一步了解的同学可以移步万能的<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\">MDN有关Array API的文档</a>。</p>","frontmatter":{"title":"Javascript Array中的filter、map和reduce","date":"2016-12-06T09:31:37.000Z","category":"它山之石","tags":["译文","技术","javascript","array"],"cover":"https://zerosoul.github.io/2016/12/06/array-filter-map-reduce-in-js/array-1.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2%E7%9A%84%E8%AF%9D\">写在前面的话</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#%E8%AF%91%E6%96%87\">译文</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#map\">Map</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#filter\">Filter</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#reduce\">Reduce</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#arraymap\">Array.map()</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#arrayfilter\">Array.filter()</a></li>\n<li><a href=\"/posts/array-filter-map-reduce-in-js/#arrayreduce\">Array.reduce()</a></li>\n</ul>","excerpt":"写在前面的话 前几天 写了篇文章 科普了下Javascript中 的妙用，后来无意间发现了 一篇好文章 ，一次性科普了三个API： 、 和 ，生动形象，尤其是配图，显然是用了心思。下面是译文： 译文 最近，一直在为一个客户做一个视觉化数据的项目，从服务端API…"},"next":{"fields":{"slug":"/posts/20-humanity-witness"},"html":"<h1 id=\"奥古斯特·桑德（1876-1964）\"><a href=\"#%E5%A5%A5%E5%8F%A4%E6%96%AF%E7%89%B9%C2%B7%E6%A1%91%E5%BE%B7%EF%BC%881876-1964%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>奥古斯特·桑德（1876-1964）</h1>\n<p>人像摄影家，时代脸孔的留影者，拍摄了大量日耳曼民族众生相。</p>\n<p><img src=\"/images/20witness/%E5%A4%B1%E4%B8%9A%E8%80%85.jpg\" alt=\"失业者\"></p>\n<p><img src=\"/images/20witness/%E9%9D%A2%E5%8C%85%E5%B8%88%E5%82%85.jpg\" alt=\"面包师傅\"></p>\n<h1 id=\"雅克-亨利·拉蒂格（1894-1986）\"><a href=\"#%E9%9B%85%E5%85%8B-%E4%BA%A8%E5%88%A9%C2%B7%E6%8B%89%E8%92%82%E6%A0%BC%EF%BC%881894-1986%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>雅克-亨利·拉蒂格（1894-1986）</h1>\n<p>用爱来拍照，用拍照来写日记，永远7岁的摄影大师。</p>\n<p><img src=\"/images/20witness/%E9%98%BF%E5%8D%A1%E5%B8%8C%E5%B0%94%E5%A4%A7%E9%81%93%E4%B8%8A.jpg\" alt=\"阿卡希尔大道上\"></p>\n<h1 id=\"安德烈·科特兹（1894-1985）\"><a href=\"#%E5%AE%89%E5%BE%B7%E7%83%88%C2%B7%E7%A7%91%E7%89%B9%E5%85%B9%EF%BC%881894-1985%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安德烈·科特兹（1894-1985）</h1>\n<p>众流归宗的元祖，深刻影响了布列松的拍摄技巧，被布列松来信称“真正的老师”。</p>\n<p><img src=\"/images/20witness/%E5%B0%8F%E7%8B%97.jpg\" alt=\"小狗\"></p>\n<h1 id=\"罗曼·维希尼克（1897-1990）\"><a href=\"#%E7%BD%97%E6%9B%BC%C2%B7%E7%BB%B4%E5%B8%8C%E5%B0%BC%E5%85%8B%EF%BC%881897-1990%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗曼·维希尼克（1897-1990）</h1>\n<p>世界顶尖的显微摄影专家，后来跟拍犹太人日常产生了大量经典作品，并以此闻名。</p>\n<h1 id=\"布拉塞（1899-1984）\"><a href=\"#%E5%B8%83%E6%8B%89%E5%A1%9E%EF%BC%881899-1984%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>布拉塞（1899-1984）</h1>\n<p>半路出家，拍摄夜之巴黎而闻名，享有“夜间摄影鼻祖”美誉</p>\n<h1 id=\"维吉（1899-1968）\"><a href=\"#%E7%BB%B4%E5%90%89%EF%BC%881899-1968%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>维吉（1899-1968）</h1>\n<p>街头摄影师，城市夜游者。布拉塞一直采用自然光，而维吉清一色用闪光灯照明。</p>\n<p><img src=\"/images/20witness/%E6%AD%BB%E5%B0%B8%E4%B8%8E%E5%B7%A6%E8%BD%AE%E6%89%8B%E6%9E%AA.jpg\" alt=\"死尸与左轮手枪\"></p>\n<p><img src=\"/images/20witness/%E8%94%AC%E8%8F%9C%E8%B4%A9%E5%AD%90.jpeg\" alt=\"蔬菜贩子\"></p>\n<h1 id=\"安塞尔·亚当斯（1902-1984）\"><a href=\"#%E5%AE%89%E5%A1%9E%E5%B0%94%C2%B7%E4%BA%9A%E5%BD%93%E6%96%AF%EF%BC%881902-1984%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安塞尔·亚当斯（1902-1984）</h1>\n<p>风光大师，完全摒弃摄影的记录功能，使摄影成为“纯粹的技术运作，担任美感的表达工具”，以拍摄美国山水著称。</p>\n<p><img src=\"/images/20witness/%E5%A8%81%E5%BB%89%E6%A3%AE%E5%B1%B1.jpg\" alt=\"威廉森山\"></p>\n<h1 id=\"曼纽尔·阿尔瓦雷斯·布拉沃（1902-2002）\"><a href=\"#%E6%9B%BC%E7%BA%BD%E5%B0%94%C2%B7%E9%98%BF%E5%B0%94%E7%93%A6%E9%9B%B7%E6%96%AF%C2%B7%E5%B8%83%E6%8B%89%E6%B2%83%EF%BC%881902-2002%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>曼纽尔·阿尔瓦雷斯·布拉沃（1902-2002）</h1>\n<p>墨西哥摄影家</p>\n<h1 id=\"比尔·勃兰特（1904-1983）\"><a href=\"#%E6%AF%94%E5%B0%94%C2%B7%E5%8B%83%E5%85%B0%E7%89%B9%EF%BC%881904-1983%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>比尔·勃兰特（1904-1983）</h1>\n<blockquote>\n<p>摄影家要具有婴儿或初入未知国境的旅行者那样的眼光</p>\n</blockquote>\n<p>片子呈现高度反差效果：灰色调子极少，黑白分明。</p>\n<h1 id=\"亨利·卡蒂埃-布列松（1908-2004）\"><a href=\"#%E4%BA%A8%E5%88%A9%C2%B7%E5%8D%A1%E8%92%82%E5%9F%83-%E5%B8%83%E5%88%97%E6%9D%BE%EF%BC%881908-2004%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>亨利·卡蒂埃-布列松（1908-2004）</h1>\n<p>摄影这一门，进去是ABC，出来时是HCB。创造出“决定性瞬间”，并不是留住“事物做好的一面”，而是“借由最好的一刹那，来使事件产生全新的意义与境界”，这是他最迷人的地方。</p>\n<p>柯特兹的等是让现实世界的情感更丰富，而布列松等的是怎么使现实世界更接近梦境。</p>\n<p><img src=\"/images/20witness/%E5%B7%B4%E9%BB%8E%E6%85%95%E8%B4%B9%E5%A1%94%E8%A1%97.jpg\" alt=\"巴黎慕费塔街\"></p>\n<h1 id=\"罗伯特·卡帕（1913-1954）\"><a href=\"#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%8D%A1%E5%B8%95%EF%BC%881913-1954%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗伯特·卡帕（1913-1954）</h1>\n<blockquote>\n<p>如果你的照片拍的不够好，那是因为离炮火不够近。</p>\n</blockquote>\n<p>著名的战地记者，创办了最具影响力的摄影组织：马格南。（马格南：一种两夸脱装的大桶香槟酒，为好友们庆祝生还的聚会上经常喝的）</p>\n<p><img src=\"/images/20witness/%E4%B8%AD%E5%BC%B9%E4%BA%86%EF%BC%88%E8%A5%BF%E7%8F%AD%E7%89%99%E5%89%8D%E7%BA%BF%EF%BC%89.jpg\" alt=\"中弹了（西班牙前线）\"></p>\n<p><img src=\"/images/20witness/%E8%B6%8A%E5%8D%97%E6%88%98%E4%BA%89.jpg\" alt=\"越南战争\"></p>\n<h1 id=\"尤金·史密斯（1918-1978）\"><a href=\"#%E5%B0%A4%E9%87%91%C2%B7%E5%8F%B2%E5%AF%86%E6%96%AF%EF%BC%881918-1978%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>尤金·史密斯（1918-1978）</h1>\n<p>理想的浪漫主义者，一辈子都在干新闻记者，替Newsweek、Time、Life拍照。他只拍人，只拍受苦难的人，只拍勇于向命运挑战的人，只拍为别人而付出的人，只拍需要大家关心的人。曾因“水俣专集”引起全世界对污染公害的重视，成为了日本民间英雄。</p>\n<p><img src=\"/images/20witness/%E6%99%BA%E5%AD%90%E5%85%A5%E6%B5%B4.jpeg\" alt=\"智子入浴\"></p>\n<h1 id=\"黛安娜·阿勃丝（1923-1971）\"><a href=\"#%E9%BB%9B%E5%AE%89%E5%A8%9C%C2%B7%E9%98%BF%E5%8B%83%E4%B8%9D%EF%BC%881923-1971%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>黛安娜·阿勃丝（1923-1971）</h1>\n<p>拍摄常态中的畸形，畸形中的常态。后来染上严重的周期性忧郁症，又有长期性的肝炎，最后自杀来寻求解脱。</p>\n<p><img src=\"/images/20witness/%E5%93%AD%E6%B3%A3%E7%9A%84%E5%B0%8F%E5%AD%A9.jpg\" alt=\"哭泣的小孩\"></p>\n<p><img src=\"/images/20witness/%E5%8F%8C%E8%83%9E%E8%83%8E.jpg\" alt=\"双胞胎\"></p>\n<h1 id=\"罗伯特·弗兰克（1924-）\"><a href=\"#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%BC%97%E5%85%B0%E5%85%8B%EF%BC%881924-%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗伯特·弗兰克（1924-）</h1>\n<p>他反对布列松的“决定性时刻”哲学，认为“摄影不该记录无所谓的刹那，摄影不必要摄取情绪最高涨的瞬间”，而采用十分不经意的手法去拍照，开创了即兴摄影的新领域。著有《美国人》。</p>\n<p><img src=\"/images/20witness/%E7%BE%8E%E5%9B%BD%E4%BA%BA.jpg\" alt=\"美国人\"></p>\n<h1 id=\"威廉·克莱因（1928-）\"><a href=\"#%E5%A8%81%E5%BB%89%C2%B7%E5%85%8B%E8%8E%B1%E5%9B%A0%EF%BC%881928-%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>威廉·克莱因（1928-）</h1>\n<p>街头摄影，行为怪异，表现极端，说辞故弄玄虚，照片却又很强烈。</p>\n<p><img src=\"/images/20witness/%E6%9E%AA.jpeg\" alt=\"枪\"></p>","frontmatter":{"title":"阅读笔记《20位人性见证者：当代摄影大师》","date":"2016-11-28T09:31:37.000Z","category":"阅读笔记","tags":["读书笔记","摄影","阅读"],"cover":"/images/20witness/小狗.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/20-humanity-witness/#%E5%A5%A5%E5%8F%A4%E6%96%AF%E7%89%B9%C2%B7%E6%A1%91%E5%BE%B7%EF%BC%881876-1964%EF%BC%89\">奥古斯特·桑德（1876-1964）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E9%9B%85%E5%85%8B-%E4%BA%A8%E5%88%A9%C2%B7%E6%8B%89%E8%92%82%E6%A0%BC%EF%BC%881894-1986%EF%BC%89\">雅克-亨利·拉蒂格（1894-1986）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%AE%89%E5%BE%B7%E7%83%88%C2%B7%E7%A7%91%E7%89%B9%E5%85%B9%EF%BC%881894-1985%EF%BC%89\">安德烈·科特兹（1894-1985）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BD%97%E6%9B%BC%C2%B7%E7%BB%B4%E5%B8%8C%E5%B0%BC%E5%85%8B%EF%BC%881897-1990%EF%BC%89\">罗曼·维希尼克（1897-1990）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%B8%83%E6%8B%89%E5%A1%9E%EF%BC%881899-1984%EF%BC%89\">布拉塞（1899-1984）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BB%B4%E5%90%89%EF%BC%881899-1968%EF%BC%89\">维吉（1899-1968）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%AE%89%E5%A1%9E%E5%B0%94%C2%B7%E4%BA%9A%E5%BD%93%E6%96%AF%EF%BC%881902-1984%EF%BC%89\">安塞尔·亚当斯（1902-1984）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E6%9B%BC%E7%BA%BD%E5%B0%94%C2%B7%E9%98%BF%E5%B0%94%E7%93%A6%E9%9B%B7%E6%96%AF%C2%B7%E5%B8%83%E6%8B%89%E6%B2%83%EF%BC%881902-2002%EF%BC%89\">曼纽尔·阿尔瓦雷斯·布拉沃（1902-2002）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E6%AF%94%E5%B0%94%C2%B7%E5%8B%83%E5%85%B0%E7%89%B9%EF%BC%881904-1983%EF%BC%89\">比尔·勃兰特（1904-1983）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E4%BA%A8%E5%88%A9%C2%B7%E5%8D%A1%E8%92%82%E5%9F%83-%E5%B8%83%E5%88%97%E6%9D%BE%EF%BC%881908-2004%EF%BC%89\">亨利·卡蒂埃-布列松（1908-2004）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%8D%A1%E5%B8%95%EF%BC%881913-1954%EF%BC%89\">罗伯特·卡帕（1913-1954）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%B0%A4%E9%87%91%C2%B7%E5%8F%B2%E5%AF%86%E6%96%AF%EF%BC%881918-1978%EF%BC%89\">尤金·史密斯（1918-1978）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E9%BB%9B%E5%AE%89%E5%A8%9C%C2%B7%E9%98%BF%E5%8B%83%E4%B8%9D%EF%BC%881923-1971%EF%BC%89\">黛安娜·阿勃丝（1923-1971）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%BC%97%E5%85%B0%E5%85%8B%EF%BC%881924-%EF%BC%89\">罗伯特·弗兰克（1924-）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%A8%81%E5%BB%89%C2%B7%E5%85%8B%E8%8E%B1%E5%9B%A0%EF%BC%881928-%EF%BC%89\">威廉·克莱因（1928-）</a></li>\n</ul>","excerpt":"奥古斯特·桑德（1876-1964） 人像摄影家，时代脸孔的留影者，拍摄了大量日耳曼民族众生相。 雅克-亨利·拉蒂格（1894-1986） 用爱来拍照，用拍照来写日记，永远7岁的摄影大师。 安德烈·科特兹（1894-198…"}}}