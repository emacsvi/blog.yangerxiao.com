{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/20-humanity-witness"},"html":"<h1 id=\"奥古斯特·桑德（1876-1964）\"><a href=\"#%E5%A5%A5%E5%8F%A4%E6%96%AF%E7%89%B9%C2%B7%E6%A1%91%E5%BE%B7%EF%BC%881876-1964%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>奥古斯特·桑德（1876-1964）</h1>\n<p>人像摄影家，时代脸孔的留影者，拍摄了大量日耳曼民族众生相。</p>\n<p><img src=\"/images/20witness/%E5%A4%B1%E4%B8%9A%E8%80%85.jpg\" alt=\"失业者\"></p>\n<p><img src=\"/images/20witness/%E9%9D%A2%E5%8C%85%E5%B8%88%E5%82%85.jpg\" alt=\"面包师傅\"></p>\n<h1 id=\"雅克-亨利·拉蒂格（1894-1986）\"><a href=\"#%E9%9B%85%E5%85%8B-%E4%BA%A8%E5%88%A9%C2%B7%E6%8B%89%E8%92%82%E6%A0%BC%EF%BC%881894-1986%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>雅克-亨利·拉蒂格（1894-1986）</h1>\n<p>用爱来拍照，用拍照来写日记，永远7岁的摄影大师。</p>\n<p><img src=\"/images/20witness/%E9%98%BF%E5%8D%A1%E5%B8%8C%E5%B0%94%E5%A4%A7%E9%81%93%E4%B8%8A.jpg\" alt=\"阿卡希尔大道上\"></p>\n<h1 id=\"安德烈·科特兹（1894-1985）\"><a href=\"#%E5%AE%89%E5%BE%B7%E7%83%88%C2%B7%E7%A7%91%E7%89%B9%E5%85%B9%EF%BC%881894-1985%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安德烈·科特兹（1894-1985）</h1>\n<p>众流归宗的元祖，深刻影响了布列松的拍摄技巧，被布列松来信称“真正的老师”。</p>\n<p><img src=\"/images/20witness/%E5%B0%8F%E7%8B%97.jpg\" alt=\"小狗\"></p>\n<h1 id=\"罗曼·维希尼克（1897-1990）\"><a href=\"#%E7%BD%97%E6%9B%BC%C2%B7%E7%BB%B4%E5%B8%8C%E5%B0%BC%E5%85%8B%EF%BC%881897-1990%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗曼·维希尼克（1897-1990）</h1>\n<p>世界顶尖的显微摄影专家，后来跟拍犹太人日常产生了大量经典作品，并以此闻名。</p>\n<h1 id=\"布拉塞（1899-1984）\"><a href=\"#%E5%B8%83%E6%8B%89%E5%A1%9E%EF%BC%881899-1984%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>布拉塞（1899-1984）</h1>\n<p>半路出家，拍摄夜之巴黎而闻名，享有“夜间摄影鼻祖”美誉</p>\n<h1 id=\"维吉（1899-1968）\"><a href=\"#%E7%BB%B4%E5%90%89%EF%BC%881899-1968%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>维吉（1899-1968）</h1>\n<p>街头摄影师，城市夜游者。布拉塞一直采用自然光，而维吉清一色用闪光灯照明。</p>\n<p><img src=\"/images/20witness/%E6%AD%BB%E5%B0%B8%E4%B8%8E%E5%B7%A6%E8%BD%AE%E6%89%8B%E6%9E%AA.jpg\" alt=\"死尸与左轮手枪\"></p>\n<p><img src=\"/images/20witness/%E8%94%AC%E8%8F%9C%E8%B4%A9%E5%AD%90.jpeg\" alt=\"蔬菜贩子\"></p>\n<h1 id=\"安塞尔·亚当斯（1902-1984）\"><a href=\"#%E5%AE%89%E5%A1%9E%E5%B0%94%C2%B7%E4%BA%9A%E5%BD%93%E6%96%AF%EF%BC%881902-1984%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>安塞尔·亚当斯（1902-1984）</h1>\n<p>风光大师，完全摒弃摄影的记录功能，使摄影成为“纯粹的技术运作，担任美感的表达工具”，以拍摄美国山水著称。</p>\n<p><img src=\"/images/20witness/%E5%A8%81%E5%BB%89%E6%A3%AE%E5%B1%B1.jpg\" alt=\"威廉森山\"></p>\n<h1 id=\"曼纽尔·阿尔瓦雷斯·布拉沃（1902-2002）\"><a href=\"#%E6%9B%BC%E7%BA%BD%E5%B0%94%C2%B7%E9%98%BF%E5%B0%94%E7%93%A6%E9%9B%B7%E6%96%AF%C2%B7%E5%B8%83%E6%8B%89%E6%B2%83%EF%BC%881902-2002%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>曼纽尔·阿尔瓦雷斯·布拉沃（1902-2002）</h1>\n<p>墨西哥摄影家</p>\n<h1 id=\"比尔·勃兰特（1904-1983）\"><a href=\"#%E6%AF%94%E5%B0%94%C2%B7%E5%8B%83%E5%85%B0%E7%89%B9%EF%BC%881904-1983%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>比尔·勃兰特（1904-1983）</h1>\n<blockquote>\n<p>摄影家要具有婴儿或初入未知国境的旅行者那样的眼光</p>\n</blockquote>\n<p>片子呈现高度反差效果：灰色调子极少，黑白分明。</p>\n<h1 id=\"亨利·卡蒂埃-布列松（1908-2004）\"><a href=\"#%E4%BA%A8%E5%88%A9%C2%B7%E5%8D%A1%E8%92%82%E5%9F%83-%E5%B8%83%E5%88%97%E6%9D%BE%EF%BC%881908-2004%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>亨利·卡蒂埃-布列松（1908-2004）</h1>\n<p>摄影这一门，进去是ABC，出来时是HCB。创造出“决定性瞬间”，并不是留住“事物做好的一面”，而是“借由最好的一刹那，来使事件产生全新的意义与境界”，这是他最迷人的地方。</p>\n<p>柯特兹的等是让现实世界的情感更丰富，而布列松等的是怎么使现实世界更接近梦境。</p>\n<p><img src=\"/images/20witness/%E5%B7%B4%E9%BB%8E%E6%85%95%E8%B4%B9%E5%A1%94%E8%A1%97.jpg\" alt=\"巴黎慕费塔街\"></p>\n<h1 id=\"罗伯特·卡帕（1913-1954）\"><a href=\"#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%8D%A1%E5%B8%95%EF%BC%881913-1954%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗伯特·卡帕（1913-1954）</h1>\n<blockquote>\n<p>如果你的照片拍的不够好，那是因为离炮火不够近。</p>\n</blockquote>\n<p>著名的战地记者，创办了最具影响力的摄影组织：马格南。（马格南：一种两夸脱装的大桶香槟酒，为好友们庆祝生还的聚会上经常喝的）</p>\n<p><img src=\"/images/20witness/%E4%B8%AD%E5%BC%B9%E4%BA%86%EF%BC%88%E8%A5%BF%E7%8F%AD%E7%89%99%E5%89%8D%E7%BA%BF%EF%BC%89.jpg\" alt=\"中弹了（西班牙前线）\"></p>\n<p><img src=\"/images/20witness/%E8%B6%8A%E5%8D%97%E6%88%98%E4%BA%89.jpg\" alt=\"越南战争\"></p>\n<h1 id=\"尤金·史密斯（1918-1978）\"><a href=\"#%E5%B0%A4%E9%87%91%C2%B7%E5%8F%B2%E5%AF%86%E6%96%AF%EF%BC%881918-1978%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>尤金·史密斯（1918-1978）</h1>\n<p>理想的浪漫主义者，一辈子都在干新闻记者，替Newsweek、Time、Life拍照。他只拍人，只拍受苦难的人，只拍勇于向命运挑战的人，只拍为别人而付出的人，只拍需要大家关心的人。曾因“水俣专集”引起全世界对污染公害的重视，成为了日本民间英雄。</p>\n<p><img src=\"/images/20witness/%E6%99%BA%E5%AD%90%E5%85%A5%E6%B5%B4.jpeg\" alt=\"智子入浴\"></p>\n<h1 id=\"黛安娜·阿勃丝（1923-1971）\"><a href=\"#%E9%BB%9B%E5%AE%89%E5%A8%9C%C2%B7%E9%98%BF%E5%8B%83%E4%B8%9D%EF%BC%881923-1971%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>黛安娜·阿勃丝（1923-1971）</h1>\n<p>拍摄常态中的畸形，畸形中的常态。后来染上严重的周期性忧郁症，又有长期性的肝炎，最后自杀来寻求解脱。</p>\n<p><img src=\"/images/20witness/%E5%93%AD%E6%B3%A3%E7%9A%84%E5%B0%8F%E5%AD%A9.jpg\" alt=\"哭泣的小孩\"></p>\n<p><img src=\"/images/20witness/%E5%8F%8C%E8%83%9E%E8%83%8E.jpg\" alt=\"双胞胎\"></p>\n<h1 id=\"罗伯特·弗兰克（1924-）\"><a href=\"#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%BC%97%E5%85%B0%E5%85%8B%EF%BC%881924-%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗伯特·弗兰克（1924-）</h1>\n<p>他反对布列松的“决定性时刻”哲学，认为“摄影不该记录无所谓的刹那，摄影不必要摄取情绪最高涨的瞬间”，而采用十分不经意的手法去拍照，开创了即兴摄影的新领域。著有《美国人》。</p>\n<p><img src=\"/images/20witness/%E7%BE%8E%E5%9B%BD%E4%BA%BA.jpg\" alt=\"美国人\"></p>\n<h1 id=\"威廉·克莱因（1928-）\"><a href=\"#%E5%A8%81%E5%BB%89%C2%B7%E5%85%8B%E8%8E%B1%E5%9B%A0%EF%BC%881928-%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>威廉·克莱因（1928-）</h1>\n<p>街头摄影，行为怪异，表现极端，说辞故弄玄虚，照片却又很强烈。</p>\n<p><img src=\"/images/20witness/%E6%9E%AA.jpeg\" alt=\"枪\"></p>","frontmatter":{"title":"阅读笔记《20位人性见证者：当代摄影大师》","date":"2016-11-28T09:31:37.000Z","category":"阅读笔记","tags":["读书笔记","摄影","阅读"],"cover":"/images/20witness/小狗.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/20-humanity-witness/#%E5%A5%A5%E5%8F%A4%E6%96%AF%E7%89%B9%C2%B7%E6%A1%91%E5%BE%B7%EF%BC%881876-1964%EF%BC%89\">奥古斯特·桑德（1876-1964）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E9%9B%85%E5%85%8B-%E4%BA%A8%E5%88%A9%C2%B7%E6%8B%89%E8%92%82%E6%A0%BC%EF%BC%881894-1986%EF%BC%89\">雅克-亨利·拉蒂格（1894-1986）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%AE%89%E5%BE%B7%E7%83%88%C2%B7%E7%A7%91%E7%89%B9%E5%85%B9%EF%BC%881894-1985%EF%BC%89\">安德烈·科特兹（1894-1985）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BD%97%E6%9B%BC%C2%B7%E7%BB%B4%E5%B8%8C%E5%B0%BC%E5%85%8B%EF%BC%881897-1990%EF%BC%89\">罗曼·维希尼克（1897-1990）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%B8%83%E6%8B%89%E5%A1%9E%EF%BC%881899-1984%EF%BC%89\">布拉塞（1899-1984）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BB%B4%E5%90%89%EF%BC%881899-1968%EF%BC%89\">维吉（1899-1968）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%AE%89%E5%A1%9E%E5%B0%94%C2%B7%E4%BA%9A%E5%BD%93%E6%96%AF%EF%BC%881902-1984%EF%BC%89\">安塞尔·亚当斯（1902-1984）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E6%9B%BC%E7%BA%BD%E5%B0%94%C2%B7%E9%98%BF%E5%B0%94%E7%93%A6%E9%9B%B7%E6%96%AF%C2%B7%E5%B8%83%E6%8B%89%E6%B2%83%EF%BC%881902-2002%EF%BC%89\">曼纽尔·阿尔瓦雷斯·布拉沃（1902-2002）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E6%AF%94%E5%B0%94%C2%B7%E5%8B%83%E5%85%B0%E7%89%B9%EF%BC%881904-1983%EF%BC%89\">比尔·勃兰特（1904-1983）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E4%BA%A8%E5%88%A9%C2%B7%E5%8D%A1%E8%92%82%E5%9F%83-%E5%B8%83%E5%88%97%E6%9D%BE%EF%BC%881908-2004%EF%BC%89\">亨利·卡蒂埃-布列松（1908-2004）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%8D%A1%E5%B8%95%EF%BC%881913-1954%EF%BC%89\">罗伯特·卡帕（1913-1954）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%B0%A4%E9%87%91%C2%B7%E5%8F%B2%E5%AF%86%E6%96%AF%EF%BC%881918-1978%EF%BC%89\">尤金·史密斯（1918-1978）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E9%BB%9B%E5%AE%89%E5%A8%9C%C2%B7%E9%98%BF%E5%8B%83%E4%B8%9D%EF%BC%881923-1971%EF%BC%89\">黛安娜·阿勃丝（1923-1971）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E5%BC%97%E5%85%B0%E5%85%8B%EF%BC%881924-%EF%BC%89\">罗伯特·弗兰克（1924-）</a></li>\n<li><a href=\"/posts/20-humanity-witness/#%E5%A8%81%E5%BB%89%C2%B7%E5%85%8B%E8%8E%B1%E5%9B%A0%EF%BC%881928-%EF%BC%89\">威廉·克莱因（1928-）</a></li>\n</ul>","excerpt":"奥古斯特·桑德（1876-1964） 人像摄影家，时代脸孔的留影者，拍摄了大量日耳曼民族众生相。 雅克-亨利·拉蒂格（1894-1986） 用爱来拍照，用拍照来写日记，永远7岁的摄影大师。 安德烈·科特兹（1894-198…"}},{"node":{"fields":{"slug":"/posts/html-5-memo"},"html":"<p><img src=\"https://zerosoul.github.io/2016/11/15/h5-memo/html5.jpg\" alt=\"html5\"><br>\n把平时开发工作中遇到的一些问题写下来，权当备忘录。</p>\n<h1 id=\"有关meta\"><a href=\"#%E6%9C%89%E5%85%B3meta\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>有关Meta</h1>\n<h2 id=\"基本meta\"><a href=\"#%E5%9F%BA%E6%9C%ACmeta\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基本Meta</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 设置缩放 --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1, user-scalable=no, minimal-ui<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">&lt;!-- 可隐藏地址栏，仅针对IOS的Safari（注：IOS7.0版本以后，safari上已看不到效果） --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>apple-mobile-web-app-capable<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">&lt;!-- 仅针对IOS的Safari顶端状态条的样式（可选default/black/black-translucent ） --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>apple-mobile-web-app-status-bar-style<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">&lt;!-- IOS中禁用将数字识别为电话号码/忽略Android平台中对邮箱地址的识别 --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>format-detection<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>telephone=no, email=no<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<h2 id=\"搜索引擎meta\"><a href=\"#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8Emeta\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>搜索引擎Meta</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 搜索引擎索引方式：通常有如下几种取值：none，noindex，nofollow，all，index和follow。--></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>robots<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>index,follow<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\n<span class=\"token comment\">&lt;!--\n\n    all：文件将被检索，且页面上的链接可以被查询；\n\n    none：文件将不被检索，且页面上的链接不可以被查询；\n\n    index：文件将被检索；\n\n    follow：页面上的链接可以被查询；\n\n    noindex：文件将不被检索；\n\n    nofollow：页面上的链接不可以被查询。\n\n --></span></code></pre>\n      </div>\n<h2 id=\"页面缓存设置meta\"><a href=\"#%E9%A1%B5%E9%9D%A2%E7%BC%93%E5%AD%98%E8%AE%BE%E7%BD%AEmeta\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>页面缓存设置Meta</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!-- 清除缓存 --></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pragma<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>no-cache<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>cache-control<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>no-cache<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>expires<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h1 id=\"常见问题\"><a href=\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>常见问题</h1>\n<h2 id=\"移动端字体设置\"><a href=\"#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>移动端字体设置</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/*中英字体名对照表\n\n宋体      SimSun\n\n黑体      SimHei\n\n微信雅黑   Microsoft Yahei\n\n微软正黑体 Microsoft JhengHei\n\n新宋体    NSimSun\n\n新细明体  MingLiU\n\n细明体    MingLiU\n\n标楷体    DFKai-SB\n\n仿宋     FangSong\n\n楷体     KaiTi\n\n仿宋\\_GB2312  FangSong\\_GB2312\n\n楷体\\_GB2312  KaiTi\\_GB2312  \n\n说明：中文字体多数使用宋雅黑，英文用Helvetica\n\n*/</span>\n\n<span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Microsoft Yahei,SimSun,Helvetica<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"打电话发短信写邮件\"><a href=\"#%E6%89%93%E7%94%B5%E8%AF%9D%E5%8F%91%E7%9F%AD%E4%BF%A1%E5%86%99%E9%82%AE%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打电话发短信写邮件</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">// 打电话\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tel:010-88888<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>打电话给:010-88888<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//  发短信\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sms:88888<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>发短信给: 88888<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n// 写邮件\n\n//注：在添加这些功能时，第一个功能以\"?\"开头，后面的以\"&amp;\"开头\n\n//1.普通邮件\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//2.收件地址后添加?cc=开头，可添加抄送地址（Android存在兼容问题）\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com?cc=666@wtf.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//3.跟着抄送地址后，写上&amp;bcc=,可添加密件抄送地址（Android存在兼容问题）\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com?cc=666@wtf.com&amp;bcc=384900096@wtf.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//4.包含多个收件人、抄送、密件抄送人，用分号(;)隔开多个邮件人的地址\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com;384900096@wtf.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//5.包含主题，用?subject=\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com?subject=邮件主题<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//6.包含内容，用?body=;如内容包含文本，使用%0A给文本换行 \n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com?body=邮件主题内容%0A我是第二行内容%0A你没有猜错，这是我是第三行。<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//7.内容包含链接，含http(s)://等的文本自动转化为链接\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com?body=http://www.wtf.com<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//8.内容包含图片（PC不支持）\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com?body=&lt;img src=<span class=\"token punctuation\">'</span>images/torrent.jpg<span class=\"token punctuation\">'</span> /><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n\n//9.完整示例\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>mailto:haha@wtf.com;384900096@wtf.com?cc=666@wtf.com&amp;bcc=993233461@wtf.com&amp;subject=[邮主题\\]&amp;body=我是第一行内容%0A%0Ahttp://www.baidu.com%0A%0A&lt;img src=<span class=\"token punctuation\">'</span>images/1.jpg<span class=\"token punctuation\">'</span> /><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>快来点我啊，给你发种子。<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h2 id=\"touch事件\"><a href=\"#touch%E4%BA%8B%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>touch事件</h2>\n<p>事件响应顺序：<code class=\"language-text\">ontouchstart</code> > <code class=\"language-text\">ontouchmove</code> > <code class=\"language-text\">ontouchend</code> > <code class=\"language-text\">onclick</code></p>\n<ul>\n<li><code class=\"language-text\">touchstart</code>——当手指触碰屏幕时候发生</li>\n<li><code class=\"language-text\">touchmove</code>——当手指在屏幕上滑动时连续触发。</li>\n<li>通常在滑屏页面，会调用<code class=\"language-text\">event</code>的<code class=\"language-text\">preventDefault()</code>可以阻止默认情况的发生：阻止页面滚动</li>\n<li><code class=\"language-text\">touchend</code>——当手指离开屏幕时触发</li>\n<li><code class=\"language-text\">touchcancel</code>——系统停止跟踪触摸时候会触发。例如在触摸过程中突然页面<code class=\"language-text\">alert()</code>，此时会触发该事件，这个事件比较少用。</li>\n</ul>\n<p>TouchEvent说明：</p>\n<ul>\n<li>touches：屏幕上所有手指的信息</li>\n<li>targetTouches：手指在目标区域的手指信息</li>\n<li>changedTouches：最近一次触发该事件的手指信息</li>\n<li>touchend时，touches与targetTouches信息会被删除，changedTouches保存的最后一次的信息，用于计算手指信息</li>\n</ul>\n<p>参数信息(changedTouches[0])</p>\n<ul>\n<li>clientX、clientY在显示区的坐标</li>\n<li>target：当前元素</li>\n</ul>\n<h2 id=\"科普：移动端click事件200-300ms的延时响应\"><a href=\"#%E7%A7%91%E6%99%AE%EF%BC%9A%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E4%BA%8B%E4%BB%B6200-300ms%E7%9A%84%E5%BB%B6%E6%97%B6%E5%93%8D%E5%BA%94\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>科普：移动端click事件200-300ms的延时响应</h2>\n<p>以下是历史原因：</p>\n<blockquote>\n<p>2007年苹果发布首款iphone上IOS系统搭载的safari为了将适用于PC端上大屏幕的网页能比较好的展示在手机端上，使用了双击缩放(double tap to zoom)的方案，比如你在手机上用浏览器打开一个PC上的网页，你可能在看到页面内容虽然可以撑满整个屏幕，但是字体、图片都很小看不清，此时可以快速双击屏幕上的某一部分，你就能看清该部分放大后的内容，再次双击后能回到原始状态。<br>\n双击缩放是指用手指在屏幕上快速点击两次，iOS 自带的 Safari 浏览器会将网页缩放至原始比例。<br>\n原因就出在浏览器需要如何判断快速点击上，当用户在屏幕上单击某一个元素时候，例如跳转链接<code class=\"language-<a href=\"#\"\">&lt;/a</code>，此处浏览器会先捕获该次单击，但浏览器不能决定用户是单纯要点击链接还是要双击该部分区域进行缩放操作，所以，捕获第一次单击后，浏览器会先Hold一段时间t，如果在t时间区间里用户未进行下一次点击，则浏览器会做单击跳转链接的处理，如果t时间里用户进行了第二次单击操作，则浏览器会禁止跳转，转而进行对该部分区域页面的缩放操作。那么这个时间区间t有多少呢？在IOS safari下，大概为300毫秒。这就是延迟的由来。</p>\n</blockquote>\n<p>造成的后果用户纯粹单击页面，页面需要过一段时间才响应，给用户慢体验感觉，对于web开发者来说是，页面js捕获click事件的回调函数处理，需要300ms后才生效，也就间接导致影响其他业务逻辑的处理。</p>\n<p>解决方案：</p>\n<ul>\n<li><a href=\"https://github.com/ftlabs/fastclick\">fastclick</a></li>\n<li>zepto的<a href=\"https://github.com/madrobby/zepto/blob/master/src/touch.js#files\">touch模块</a></li>\n</ul>\n<h2 id=\"点击元素产生背景或边框问题\"><a href=\"#%E7%82%B9%E5%87%BB%E5%85%83%E7%B4%A0%E4%BA%A7%E7%94%9F%E8%83%8C%E6%99%AF%E6%88%96%E8%BE%B9%E6%A1%86%E9%97%AE%E9%A2%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>点击元素产生背景或边框问题</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">a,button,input,textarea</span> <span class=\"token punctuation\">{</span> \n\n    <span class=\"token property\">-webkit-tap-highlight-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0,0,0,0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    <span class=\"token property\">-webkit-user-modify</span><span class=\"token punctuation\">:</span>read-write-plaintext-only<span class=\"token punctuation\">;</span> //-webkit-user-modify有个副作用，就是输入法不再能够输入多个字符\n\n<span class=\"token punctuation\">}</span>   </code></pre>\n      </div>\n<p>/<em>也可以...，简单粗暴</em>/</p>\n<p>* { -webkit-tap-highlight-color: rgba(0,0,0,0); }</p>\n<h2 id=\"字体单位font-size选择px还是rem\"><a href=\"#%E5%AD%97%E4%BD%93%E5%8D%95%E4%BD%8Dfont-size%E9%80%89%E6%8B%A9px%E8%BF%98%E6%98%AFrem\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>字体单位font-size选择px还是rem</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"> <span class=\"token comment\">/*如需适配多种移动设备，建议使用rem。以下为参考值：*/</span>\n\n<span class=\"token selector\">html</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 62.5%<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>   <span class=\"token comment\">/*10÷16 = 62.5%\\*/</span></code></pre>\n      </div>\n<p>/*设置12px字体。</p>\n<p>注：在rem前要加上对应的px值，解决不支持rem的浏览器的兼容问题，做到优雅降级*/</p>\n<p>body { font-size:12px; font-size:1.2rem; }</p>\n<h2 id=\"其它一些实用css技巧\"><a href=\"#%E5%85%B6%E5%AE%83%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8css%E6%8A%80%E5%B7%A7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其它一些实用CSS技巧</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/*禁止长按链接与图片弹出菜单*/</span>\n\n<span class=\"token selector\">a,img</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">-webkit-touch-callout</span><span class=\"token punctuation\">:</span> none <span class=\"token punctuation\">}</span>    \n\n<span class=\"token comment\">/*禁止ios和android用户选中文字*/</span>\n\n<span class=\"token selector\">html,body</span> <span class=\"token punctuation\">{</span><span class=\"token property\">-webkit-user-select</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span> <span class=\"token property\">user-select</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*改变输入框placeholder的颜色值*/</span>\n\n<span class=\"token selector\">::-webkit-input-placeholder</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* WebKit browsers */</span>\n\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">:-moz-placeholder</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Mozilla Firefox 4 to 18 */</span>\n\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">::-moz-placeholder</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Mozilla Firefox 19+ */</span>\n\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">:-ms-input-placeholder</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* Internet Explorer 10+ */</span>\n\n<span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #999<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">input:focus::-webkit-input-placeholder</span><span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span>#999<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*android上去掉语音输入按钮\\*/</span>\n\n<span class=\"token selector\">input::-webkit-input-speech-button</span> <span class=\"token punctuation\">{</span><span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"禁用input在ios下，输入英文首字母的默认大写\"><a href=\"#%E7%A6%81%E7%94%A8input%E5%9C%A8ios%E4%B8%8B%EF%BC%8C%E8%BE%93%E5%85%A5%E8%8B%B1%E6%96%87%E9%A6%96%E5%AD%97%E6%AF%8D%E7%9A%84%E9%BB%98%E8%AE%A4%E5%A4%A7%E5%86%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>禁用input在ios下，输入英文首字母的默认大写</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">autocapitalize</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>off<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocorrect</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>off<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<h2 id=\"屏幕旋转的事件和样式\"><a href=\"#%E5%B1%8F%E5%B9%95%E6%97%8B%E8%BD%AC%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%92%8C%E6%A0%B7%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>屏幕旋转的事件和样式</h2>\n<p>JS处理： </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">orientInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> orientChk <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientWidth <span class=\"token operator\">></span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>clientHeight<span class=\"token operator\">?</span><span class=\"token string\">'landscape'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'portrait'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>orientChk <span class=\"token operator\">==</span><span class=\"token string\">'lapdscape'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">//横屏下需要执行代码</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">//竖屏下需要执行代码</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">orientInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nwindow<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onorientationchange'</span> <span class=\"token keyword\">in</span> window<span class=\"token operator\">?</span><span class=\"token string\">'orientationchange'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>orientInit<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>CSS处理：  </p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/*竖屏时样式*/</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> all and <span class=\"token punctuation\">(</span><span class=\"token property\">orientation</span><span class=\"token punctuation\">:</span>portrait<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>   <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*横屏时样式*/</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> all and <span class=\"token punctuation\">(</span><span class=\"token property\">orientation</span><span class=\"token punctuation\">:</span>landscape<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">{</span>   <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"播放视频不全屏\"><a href=\"#%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E4%B8%8D%E5%85%A8%E5%B1%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>播放视频不全屏</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token comment\">&lt;!--\n\n1.ios7+支持自动播放\n\n2.支持Airplay的设备（如：音箱、Apple TV)播放\n\nx-webkit-airplay=\"true\" \n\n3.播放视频不全屏\n\nwebkit-playsinline=\"true\" \n\n--></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>video</span> <span class=\"token attr-name\">x-webkit-airplay</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">webkit-playsinline</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">preload</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>auto<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autoplay</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>video</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h2 id=\"消除transition闪屏\"><a href=\"#%E6%B6%88%E9%99%A4transition%E9%97%AA%E5%B1%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>消除transition闪屏</h2>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.css</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token property\">-webkit-transform-style</span><span class=\"token punctuation\">:</span> preserve-3d<span class=\"token punctuation\">;</span>\n\n    <span class=\"token property\">-webkit-backface-visibility</span><span class=\"token punctuation\">:</span> hidden<span class=\"token punctuation\">;</span>\n\n    <span class=\"token property\">-webkit-perspective</span><span class=\"token punctuation\">:</span> 1000<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>","frontmatter":{"title":"移动端HTML5页面开发备忘录","date":"2016-11-15T09:31:37.000Z","category":"技术","tags":["技术","备忘","前端"],"cover":"https://zerosoul.github.io/2016/11/15/h5-memo/html5.jpg"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/html-5-memo/#%E6%9C%89%E5%85%B3meta\">有关Meta</a></p>\n<ul>\n<li><a href=\"/posts/html-5-memo/#%E5%9F%BA%E6%9C%ACmeta\">基本Meta</a></li>\n<li><a href=\"/posts/html-5-memo/#%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8Emeta\">搜索引擎Meta</a></li>\n<li><a href=\"/posts/html-5-memo/#%E9%A1%B5%E9%9D%A2%E7%BC%93%E5%AD%98%E8%AE%BE%E7%BD%AEmeta\">页面缓存设置Meta</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/posts/html-5-memo/#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\">常见问题</a></p>\n<ul>\n<li><a href=\"/posts/html-5-memo/#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%AD%97%E4%BD%93%E8%AE%BE%E7%BD%AE\">移动端字体设置</a></li>\n<li><a href=\"/posts/html-5-memo/#%E6%89%93%E7%94%B5%E8%AF%9D%E5%8F%91%E7%9F%AD%E4%BF%A1%E5%86%99%E9%82%AE%E4%BB%B6\">打电话发短信写邮件</a></li>\n<li><a href=\"/posts/html-5-memo/#touch%E4%BA%8B%E4%BB%B6\">touch事件</a></li>\n<li><a href=\"/posts/html-5-memo/#%E7%A7%91%E6%99%AE%EF%BC%9A%E7%A7%BB%E5%8A%A8%E7%AB%AFclick%E4%BA%8B%E4%BB%B6200-300ms%E7%9A%84%E5%BB%B6%E6%97%B6%E5%93%8D%E5%BA%94\">科普：移动端click事件200-300ms的延时响应</a></li>\n<li><a href=\"/posts/html-5-memo/#%E7%82%B9%E5%87%BB%E5%85%83%E7%B4%A0%E4%BA%A7%E7%94%9F%E8%83%8C%E6%99%AF%E6%88%96%E8%BE%B9%E6%A1%86%E9%97%AE%E9%A2%98\">点击元素产生背景或边框问题</a></li>\n<li><a href=\"/posts/html-5-memo/#%E5%AD%97%E4%BD%93%E5%8D%95%E4%BD%8Dfont-size%E9%80%89%E6%8B%A9px%E8%BF%98%E6%98%AFrem\">字体单位font-size选择px还是rem</a></li>\n<li><a href=\"/posts/html-5-memo/#%E5%85%B6%E5%AE%83%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8css%E6%8A%80%E5%B7%A7\">其它一些实用CSS技巧</a></li>\n<li><a href=\"/posts/html-5-memo/#%E7%A6%81%E7%94%A8input%E5%9C%A8ios%E4%B8%8B%EF%BC%8C%E8%BE%93%E5%85%A5%E8%8B%B1%E6%96%87%E9%A6%96%E5%AD%97%E6%AF%8D%E7%9A%84%E9%BB%98%E8%AE%A4%E5%A4%A7%E5%86%99\">禁用input在ios下，输入英文首字母的默认大写</a></li>\n<li><a href=\"/posts/html-5-memo/#%E5%B1%8F%E5%B9%95%E6%97%8B%E8%BD%AC%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%92%8C%E6%A0%B7%E5%BC%8F\">屏幕旋转的事件和样式</a></li>\n<li><a href=\"/posts/html-5-memo/#%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E4%B8%8D%E5%85%A8%E5%B1%8F\">播放视频不全屏</a></li>\n<li><a href=\"/posts/html-5-memo/#%E6%B6%88%E9%99%A4transition%E9%97%AA%E5%B1%8F\">消除transition闪屏</a></li>\n</ul>\n</li>\n</ul>","excerpt":"把平时开发工作中遇到的一些问题写下来，权当备忘录。 有关Meta 基本Meta 搜索引擎Meta 页面缓存设置Meta 常见问题 移动端字体设置 打电话发短信写邮件 touch…"}},{"node":{"fields":{"slug":"/posts/running-life"},"html":"<p><img src=\"https://zerosoul.github.io/2016/06/22/running-life/cscs.jpg\" alt=\"村上春树\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>去年开始跑步，现在隔三差五地跑5公里，基本养成了习惯。城市的喧嚣让人无法沉静，跑步让我恢复孤独与平静，虽然看过村上春树的《当我跑步时我谈些什么》，再读到下面文章的时候还是特别有感触，与你共勉。</p>\n<h1 id=\"原文\"><a href=\"#%E5%8E%9F%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原文</h1>\n<p>我33岁那年秋天决定以写小说为生。为了保持健康，我开始跑步，每天凌晨4点起床，写作4小时，跑10公里。</p>\n<p>我是那种容易发胖的体质。我妻子却无论怎么吃也胖不起来。这让我时常陷入沉思：“<strong>人生真是不公平啊！一些人无需认真就能得到的东西，另一些人却需要付出很多才能换来。</strong>”<br>\n不过转念一想，那些不费吹灰之力就能保持苗条的人，不会像我这样重视饮食和运动，也许老化得更快。什么才是公平，还得从长计议。</p>\n<p>几年之后，我终于步入小说家的行列，还成功减掉了多余的体重并戒掉了烟瘾。说起坚持跑步，总有人向我表示钦佩：“你真是意志超人啊！”说老实话，我觉得跑步这东西和意志没多大关联。能坚持跑步，恐怕还是因为这项运动合乎我的要求：不需要伙伴或对手，也不需要特别的器械和场所。人生本来如此：喜欢的事自然可以坚持，不喜欢的怎么也长久不了。</p>\n<p>在这期间，我坚持每年都参加一次马拉松比赛，不过100公里长的“超级马拉松”只跑过一次。那次经历真是终身难忘。</p>\n<p>那是1996年6月23日，我报名参加了在日本北海道佐吕间湖畔举行的超级马拉松大赛，全程100公里。清晨5点，我踌躇满志地站在了起跑线上。比赛的前半段是从起点到55公里休息站间的路程。没什么好说的，我只是安静地向前跑、跑、跑，感觉和每周例行的锻炼一样。到达55公里休息站后，我换了身干净衣服，吃了些妻子准备的点心。这时我发现双脚有些肿胀，于是赶紧换上一双大半号的跑鞋，又继续上路了。<br>\n从55公里到75公里的路程变得极其痛苦。此时的我心里念叨着向前冲，但身子却不听使唤。我拼命摆动手臂，觉得自己像块在绞肉机里艰难移动的牛肉，累的几乎要瘫倒在地。一会功夫，就有选手接二连三超过了我。最让人心焦的是，一位70多岁的老奶奶超过我时大喊：“坚持下去！”</p>\n<p>“怎么办？还有一半路，如何挺过去？”这时，我想起一本书上介绍的窍门。于是我开始默念：“<strong>我不是人！我是一架机器。我没有感觉。我只会前进！</strong>”这句咒语反复在脑子里转圈。我不再看远方，只把目标放在前面3米远处。天空和风、草地、观众、喝彩声、现实、过去——所有这些都被我排除在外。</p>\n<p>神奇的是，不知从哪一秒开始，我浑身的痛楚突然消失。整个人仿佛进入自动运行状态。我开始不断超越他人。接近最后一段赛程时，已经将200多人甩在身后。</p>\n<p>下午4点42分，我终于到达终点，成绩是11小时42分。这次经历让我意识到：终点线只是一个记号而已，其实并没有什么意义，关键是这一路你是如何跑的。人生也是如此。</p>\n<p>当时的我只有30多岁，但也不能称为“小伙子”了。这是耶稣死去的年龄。在这个年纪，我正式站在文学的起跑线上——虽然已不再年轻。</p>","frontmatter":{"title":"村上春树：人生马拉松","date":"2016-06-22T09:31:37.000Z","category":"阅读笔记","tags":["跑步","村上春树","成长"],"cover":"https://zerosoul.github.io/2016/06/22/running-life/cscs.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/running-life/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/running-life/#%E5%8E%9F%E6%96%87\">原文</a></li>\n</ul>","excerpt":"前言 去年开始跑步，现在隔三差五地跑5公里，基本养成了习惯。城市的喧嚣让人无法沉静，跑步让我恢复孤独与平静，虽然看过村上春树的《当我跑步时我谈些什么》，再读到下面文章的时候还是特别有感触，与你共勉。 原文 我33岁那年秋天决定以写小说为生。为了保持健康，我开始跑步，每天凌晨4点起床，写作…"}},{"node":{"fields":{"slug":"/posts/zero-to-one"},"html":"<p><img src=\"https://zerosoul.github.io/2016/05/22/zero-to-one/paypal_team.jpg\" alt=\"paypal team\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>我的生活里充满了套路：</p>\n<ul>\n<li>凌晨四点总会醒来，然后撒泡尿继续睡觉；</li>\n<li>每天早上必须洗澡，不然一天浑身难受；</li>\n<li>出门经常性不锁门，只是随手一带；</li>\n<li>自行车从来不上锁，即使是放在了地铁口；</li>\n<li>随身现金从来没超过200，能支付宝就微信；</li>\n<li>跑完步一定要发朋友圈，不然就觉得白跑了；</li>\n</ul>\n<p>读书也是，一般会避开畅销书，挑选豆瓣评分较高的经典书，也会从一本书开始了解到作者，进而选读他的其他作品，还会无意间听到一个牛人，知道他写过某本书，然后买来开始拜读。好吧，绕了一大圈子，终于开始进入主题了，今天要记录的就是我读书套路的最后一种：彼得蒂尔写的《从0到1》。</p>\n<p>这是本畅销书，和其他大多数畅销书类似，没有提出任何新知，一直在强调的是在我们中学课本上就在强调的创新，新瓶装旧酒，<strong>有用的废话</strong>大集合。但是仍然值得一读，因为它确实有料。我们可以先从说一说彼得蒂尔开始…</p>\n<h1 id=\"其人其事\"><a href=\"#%E5%85%B6%E4%BA%BA%E5%85%B6%E4%BA%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其人其事</h1>\n<p>彼得蒂尔毕业于斯坦福法学院，1996年成立Thiel Capital，2002年改名为Clarium Capital，公司拥有的资产达55亿美元。他于1998年与他人共同创立了PayPal，2002年以15亿美元的价格售出，个人获利6千万美元。他还是Facebook的首个外部投资者。他打造了多家异军突起的公司，《从0到1》展现了他到底是如何做到的。所以，当一个有冒险精神的人写书了，务必要读一读。</p>\n<p>尼采曾在精神错乱前写道：“个人发生精神错乱很少见，但对群体、政党、国家、时代而言，精神错乱很普遍。”如果你能识别出那些不切实际你的大众观点，你就能看到隐藏在这些观点背后的反主流事实。《从0到1》就是能让我们识别出“反主流事实”的一本书。</p>\n<h1 id=\"其书珠玑\"><a href=\"#%E5%85%B6%E4%B9%A6%E7%8F%A0%E7%8E%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其书珠玑</h1>\n<p>从零到一，或者说从无到有，意味着企业要善于创造和创新，通过技术专利、网络效应、规模经济、品牌等形成壁垒，从而实现质的垂直性层级跨越，由此开辟一个只属于自己的蓝海市场而成为这个市场的唯一，这样的垄断足可以让企业安享丰厚利润。</p>\n<p>当代企业的经营境界有三层：企业只是制造满足市场需求的产品，只要有原型，工业流水线可以让产品大量复制生产出来，是为第一层；企业创造了良好的基因组织，因而可以与时俱进地不断进化，实现纵向的传承，其最好的产品便是企业自身，是为第二层；企业创造了社会基因或者思想基因，可以跨界影响到整个行业乃至社会，实现横向传承，是为第三层。</p>\n<p>今天的“最佳方法”可能会把我们引入死胡同，而最佳途径是未经尝试的新路径。科技是神奇的，它能事半功倍，将我们的基础能力提升到一个新的高度。成功人士总能在意想不到的地方发现价值，他们遵循的是基本原则，而非秘籍。</p>\n<p>在什么重要问题上，你与其他人有不同看法？</p>\n<p>大部分人认为世界的未来由全球化决定，但事实是——科技更有影响力。没有科技创新，也许中国能源产量在未来20年会加倍，但造成的污染也会加倍。如果印度亿万家庭也都像现在的美国家庭那样生活——只用现代工具，结果也将是对环境造成毁灭性的破坏。如果全世界都用同一种旧方法创造财富，那么创造的不是财富，而是灾难。在资源稀缺的今天，丢掉科技创新的全球化不会长久。</p>\n<p>在功能极端失调的组织中，要想获得晋升机会，告诉别人你在工作比挽起袖子做事更重要。</p>\n<p>最反主流的行动不是抵制潮流，而是在潮流中不丢弃自己的独立思考。</p>\n<p>多家航空公司之间存在竞争，但是谷歌却只有一家。经济学家用两个简单模型解释了这两种现象：一是完全竞争，二是垄断。所以，如果你想创造并获得持久的价值，不要只是跟风建立一个没有特色的企业。</p>\n<p>非垄断者通过把他们的市场定义成各种更小市场的交集来夸大自己的独特性；相反，垄断者通过描述若干大市场的并集来伪装他们的垄断性。</p>\n<p>成功企业的特性————即使严守道德，也不会影响公司发展。垄断者除了想着赚钱外还有余力想着其他事情，而非垄断者就不行。在完全竞争中，企业着眼于短期利益，不可能对未来进行长期规划。要想将企业从每日的生存竞赛中解脱出来，唯一方法就是：获取垄断利益。</p>\n<p>托尔斯泰在《安娜卡列尼娜》中以下面这段文字开头：“幸福的家庭总是相似的，不幸的家庭各有各的不幸。”而在商业中，情形恰恰相反。企业成功的原因各不同：每个垄断企业都是靠解决一个独一无二的问题获得垄断地位，而企业失败的原因却相同：它们都无法逃脱竞争。</p>\n<p>竞争是一场高成本的买卖。竞争使我们过分重视过去的机会，一味重复过去的模式。竞争意味着大家都没有利润，产品没有实质差异，而且还要挣扎求生。创造性垄断就是新产品既让大众受益，又可以给创造者带来长期利润。</p>\n<p>胜利肯定比失败好，但如果这场战役不值得打，那每个参与者就都是输家。有时你不得不投入战斗。需要的时候，你不仅要战斗，还必须得赢，没有中间选择：要么和风细雨润物无声，要么暴风骤雨速战速决。</p>\n<p>一个企业的今天价值是它以后创造利润的总和。科技公司通常是开始几年亏损。因为创造有价值的东西需要时间，所以收益延迟。</p>\n<p>垄断企业的特点：</p>\n<ul>\n<li>专利技术</li>\n<li>网络效应</li>\n<li>规模经济</li>\n<li>品牌优势</li>\n</ul>\n<p>建立垄断企业的方法：</p>\n<ul>\n<li>占领小市场</li>\n<li>扩大规模</li>\n<li>破坏性创新</li>\n</ul>\n<p>初创企业是你可以明确掌握尽最大努力的机会。你不只拥有自己生命的代理权，还拥有这世界上某个重要角落的代理权。而这一切都要从抵制不公平的概率主宰开始，因为你并不是一张概率决定命运的彩票。</p>\n<h1 id=\"再说一句\"><a href=\"#%E5%86%8D%E8%AF%B4%E4%B8%80%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再说一句</h1>\n<p>从0到1，知易行难，但是做一个改变世界的逆行者，是我能想象到的世界上最酷的事情，彼得蒂尔做到了，而且不止一次！</p>","frontmatter":{"title":"阅读笔记《从0到1》","date":"2016-06-18T09:31:37.000Z","category":"阅读笔记","tags":["社科","互联网","创业","阅读"],"cover":"https://zerosoul.github.io/2016/05/22/zero-to-one/paypal_team.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/zero-to-one/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/zero-to-one/#%E5%85%B6%E4%BA%BA%E5%85%B6%E4%BA%8B\">其人其事</a></li>\n<li><a href=\"/posts/zero-to-one/#%E5%85%B6%E4%B9%A6%E7%8F%A0%E7%8E%91\">其书珠玑</a></li>\n<li><a href=\"/posts/zero-to-one/#%E5%86%8D%E8%AF%B4%E4%B8%80%E5%8F%A5\">再说一句</a></li>\n</ul>","excerpt":"前言 我的生活里充满了套路： 凌晨四点总会醒来，然后撒泡尿继续睡觉； 每天早上必须洗澡，不然一天浑身难受； 出门经常性不锁门，只是随手一带； 自行车从来不上锁，即使是放在了地铁口； 随身现金从来没超过20…"}},{"node":{"fields":{"slug":"/posts/take-parents-to-beijing"},"html":"<p><img src=\"/images/parents.jpg\" alt=\"parents\"></p>\n<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>去年夏天把父母和奶奶接北京玩了几天，担心奶奶体力问题，还备用了轮椅。结果几天下来，老人家依然劲头十足，我却累蔫儿了。</p>\n<p>好吧，以上不是重点，重点是游玩期间我做了个视频，放在了<a href=\"https://vimeo.com/146186682\">网上</a>（可以直接跳到文章底部观看）。令我惊讶的是，半年多过去了，突然有歪果仁来了封邮件，问视频是怎么做的：<strong>How did you accomplish it?Amazing!</strong>。哎，这个没见过世面的歪果仁，<a href=\"https://vimeo.com/channels/staffpicks\">Vimeo</a>上的视频一个比一个精彩，如果排行的话，我只能垫底。不过这位歪果仁兄既然诚心诚意地发问，我也就很负责任地回复了：<strong>iPhone6 + iMovie + selfie stick</strong>。对，很简洁，很任性，很清真，我大概能猜到歪果仁看到后的表情：(╯‵□′)╯︵┻━┻。</p>\n<h1 id=\"视频\"><a href=\"#%E8%A7%86%E9%A2%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>视频</h1>\n<p>世界那么大 TA们想看看</p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;\"\n          >\n            <iframe src=\"https://player.vimeo.com/video/146186682?loop=1&amp;color=ffffff&amp;title=0&amp;byline=0&amp;portrait=0\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \"></iframe>\n          </div>\n          </div>\n<p><em>注：微信下视频加载不出来，请移步浏览器</em></p>\n<h1 id=\"工具\"><a href=\"#%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>工具</h1>\n<p>其实不只歪果仁，有些国内的朋友也问过我几次同样的问题，那么有必要罗列下当初用到的工具，仅供参考。</p>\n<h1 id=\"硬件\"><a href=\"#%E7%A1%AC%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>硬件</h1>\n<ul>\n<li>iPhone 6 64G：应该是刚买了没多久，就拿来录像了，效果挺好的。庆幸当初选择的是64G，否则后面内存就捉襟见肘了。</li>\n<li>iPad Air：主要用来编辑视频，使用自带的iMovie</li>\n<li>Macbook Pro：用来上传视频，好吧，有点打酱油的一个硬件</li>\n<li>自拍杆（带遥控）：淘宝了一个，链接点<a href=\"https://detail.tmall.com/item.htm?id=42154967278&#x26;spm=a1z09.2.0.0.lBofG8&#x26;_u=h4gsni3a18f\">这里</a>100元左右就能买个带遥控功能的，还有三脚架功能，好神奇。不过用过之后随即就打入冷宫了，后来送给了我哥。</li>\n</ul>\n<h1 id=\"软件\"><a href=\"#%E8%BD%AF%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>软件</h1>\n<ul>\n<li>iMovie：苹果操作系统自带的视频编辑软件，功能足够，如果不太熟悉操作，可以移步<a href=\"http://www.apple.com/cn/ios/imovie/\">这里</a>先了解下。</li>\n<li><a href=\"https://vimeo.com\">Vimeo</a>：一个高清视频社区网站，我试过上传优酷，清晰度不好，又尝试秒拍，结果时长有限制。最后只好使用歪果仁的服务了，唯一担心的就是流畅性，试了试，还不错。</li>\n</ul>\n<h1 id=\"拍摄地点\"><a href=\"#%E6%8B%8D%E6%91%84%E5%9C%B0%E7%82%B9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拍摄地点</h1>\n<ul>\n<li>天安门广场</li>\n<li>故宫</li>\n<li>颐和园</li>\n<li>圆明园</li>\n<li>鸟巢&#x26;水立方</li>\n<li>地铁&#x26;住所&#x26;路上</li>\n</ul>\n<h1 id=\"最后再说一句\"><a href=\"#%E6%9C%80%E5%90%8E%E5%86%8D%E8%AF%B4%E4%B8%80%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后再说一句</h1>\n<p>工具固然要有，但想法和执行更重要。That’s all!</p>","frontmatter":{"title":"世界那么大，TA们想看看","date":"2016-06-17T09:31:37.000Z","category":"技术","tags":["旅行","vimeo"],"cover":"/images/parents.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/take-parents-to-beijing/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/take-parents-to-beijing/#%E8%A7%86%E9%A2%91\">视频</a></li>\n<li><a href=\"/posts/take-parents-to-beijing/#%E5%B7%A5%E5%85%B7\">工具</a></li>\n<li><a href=\"/posts/take-parents-to-beijing/#%E7%A1%AC%E4%BB%B6\">硬件</a></li>\n<li><a href=\"/posts/take-parents-to-beijing/#%E8%BD%AF%E4%BB%B6\">软件</a></li>\n<li><a href=\"/posts/take-parents-to-beijing/#%E6%8B%8D%E6%91%84%E5%9C%B0%E7%82%B9\">拍摄地点</a></li>\n<li><a href=\"/posts/take-parents-to-beijing/#%E6%9C%80%E5%90%8E%E5%86%8D%E8%AF%B4%E4%B8%80%E5%8F%A5\">最后再说一句</a></li>\n</ul>","excerpt":"引子 去年夏天把父母和奶奶接北京玩了几天，担心奶奶体力问题，还备用了轮椅。结果几天下来，老人家依然劲头十足，我却累蔫儿了。 好吧，以上不是重点，重点是游玩期间我做了个视频，放在了 网上 （可以直接跳到文章底部观看）。令我惊讶的是，半年多过去了，突然有歪果仁来了封邮件，问视频是怎么做的： How…"}},{"node":{"fields":{"slug":"/posts/upgrade-hexo-to-3-2"},"html":"<p><img src=\"https://zerosoul.github.io/2016/06/15/upgrade-hexo-to-3-2/crazy.jpg\" alt=\"crazy\"></p>\n<h1 id=\"动机\"><a href=\"#%E5%8A%A8%E6%9C%BA\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>动机</h1>\n<p>好久没去<a href=\"https://hexo.io\">Hexo官网</a>逛逛了，陡然发现有<a href=\"https://hexo.io/news/2016/02/28/hexo-3-2-released/\">新版本</a>了，其重要的改进在于生成静态文件的速度，对于文章越写越多，生成时间越来越长的我，是个极大的诱惑。作为一个还停留在2.X版本的Hexo党，毅然决然地要尝一下鲜。</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<ol>\n<li>\n<p>先全局升级<code class=\"language-text\">hexo-cli</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-cli -g</code></pre>\n      </div>\n<p>通过<code class=\"language-text\">hexo version</code>查看下版本：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">hexo: 3.2.0 //版本号已变\n\nhexo-cli: 1.0.2\n\nos: Darwin 15.5.0 darwin x64\n\nhttp_parser: 2.7.0\n\nnode: 6.2.1 \n\nv8: 5.0.71.52\n\nuv: 1.9.1\n\nzlib: 1.2.8\n\nares: 1.10.1-DEV\n\nicu: 57.1\n\nmodules: 48\n\nopenssl: 1.0.2h</code></pre>\n      </div>\n<p>注：我的node版本略高，不建议使用高版本，因为经常踩坑，5就足够了。当然，可以使用nvm工具来管理node版本。</p>\n</li>\n<li>\n<p>找个风水宝地，初始化一个新版本的hexo博客目录：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">hexo init new\\_blog <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cd</span> new\\_blog <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">npm</span> i <span class=\"token operator\">&amp;&amp;</span> hexo s</code></pre>\n      </div>\n</li>\n<li>\n<p>访问下<code class=\"language-text\">http://localhost:4000</code>，确认下初始化成功了么。正常的话，看到的是默认主题的首页。</p>\n</li>\n<li>\n<p>把原博客目录<code class=\"language-text\">source</code>下的东西全部拷贝到新目录对应位置上。这是关键的一步，相当于迁移数据源。</p>\n</li>\n<li>\n<p>接下来，是容易踩坑的地方了，不要把原Hexo的配置文件<code class=\"language-text\">_config.yml</code>直接覆盖过来，因为新版本的Hexo有些插件不走配置文件了，容易出错。所以我在踩了这个坑之后，索性基于新<code class=\"language-text\">_config.yml</code>来更新对应值，至于插件的配置，全部放弃。</p>\n</li>\n<li>\n<p>接下来，是主题的更新，我使用的是<a href=\"http://theme-next.iissnan.com/\">Next</a>。发现这个也有新版本了，索性一起更新了。具体步骤请参照<a href=\"http://theme-next.iissnan.com/getting-started.html\">这里</a>。另，原有主题我更改了一些地方，又花了点时间把琐碎的增量更改也做了。</p>\n</li>\n<li>\n<p>接下来，<code class=\"language-text\">hexo g</code>一下，发现有报错，看了下报错信息和我使用<a href=\"https://github.com/gyk001/hexo-qiniu-sync\"><code class=\"language-text\">hexo-qiniu-sync</code></a>插件有关，于是把七牛插件给装上：<code class=\"language-text\">npm install hexo-qiniu-sync --save</code>。注意，别忘了更新<code class=\"language-text\">_config.yml</code>对应的配置，这个可以从原来的地方拷贝过来。</p>\n</li>\n<li>\n<p>另外，我还用到了两个插件<code class=\"language-text\">hexo-generator-sitemap</code>，<code class=\"language-text\">hexo-generator-feed</code>，一行代码搞定：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> i hexo-generator-sitemap hexo-generator-feed --save</code></pre>\n      </div>\n</li>\n<li>\n<p>下面到了最坑的地方了，平时使用<code class=\"language-text\">hexo-browsersync</code>来边写边看效果，所以升级后自然也得想着它。装上这个插件在我的环境下会导致大部分页面白板，动画效果也没有了。查看了下生成的页面代码，底部有乱码。估计是我的node版本太高导致的，使用nvm降到5，问题依旧。然后去插件<a href=\"https://github.com/hexojs/hexo-browsersync\">Github地址</a>逛逛有没有遇到类似问题的同学，很遗憾，就四个提问题的，和我遇到的问题无关。转变思路，看看是不是版本依赖问题，<code class=\"language-text\">hexo-browsersync</code>最重要的依赖便是<code class=\"language-text\">browsersync</code>，将其升级到最新版本：修改该模块的<code class=\"language-text\">package.json</code>对应的<code class=\"language-text\">browsersync</code>版本号为<code class=\"language-text\">*</code>，然后<code class=\"language-text\">npm update --save</code>。接下来，试试问题有没有解决，果然！不出所料！这样做并没有什么卵用…o(╯□╰)o。<br>\n纠结到最后，还是暂时去掉了这一功能：<code class=\"language-text\">npm uninstall hexo-browsersync --save</code>。以后会看一下里面源码，看看到底哪儿的问题。而现在，我需要的就是一个可以写文章和发布的Hexo，虽然用起来不是很便捷，但这已足够了。</p>\n</li>\n<li>\n<p>最后：<code class=\"language-text\">npm i --save hexo-deployer-git</code>，配置下<code class=\"language-text\">_config.yml</code>对应的git选项。</p>\n</li>\n</ol>\n<h1 id=\"感想\"><a href=\"#%E6%84%9F%E6%83%B3\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>感想</h1>\n<p>断断续续折腾了两天，才升级成功。所以，如果有啥感想，那就是：<strong>没事别瞎TM升级！</strong>当然，如果一定要升级，最好做增量升级：另起炉灶，一项一项地加功能，这样好定位问题，也容易回滚。</p>","frontmatter":{"title":"Hexo升级之坑","date":"2016-06-15T09:31:37.000Z","category":"技术","tags":["hexo","备忘"],"cover":"https://zerosoul.github.io/2016/06/15/upgrade-hexo-to-3-2/crazy.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/upgrade-hexo-to-3-2/#%E5%8A%A8%E6%9C%BA\">动机</a></li>\n<li><a href=\"/posts/upgrade-hexo-to-3-2/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/upgrade-hexo-to-3-2/#%E6%84%9F%E6%83%B3\">感想</a></li>\n</ul>","excerpt":"动机 好久没去 Hexo官网 逛逛了，陡然发现有 新版本 了，其重要的改进在于生成静态文件的速度，对于文章越写越多，生成时间越来越长的我，是个极大的诱惑。作为一个还停留在2.X版本的Hexo党，毅然决然地要尝一下鲜。 思路 先全局升级 ： 通过 查看下版本： 注：我的node…"}},{"node":{"fields":{"slug":"/posts/building-my-first-ios-app-with-react-native-part-two"},"html":"<p><img src=\"https://zerosoul.github.io/2016/06/07/building-my-first-ios-app-with-react-native-part-two/rn.png\" alt=\"React Native\"></p>\n<h1 id=\"再续前缘\"><a href=\"#%E5%86%8D%E7%BB%AD%E5%89%8D%E7%BC%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再续前缘</h1>\n<p><a href=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/\">第一篇文章</a>，我们从零开始，一步一步走到最后，构建了一个似乎并没有卵用的APP。但是，我们做了大量的基础工作，不就是为了在接下来的继续更轻松自信些嘛！<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/zdw.jpg\" alt=\"wtf\"><br>\n其实，第一篇的信息量还是很大的，里面的每一个链接都是通往一个新知的大门，如果你觉得掌握得差不多了，那就开始新的旅（Che）程（Dan）吧！<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/haha.png\" alt=\"你懂的\"><br>\n第二篇文章也是分五小节叙述，每一节完成一个小功能，最终召唤出还算有点卵用的APP。</p>\n<h1 id=\"1召唤出壁纸和作者\"><a href=\"#1%E5%8F%AC%E5%94%A4%E5%87%BA%E5%A3%81%E7%BA%B8%E5%92%8C%E4%BD%9C%E8%80%85\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.召唤出壁纸和作者</h1>\n<p>首先，我们先研究下数据，下面是从<a href=\"https://unsplash.it/list\">Unsplash</a>获取的一个数据实例：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n\n    author<span class=\"token punctuation\">:</span><span class=\"token string\">\"Ben Moore\"</span>\n\n    author_url<span class=\"token punctuation\">:</span><span class=\"token string\">\"https://unsplash.com/@benmoore\"</span>\n\n    filename<span class=\"token punctuation\">:</span><span class=\"token string\">\"0102_pJILiyPdrXI.jpeg\"</span>\n\n    format<span class=\"token punctuation\">:</span><span class=\"token string\">\"jpeg\"</span>\n\n    height<span class=\"token punctuation\">:</span><span class=\"token number\">3240</span>\n\n    id<span class=\"token punctuation\">:</span><span class=\"token number\">102</span>\n\n    post_url<span class=\"token punctuation\">:</span><span class=\"token string\">\"https://unsplash.com/photos/pJILiyPdrXI\"</span>\n\n    width<span class=\"token punctuation\">:</span><span class=\"token number\">4320</span> \n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>要想获取该实例的图片，在浏览器中输入以下格式的URL<code class=\"language-text\">http://unsplash.it/{width}/{height}?image={id}</code>，换算到该实例即：<a href=\"http://unsplash.it/4320/3240?image=102\"><code class=\"language-text\">http://unsplash.it/4320/3240?image=102</code></a>。这样，我们就能拿到一张壁纸的地址了。我们可以用<code class=\"language-text\">Image</code>组件中的<code class=\"language-text\">source</code>来把图片加载出来。</p>\n<p>但是，进一步想了想，这么大的图片会有一定的加载时间，最好能有个图片的加载进度什么的，让用户不再一脸懵逼地等着。一开始就做对，后面的修改成本会小很多，有两个组件的组合能够做到预期效果：</p>\n<p><a href=\"https://github.com/oblador/react-native-image-progress\"><strong>image-native-progress</strong></a>和<a href=\"https://github.com/oblador/react-native-progress\"><strong>react-native-progress</strong></a>。</p>\n<p>在项目根目录下运行命令：<code class=\"language-text\">npm i --save react-native-image-progress react-native-progress</code>，然后，我们在<strong>index.ios.js</strong>中引用：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> NetworkImage <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-native-image-progress'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> Progress <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'react-native-progress'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>既然要做手机壁纸应用，那么就应该得到手机屏幕的长和宽：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span>Dimensions<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>'window’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>哦对了，为了去掉烦人的<code class=\"language-text\">React.Dimensions</code>，可以在头部引入<code class=\"language-text\">Dimensions</code>组件：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n\n  AppRegistry<span class=\"token punctuation\">,</span>\n\n  StyleSheet<span class=\"token punctuation\">,</span>\n\n  Text<span class=\"token punctuation\">,</span>\n\n  View<span class=\"token punctuation\">,</span>\n\n  ActivityIndicatorIOS<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">/***/</span>\n\n  Dimensions \n\n  <span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>这样，我们就可以在<code class=\"language-text\">renderResults</code>中使用<code class=\"language-text\">NetworkImage</code>了：  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Swiper</span> <span class=\"token attr-name\">...</span> <span class=\"token punctuation\">></span></span>\n\n  <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wallpaper<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\n    <span class=\"token comment\">/***/</span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NetworkImage</span>\n\n          <span class=\"token attr-name\">source</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>uri<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token string\">`https://unsplash.it/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wallpaper<span class=\"token punctuation\">.</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wallpaper<span class=\"token punctuation\">.</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?image=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wallpaper<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n\n          <span class=\"token attr-name\">indicator</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Progress<span class=\"token punctuation\">.</span>Circle<span class=\"token punctuation\">}</span></span>\n\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>wallpaperImage<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NetworkImage</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token comment\">/***/</span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Swiper</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p><strong>注：此处<code class=\"language-text\">NetworkImage</code>的<code class=\"language-text\">uri</code>特性用到了ES6的模板字符串特性，懵逼的同学去<a href=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/#%E5%85%88%E8%B0%88%E8%B0%88%E9%9C%80%E6%B1%82\">上一篇文章</a>找链接复习一下哈。</strong></p>\n<p>再加个样式：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">wallpaperImage<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n  flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n  width<span class=\"token punctuation\">:</span> width<span class=\"token punctuation\">,</span>\n\n  height<span class=\"token punctuation\">:</span> height<span class=\"token punctuation\">,</span>\n\n  backgroundColor<span class=\"token punctuation\">:</span> ‘#<span class=\"token number\">000</span>’\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>保存然后刷新模拟器，不出意外的话…你将看到一堆报错的页面。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/long.jpg\" alt=\"成龙\"><br>\n别慌，我们来研究下刚刚加的代码，注意到<code class=\"language-text\">indicator={Progress.Circle}</code>没有？在<code class=\"language-text\">react-native-progress</code>文档里有提到（别告诉我你没看<a href=\"https://github.com/oblador/react-native-progress\">文档</a>(╯‵□′)╯︵┻━┻），<code class=\"language-text\">Progress.Circle</code>需要<strong>ReactART</strong>：使用React来画矢量图的类库。我们不需要下载任何新东西，只需要通过Xcode将其引入到项目中。<br>\n很简单，只是有点繁琐：</p>\n<ol>\n<li>移步 <code class=\"language-text\">node_modules/react-native/Libraries/ART/</code><br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/dir.png\" alt=\"art目录\"></li>\n<li>将<em>ART.xcodeproj</em>拖拽到Xcode的<em>PIW/Libraries</em>下<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/libs.png\" alt=\"libs\"></li>\n<li>定位到<em>Build Phases</em>，友情提示：它与<em>General</em>,<em>Capabilities</em>等同级。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/buildphase.png\"></li>\n<li>将<em>ART.xcodeproj/Products</em>下的<em>libART.a</em>拖拽到<em>Build Phases</em>下的<em>Link Binary With Libraries</em>条目下：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/linklib.png\"></li>\n</ol>\n<p>就这么简单，全是些拖拖拽拽的活儿。</p>\n<p>然后，刷新模拟器。酷！我们已经能够看到带加载进度的壁纸，并且能左右滑动浏览。有没有碰到心动的图片？载下来？莫慌，待会儿来满足你。现在，我们先修改下进度提示的样式，这个在<code class=\"language-text\">NetworkImage</code>下的<code class=\"language-text\">indicatorProps</code>可以设置：  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NetworkImage</span>\n\n  <span class=\"token attr-name\">source</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>uri<span class=\"token punctuation\">:</span><span class=\"token template-string\"><span class=\"token string\">`https://unsplash.it/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wallpaper<span class=\"token punctuation\">.</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wallpaper<span class=\"token punctuation\">.</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?image=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wallpaper<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n\n  <span class=\"token attr-name\">indicator</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>Progress<span class=\"token punctuation\">.</span>Circle<span class=\"token punctuation\">}</span></span>\n\n  <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>wallpaperImage<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token comment\">/***/</span>\n\n  indicatorProps<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\n    color<span class=\"token punctuation\">:</span><span class=\"token string\">'rgba(255,255,255,0.8)'</span><span class=\"token punctuation\">,</span>\n\n    size<span class=\"token punctuation\">:</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n\n    thickness<span class=\"token punctuation\">:</span><span class=\"token number\">4</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/***/</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NetworkImage</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>修改后进度提示应该长这样：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/indicator.png\" alt=\"indicator\"></p>\n<p>接下来，把图片的作者名字加上，我们要做尊重知识版权的好公民：  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>NetworkImage</span>\n\n<span class=\"token attr-name\">...</span>\n\n<span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">/***/</span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>label<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>Photo by<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>label\\_author\\_name<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>wallpaper<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">/***/</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>NetworkImage</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>别忘了创建各自对应的样式对象：</p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">label:</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span><span class=\"token string\">'absolute'</span>,\n\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token string\">'#fff'</span>,\n\n    <span class=\"token property\">fontSize</span><span class=\"token punctuation\">:</span>13,\n\n    <span class=\"token property\">backgroundColor</span><span class=\"token punctuation\">:</span><span class=\"token string\">'#000'</span>,\n\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>5,\n\n    <span class=\"token property\">paddingLeft</span><span class=\"token punctuation\">:</span>8,\n\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span>20,\n\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span>20\n\n  <span class=\"token punctuation\">}</span><span class=\"token selector\">,\n\nlabel_author_name:</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span><span class=\"token string\">'absolute'</span>,\n\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span><span class=\"token string\">'#fff'</span>,\n\n    <span class=\"token property\">fontSize</span><span class=\"token punctuation\">:</span>15,\n\n    <span class=\"token property\">backgroundColor</span><span class=\"token punctuation\">:</span><span class=\"token string\">'#000'</span>,\n\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span>5,\n\n    <span class=\"token property\">paddingLeft</span><span class=\"token punctuation\">:</span>8,\n\n    <span class=\"token property\">top</span><span class=\"token punctuation\">:</span>52,\n\n    <span class=\"token property\">left</span><span class=\"token punctuation\">:</span>20,\n\n    <span class=\"token property\">fontWeight</span><span class=\"token punctuation\">:</span><span class=\"token string\">'bold'</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>来来来，我们瞅瞅加了作者后的效果：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/withauthor.png\"></p>\n<p>有木有瞬间感觉像那么回事儿了！<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/dese.png\"></p>\n<p>走到这儿，这一节算完事儿了，为了能下载壁纸，我们将在下一节做一些更加有技术含量的事儿。</p>\n<h1 id=\"2-捕捉双击操作double-taps\"><a href=\"#2-%E6%8D%95%E6%8D%89%E5%8F%8C%E5%87%BB%E6%93%8D%E4%BD%9Cdouble-taps\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 捕捉双击操作(Double-Taps)</h1>\n<p>这一节我们要用到的是PanResponder，这个API能做一些很酷的事情，比如捕捉双击操作。</p>\n<p>其实，如果偷懒，完全可以在页面上放一个下载按钮，点击就下载，完活儿！但是，我们要做就做有逼格的事儿，双击图片下载就很符合这个档次，恩，撸起袖子干吧！</p>\n<p>在开始之前，最好阅读一遍<a href=\"https://facebook.github.io/react-native/docs/panresponder.html\">PanResponder API</a>文档，因为你不读一遍，也不知道这个文档其实也没啥卵用o(╯□╰)o。不过我们至少知道了PanResponder的基本用法，这就够了。</p>\n<p>废话少说，开始撸代码。首先，在构造函数里声明一个新对象：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imagePanResponder <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>别忘了在顶部引入<code class=\"language-text\">PanResponder</code>的声明：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n\n  AppRegistry<span class=\"token punctuation\">,</span>\n\n  StyleSheet<span class=\"token punctuation\">,</span>\n\n  Text<span class=\"token punctuation\">,</span>\n\n  View<span class=\"token punctuation\">,</span>\n\n  ActivityIndicatorIOS<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">/***/</span>\n\n  PanResponder\n\n  <span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>接下来我们要做两件事：</p>\n<ul>\n<li>创建一个<code class=\"language-text\">PanResponder</code>并赋值<code class=\"language-text\">imagePanResponder</code></li>\n<li>将<code class=\"language-text\">imagePanResponder</code>关联到<code class=\"language-text\">&lt;NetworkImage&gt;</code>组件</li>\n</ul>\n<p>为了完成第一件事，需要新增一个生命周期函数:<code class=\"language-text\">componentWillMount</code>。这个函数只有在组件首次渲染时才会触发，所以非常适合用于初始化<code class=\"language-text\">PanResponder</code>：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imagePanResponder <span class=\"token operator\">=</span> PanResponder<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n      onStartShouldSetPanResponder<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleStartShouldSetPanResponder<span class=\"token punctuation\">,</span>\n\n      onPanResponderGrant<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handlePanResponderGrant<span class=\"token punctuation\">,</span>\n\n      onPanResponderRelease<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handlePanResponderEnd<span class=\"token punctuation\">,</span>\n\n      onPanResponderTerminate<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handlePanResponderEnd\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>初始化完了，就可以将这些事件关联到<code class=\"language-text\">NetworkImage</code>组件了：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imagePanResponder<span class=\"token punctuation\">.</span>panHandlers<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></code></pre>\n      </div>\n<p>注：<code class=\"language-text\">...</code>是ES6中的扩展运算符，如果懵逼，请移步<a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Spread_operator\">这里</a>充电。</p>\n<p>一般来说，一个触摸事件有三个阶段：开始（start）、移动（move）、释放（release），一个组件能够通过声明响应特定的触摸事件。<code class=\"language-text\">PanResponder.create({...</code>下提到的第一个事件<code class=\"language-text\">onStartShouldSetPanResponder</code>，从英文名字的意思大概也能猜出，这是在请求是否能将<code class=\"language-text\">PanResponder</code>绑定在该组件上。紧跟其后是一个方法<code class=\"language-text\">this.handleOnStartShouldSetPanResponder</code>，用于响应该事件，若该方法返回<code class=\"language-text\">true</code>，则通过请求，然后才能谈下一步，<code class=\"language-text\">false</code>则相反。所以，你应该知道在此我们应该返回什么，认清你的阶级立场，同志，老大哥在看着你：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">handleStartShouldSetPanResponder</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> gestureState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>紧随其后的<code class=\"language-text\">onPanResponderGrant</code>是在一旦有了触摸时触发，在此我们先打印一个信息占个坑：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">handlePanResponderGrant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手指触摸到屏幕啦~~~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>最后两个事件从字面上也都能自解释，在手指离开屏幕时，都能触发，在此我们还是先打印信息占个坑：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">handlePanResponderEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手指离开屏幕啦~~~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>保存代码，壁纸一旦加载完毕，点击一下，应该会看到如下打印信息：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/touched.png\"></p>\n<p>OK，基于这些认知，我们可以开始捕捉双击操作了。判断是否为双击操作的关键是需要知道上一操作的信息：触摸发生的<strong>坐标</strong>和<strong>时间戳</strong>。在构造函数新增对象<code class=\"language-text\">prevTouchInfo</code>用于保存触摸信息：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prevTouchInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token constant\">X</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token constant\">Y</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n  timeStamp<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>然后，在<code class=\"language-text\">handlePanResponderGrant</code>更新这个对象(注意代码的次序)：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">handlePanResponderGrant</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> gestureState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span>\n\n  <span class=\"token keyword\">var</span> currentTouchTimeStamp <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDoubleTap</span><span class=\"token punctuation\">(</span>currentTouchTimeStamp<span class=\"token punctuation\">,</span> gestureState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> \n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'双击操作'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prevTouchInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token constant\">X</span><span class=\"token punctuation\">:</span> gestureState<span class=\"token punctuation\">.</span>x0<span class=\"token punctuation\">,</span>\n\n    <span class=\"token constant\">Y</span><span class=\"token punctuation\">:</span> gestureState<span class=\"token punctuation\">.</span>y0<span class=\"token punctuation\">,</span>\n\n    timeStamp<span class=\"token punctuation\">:</span> currentTouchTimeStamp\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><code class=\"language-text\">handlePanResponderGrant</code>在每次单击时都会触发，但是有个地方需要特别注意：此处的<code class=\"language-text\">this</code>并不是指向<code class=\"language-text\">PIW</code>类，而是<code class=\"language-text\">PanResponder</code>，为了正确的引用，我们需要在构造函数使用<code class=\"language-text\">bind</code>重新定向一下。而如果我们一开始选用<code class=\"language-text\">React.createClass({ ... })</code>来创建组件，就不会存在这个问题，<strong>autobinding</strong>会帮我们搞定这个问题。也算有得有失吧:</p>\n<p>1</p>\n<p>this.handlePanResponderGrant = this.handlePanResponderGrant.bind(this);</p>\n<p><code class=\"language-text\">isDoubleTap</code>是我们预先埋好的坑，下面我们填上它：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">isDoubleTap</span><span class=\"token punctuation\">(</span>currentTouchTimeStamp<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>x0<span class=\"token punctuation\">,</span> y0<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span><span class=\"token constant\">X</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Y</span><span class=\"token punctuation\">,</span> timeStamp<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>prevTouchInfo<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> dt <span class=\"token operator\">=</span> currentTouchTimeStamp <span class=\"token operator\">-</span> timeStamp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>dt <span class=\"token operator\">&lt;</span> <span class=\"token constant\">DOUBLE</span>\\_TAP\\_DELAY <span class=\"token operator\">&amp;&amp;</span> Utils<span class=\"token punctuation\">.</span><span class=\"token function\">distance</span><span class=\"token punctuation\">(</span><span class=\"token constant\">X</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">Y</span><span class=\"token punctuation\">,</span> x0<span class=\"token punctuation\">,</span> y0<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">DOUBLE</span>\\_TAP\\_RADIUS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>好吧，你可能会注意到了，坑里有坑：</p>\n<ul>\n<li>\n<p><code class=\"language-text\">DOUBLE_TAP_DELAY</code>和<code class=\"language-text\">DOUBLE_TAP_RADIUS</code>是我们定义的常量，需要在头部初始化一下:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">DOUBLE</span>\\_TAP\\_DELAY <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// milliseconds</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">DOUBLE</span>\\_TAP\\_RADIUS <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>新建一个模块<strong>utils.js</strong>，暴露出<code class=\"language-text\">distance</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>x0<span class=\"token punctuation\">,</span> y0<span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> x1 <span class=\"token operator\">-</span> x0 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span> y1 <span class=\"token operator\">-</span> y0 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n</li>\n</ul>\n<p><code class=\"language-text\">distance</code>是用来计算两个坐标之间的直线距离，还记得中学的几何公式吗？<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/distance.png\" alt=\"distance\"></p>\n<p><code class=\"language-text\">handlePanResponderGrant</code>最后一步是更新<code class=\"language-text\">prevTouchInfo</code>。</p>\n<p>保存代码，等壁纸加载完毕，双击屏幕，如果不出意外的话，控制台里会输出:<strong>双击操作</strong>。</p>\n<h1 id=\"3将壁纸保存到本地相册\"><a href=\"#3%E5%B0%86%E5%A3%81%E7%BA%B8%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9B%B8%E5%86%8C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.将壁纸保存到本地相册</h1>\n<p>现在我们能捕捉到双击的手势了，也就可以开始着手撸保存壁纸的代码了。首先，我们把console代码替换成一个调用的方法，先占坑。  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">isDoubleTap</span><span class=\"token punctuation\">(</span>currentTouchTimeStamp<span class=\"token punctuation\">,</span> gestureState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveCurrentWallpaperToCameraRoll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>一会儿我们再来实现<code class=\"language-text\">saveCurrentWallpaperToCameraRoll</code>，下面我们先来看另一个问题：壁纸有五张，如何定位当前的这一张？<br>\n我们可以通过从零开始的索引来定位当前图片，每滑动一次就加1或者减1:  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentWallIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>还记得上一篇我们预留的一个坑位吗？<code class=\"language-text\">Swiper</code>里的<code class=\"language-text\">onMomentumScrollEnd</code>，在该方法里更新<code class=\"language-text\">currentWallIndex</code>：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">onMomentumScrollEnd</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentWallIndex <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>同样的，别忘了在<code class=\"language-text\">constructor</code>里绑定<code class=\"language-text\">this</code>:</p>\n<p>1</p>\n<p>this.onMomentumScrollEnd = this.onMomentumScrollEnd.bind(this);</p>\n<p>好了，我们开始为<code class=\"language-text\">saveCurrentWallpaperToCameraRoll</code>填坑了。为了能访问相册，需要先引入<code class=\"language-text\">Camera Roll</code>类库，还记得开头是怎么引入<code class=\"language-text\">ReactART</code>的吗？没错，照做一遍就可以：<code class=\"language-text\">node_modules/react-native/Libraries/CameraRoll</code><br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/cameraroll.png\"></p>\n<p>然后就可以导入了：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n\n  View<span class=\"token punctuation\">,</span>\n\n  Text<span class=\"token punctuation\">,</span>\n\n  StyleSheet<span class=\"token punctuation\">,</span>\n\n  Dimensions<span class=\"token punctuation\">,</span>\n\n  PanResponder<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">/***/</span>\n\n  CameraRoll<span class=\"token punctuation\">,</span> <span class=\"token comment\">// 访问相册</span>\n\n  AlertIOS <span class=\"token comment\">// iOS的弹出框</span>\n\n  <span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>一旦壁纸保存到相册，我们需要给用户一个保存成功的提示，<code class=\"language-text\">AlertIOS</code>帮我们做到这一点。现在，我们可以着手实现<code class=\"language-text\">saveCurrentWallpaperToCameraRoll</code>：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">saveCurrentWallpaperToCameraRoll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> currentWall <span class=\"token operator\">=</span> wallsJSON<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentWallIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> currentWallURL <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`http://unsplash.it/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentWall<span class=\"token punctuation\">.</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentWall<span class=\"token punctuation\">.</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?image=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentWall<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n\n  CameraRoll<span class=\"token punctuation\">.</span><span class=\"token function\">saveImageWithTag</span><span class=\"token punctuation\">(</span>currentWallURL<span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    AlertIOS<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n\n      <span class=\"token string\">'保存成功'</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token string\">'壁纸已保存到本地相册'</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token punctuation\">[</span>\n\n        <span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">:</span> <span class=\"token string\">'好哒!'</span><span class=\"token punctuation\">,</span> onPress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'OK Pressed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">]</span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error saving to camera roll'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>以上代码都能做到自解释，不懂的地方移步：<a href=\"https://facebook.github.io/react-native/docs/cameraroll.html\">CameraRoll</a>和<a href=\"https://facebook.github.io/react-native/docs/alertios.html\">AlertIOS</a>，你懂的。</p>\n<p>好啦，保存代码，去模拟器体验一下保存壁纸功能：（首次保存需要手动同意获取访问相册的权限）<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/saved.png\"><br>\n完美！额，等等，从双击到壁纸保存成功，好像有那么几秒的等待时间，用户可能会认为双击不成功，然后再双击一次，这不是我们的期望，下一节专门解决这个问题！</p>\n<h1 id=\"4创建一个等待组件：waitingjs\"><a href=\"#4%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AD%89%E5%BE%85%E7%BB%84%E4%BB%B6%EF%BC%9Awaitingjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4.创建一个等待组件：Waiting.js</h1>\n<p>如果没记错的话，我们将创建第一个组件：Waiting.js。这个组件用于异步操作的等待时间，比如保存壁纸到相册的操作，就很有必要加一个等待提示，让用户知道APP在做什么。</p>\n<p>在项目根目录新建文件：<strong>Waiting.js</strong>：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n\n  View<span class=\"token punctuation\">,</span>\n\n  Text<span class=\"token punctuation\">,</span>\n\n  Component<span class=\"token punctuation\">,</span>\n\n  ActivityIndicatorIOS<span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">default</span> Waiting <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> isVisible<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> isVisible <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\n        <span class=\"token operator\">&lt;</span>View \n\n         style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\n          flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n          flexDirection<span class=\"token punctuation\">:</span> <span class=\"token string\">'row'</span><span class=\"token punctuation\">,</span>\n\n          justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n\n          alignItems<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n\n          width<span class=\"token punctuation\">:</span> width<span class=\"token punctuation\">,</span>\n\n          height<span class=\"token punctuation\">:</span> height<span class=\"token punctuation\">,</span>\n\n          position<span class=\"token punctuation\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span>\n\n          top<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n          left<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\n          backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'rgba(0, 0, 0, 0.5)'</span>\n\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n         <span class=\"token operator\">&lt;</span>ActivityIndicatorIOS\n\n            animating<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n\n            color<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'#fff'</span><span class=\"token punctuation\">}</span>\n\n            size<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'large'</span><span class=\"token punctuation\">}</span> \n\n            style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>margin<span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n           <span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">:</span>’#fff’<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>正在保存，请稍后<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span> \n\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token punctuation\">}</span> \n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Waiting<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p><code class=\"language-text\">render</code>第一行代码作用是从组件的<code class=\"language-text\">props</code>中获取相应的属性，其中<code class=\"language-text\">isVisible</code>用于判断是否显示该组件，使用该组件的格式：  </p>\n<p>1</p>\n<Waiting width={width} height={height} isVisible={isWaitingVisible}/>\n<p>在<strong>index.ios.js</strong>中引入<strong>Waiting.js</strong>  </p>\n<p>1</p>\n<p>var Waiting = require('./Waiting.js');</p>\n<p>为了能控制Waiting组件的显示与隐藏，需要在<strong>index.ios.js</strong>新增一个状态：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n  wallsJSON<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n  isLoading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">/***/</span>\n\n  isWaitngVisible<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token comment\">// 默认不显示</span>\n\n<span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>现在，我们可以在<code class=\"language-text\">&lt;/Swiper</code>之后放入<code class=\"language-text\">&lt;Waiting&gt;</code>组件了，不过，直接这样做会导致报错，因为<a href=\"https://facebook.github.io/react/tips/maximum-number-of-jsx-root-nodes.html\">React不允许返回多个组件</a>。为了解决这个问题，我们需要用<code class=\"language-<view\">&lt;/View</code>再做一个简单的包裹：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">renderResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">,</span> isWaitngVisible<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n  <span class=\"token comment\">/***/</span>\n\n    <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">/***/</span>\n\n    <span class=\"token operator\">&lt;</span>Swiper\n\n      <span class=\"token operator\">...</span><span class=\"token operator\">></span>\n\n<span class=\"token punctuation\">.</span>\n\n<span class=\"token punctuation\">.</span>\n\n<span class=\"token punctuation\">.</span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Swiper<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">/***/</span>\n\n    <span class=\"token operator\">&lt;</span>Waiting width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>width<span class=\"token punctuation\">}</span> height<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>height<span class=\"token punctuation\">}</span> isVisible<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isWaitngVisible<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n\n  <span class=\"token comment\">/***/</span>\n\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>既然有了<code class=\"language-text\">isWaitngVisible</code>状态，我们就应该想一想在哪些时机来改变它的状态：双击触发时置为<code class=\"language-text\">true</code>，保存成功时置为<code class=\"language-text\">false</code>，对应到代码就是：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">saveCurrentWallpaperToCameraRoll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span>\n\n  <span class=\"token comment\">// Waiting 组件显示</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>isWaitingVisible<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> currentWall <span class=\"token operator\">=</span> wallsJSON<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentWallIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> currentWallURL <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`http://unsplash.it/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentWall<span class=\"token punctuation\">.</span>width<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentWall<span class=\"token punctuation\">.</span>height<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?image=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>currentWall<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n\n  CameraRoll<span class=\"token punctuation\">.</span><span class=\"token function\">saveImageWithTag</span><span class=\"token punctuation\">(</span>currentWallURL<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span>\n\n    <span class=\"token comment\">// Waiting 组件隐藏</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>isWaitingVisible<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span>\n\n    AlertIOS<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>\n\n      <span class=\"token string\">'保存成功'</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token string\">'壁纸已保存到本地相册'</span><span class=\"token punctuation\">,</span>\n\n      <span class=\"token punctuation\">[</span>\n\n        <span class=\"token punctuation\">{</span>text<span class=\"token punctuation\">:</span> <span class=\"token string\">'好哒！'</span><span class=\"token punctuation\">,</span> onPress<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'OK Pressed!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n      <span class=\"token punctuation\">]</span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error saving to camera roll'</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>模拟器刷新，双击壁纸，等待组件出现，稍后保存成功的弹窗出现，等待组件消失，完美！</p>\n<p>额，等等，真的很完美吗？有没有注意到保存完图片，屏幕跳到了第一张图片。这是因为我们在<code class=\"language-text\">saveWallpaperToCameraRoll</code>调用<code class=\"language-text\">this.setState()</code>，改变了<code class=\"language-text\">isWaitingVisible</code>的状态，触发了<code class=\"language-text\">render()</code>，从而<code class=\"language-text\">swiper</code>重新加载数据并从第一张图显示。</p>\n<p>为了解决这个bug，我们可以通过<code class=\"language-text\">Swiper</code>的<code class=\"language-text\">index</code>入手：  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Swiper</span> <span class=\"token attr-name\">...</span>\n\n        <span class=\"token attr-name\">index</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentWallIndex<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>这样，就保证了每次重新渲染，都从保存的那张开始。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/saving.png\" alt=\"saving\"><br>\n好了，写到这里，我们基本完工一个核心功能完备的小应用：</p>\n<ul>\n<li>能加载随机精美壁纸</li>\n<li>能浏览</li>\n<li>能保存</li>\n</ul>\n<p>如果对随机的五张壁纸无感，想换一批，怎么破？当然，我们可以放置一个按钮，点击便能更新随机的壁纸数据，可是…能不能做得酷一些呢？比如只需要摇一摇手机，便更新了一批壁纸！</p>\n<p>年轻人，下一节我们做这件酷酷的事儿…<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/maomi.jpg\"></p>\n<h1 id=\"5摇一摇动作（shake）和真机测试\"><a href=\"#5%E6%91%87%E4%B8%80%E6%91%87%E5%8A%A8%E4%BD%9C%EF%BC%88shake%EF%BC%89%E5%92%8C%E7%9C%9F%E6%9C%BA%E6%B5%8B%E8%AF%95\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5.摇一摇动作（Shake）和真机测试</h1>\n<p>为了使我们的APP能够捕捉到摇一摇的动作，需要新增一个模块：<a href=\"https://www.npmjs.com/package/react-native-shake-event-ios\">react-native-shake-event-ios</a>。项目根目录运行：<code class=\"language-text\">npm install --save react-native-shake-event-ios</code>。</p>\n<p>另外，我们还需要做的是链接相应的类库。如果没记错的话，这是第三次，也是最后一次做这样的操作，我就不多说了，应该熟练了，少年。温馨提示：<code class=\"language-text\">node_modules/react-native-shake-event-ios/</code>下的<code class=\"language-text\">RNShakeEvent.xcodeproj</code></p>\n<p>引用该类库：  </p>\n<p>1</p>\n<p>var ShakeEvent = require('react-native-shake-event-ios');</p>\n<p>我们在<code class=\"language-text\">componentWillMount</code>新增摇一摇的监听动作：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentWillMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token operator\">...</span>\n\n<span class=\"token comment\">/***/</span>\n\n  <span class=\"token comment\">// 摇一摇，更新数据</span>\n\n  ShakeEvent<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'shake'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchWallsJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><code class=\"language-text\">initialize</code>填坑，其实就是初始化各种状态：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    wallsJSON<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n    isLoading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n\n    isWaitingVisible<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentWallIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>保存代码，接下来我们开始真机测试。当然，如果没有真机，也可以通过快捷键组合：<code class=\"language-text\">CMD + Ctrl + Z</code>模拟摇一摇操作。不过，我还是期望你有一部真机，因为…这样可以拿来装X啊，少年！</p>\n<p>真机测试意味着我们将脱离开发环境，像平时通过AppStore安装APP那样把我们的APP放到手机内。按照<a href=\"https://facebook.github.io/react-native/docs/running-on-device-ios.html#using-offline-bundle\">官方文档</a>来做，其实很简单：</p>\n<ol>\n<li>\n<p>找到<code class=\"language-text\">Xcode/PIW/PIW/AppDeletegate.m</code>，做以下操作：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/uncomment.png\"></p>\n</li>\n<li>\n<p><code class=\"language-text\">Product → Scheme → Edit Scheme</code>或者直接快捷键：<code class=\"language-text\">CMD + Shift + ,</code>，划入的窗口中将<code class=\"language-text\">Build Configuration</code>从<code class=\"language-text\">debug</code>改为<code class=\"language-text\">Release</code>:<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/schema.png\"><br>\n这样做的目的是为了防止摇一摇弹出调试菜单。</p>\n</li>\n<li>\n<p>转向<code class=\"language-text\">Build Setting</code>，禁掉<code class=\"language-text\">Dead Code Stripping</code>，别问我这是为啥，我也不清楚，可能这就是人生，年轻人。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/deadcode.png\"></p>\n</li>\n</ol>\n<p>联接你的iPhone到Mac上，选择真机运行：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/runmyphone.png\"></p>\n<p>好啦，万事俱备，只欠一个点击。首次打包和安装会持续较长时间，请耐心等候。安装过程中甭管蹦出什么，选择<strong>相信</strong>就行。注意，如果想恢复到开发环境，把上面的步骤1和步骤2撤销就可以了。</p>\n<p>安装完毕，手机桌面上就应该多出一个巨丑的APP图标，没错，那就是这么长时间我们辛苦做出的APP，快快打开体验一番吧！</p>\n<p>最后，我们把图标也加上：</p>\n<ol>\n<li>下载<a href=\"http://7xo6wq.com1.z0.glb.clouddn.com/SplashWallIcons.zip\">图标文件</a>。当然，你也可以自己按照<a href=\"https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html\">苹果图标规定</a>来设计一套</li>\n<li>调转到Xcode<code class=\"language-text\">PIW/PIW/Images.xcassets</code>，选择AppIcon</li>\n<li>将图标文件按照规格拖拽到对应的框内，一个萝卜一个坑，so easy!<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/icons.png\"></li>\n</ol>\n<p>再次打包和运行，这次那个巨丑无比的图标应该不见了。</p>\n<p>卧槽，我们目前是不是可以说正式完成了一个APP版本的迭代？是的，我们做到了！</p>\n<h1 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h1>\n<p>又到了总结时间了，这一次我们都做了哪些事情呢：</p>\n<ul>\n<li><code class=\"language-text\">NetworkImage</code>组件让我们能够显示出带加载进度的图片</li>\n<li><code class=\"language-text\">PanResponder</code>API让我们能够捕捉到双击操作</li>\n<li><code class=\"language-text\">Camera Roll</code>让我们能够将壁纸保存到本地相册</li>\n<li><code class=\"language-text\">Waiting</code>是我们首个自定义的组件，让用户在保存壁纸的同时不再懵逼</li>\n<li><code class=\"language-text\">react-native-shake-event-ios</code>让我们能够检测到摇一摇操作，并在恰当的时机，更新随机数据</li>\n</ul>\n<p>目前为止，我们已经完成了一个功能较完备的APP，同时也学习了许多新知，没有过多地深入，但均给出了深入的入口，也就是文章中的链接。其实，这个APP还可以加入许多好玩的特性，比如：</p>\n<ul>\n<li>既然有双击操作，是不是可以考虑加一个单击操作：单击壁纸，隐藏顶部的两个小黑条和底部的分页，也就是全屏显示壁纸，看得更爽一些，再次单击，恢复隐藏的元素。</li>\n<li>有没有可能做一个设置壁纸前的预览功能呢？虽然可能从API上有所限制，但我们可以通过一些hack的方式来达到类似的目的，至于什么方式，发挥你的脑洞去试试吧。</li>\n<li>每次打开APP都要从第三方获取数据，对于在非WiFi环境，用户可能会有所顾虑，是不是应该做一个本地缓存第三方数据的功能，甚至图片？</li>\n<li>现在我们的代码组织并不很模块化，这一点可不可以做些优化？</li>\n<li>React Native 也可以做安卓开发，尝尝鲜？</li>\n</ul>\n<p>以上是我能想到的一些功能点和优化点，如果我们能一步一步走到现在，相信这些好玩的特性也不会那么难实现。或许，我还会写个番外篇，讲一讲如何继续迭代<strong>PIW</strong>。</p>\n<p>通过这个简单的APP，我们接触到了许多知识点，但React Native的学习远不止这些，一些高级话题我们还没涉猎，比如<code class=\"language-text\">Flux/Redux</code>。但万变不离阅读官方文档，加之实例练习，边学边总结，是我的节奏。Hey，man，你的节奏找到了吗？好了，我累了，打烊了…<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-two/tired.jpg\" alt=\"姚明\"><br>\n哦对了，最新代码放在了<a href=\"https://github.com/zerosoul/PIW\">Github上</a>，欢迎指正。</p>\n<h1 id=\"原文链接\"><a href=\"#%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原文链接</h1>\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2016/04/how-to-build-your-first-ios-app-with-javascript/#\">The Beauty Of React Native: Building Your First iOS App With JavaScript (Part 2)</a></li>\n</ul>","frontmatter":{"title":"React Native之美：构建我的第一个iOS APP（2）","date":"2016-06-07T09:31:37.000Z","category":"它山之石","tags":["react native","react","翻译"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#%E5%86%8D%E7%BB%AD%E5%89%8D%E7%BC%98\">再续前缘</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#1%E5%8F%AC%E5%94%A4%E5%87%BA%E5%A3%81%E7%BA%B8%E5%92%8C%E4%BD%9C%E8%80%85\">1.召唤出壁纸和作者</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#2-%E6%8D%95%E6%8D%89%E5%8F%8C%E5%87%BB%E6%93%8D%E4%BD%9Cdouble-taps\">2. 捕捉双击操作(Double-Taps)</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#3%E5%B0%86%E5%A3%81%E7%BA%B8%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0%E7%9B%B8%E5%86%8C\">3.将壁纸保存到本地相册</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#4%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AD%89%E5%BE%85%E7%BB%84%E4%BB%B6%EF%BC%9Awaitingjs\">4.创建一个等待组件：Waiting.js</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#5%E6%91%87%E4%B8%80%E6%91%87%E5%8A%A8%E4%BD%9C%EF%BC%88shake%EF%BC%89%E5%92%8C%E7%9C%9F%E6%9C%BA%E6%B5%8B%E8%AF%95\">5.摇一摇动作（Shake）和真机测试</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#%E6%80%BB%E7%BB%93\">总结</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-two/#%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5\">原文链接</a></li>\n</ul>","excerpt":"再续前缘 第一篇文章 ，我们从零开始，一步一步走到最后，构建了一个似乎并没有卵用的APP。但是，我们做了大量的基础工作，不就是为了在接下来的继续更轻松自信些嘛！ 其实，第一篇的信息量还是很大的，里面的每一个链接都是通往一个新知的大门，如果你觉得掌握得差不多了，那就开始新的旅（Che）程（Dan…"}},{"node":{"fields":{"slug":"/posts/building-my-first-ios-app-with-react-native-part-one"},"html":"<p><img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/rn.png\" alt=\"React Native\"></p>\n<h1 id=\"写在前面的话\"><a href=\"#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2%E7%9A%84%E8%AF%9D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>写在前面的话</h1>\n<p>严格来说这是一篇译文，但与一般的翻译有所不同，我会修正原文中一些小错误，也会指出没有提及的一些坑，还会基于原文的想法做一些扩展开发。所以，读的时候有些是原作者的话，有些是我的添油加醋，但整体绝对保证流畅。另，基于原文改动较多，也就懒得一一标注出来，或许显得有些不负责，但是…<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/ldwy.jpg\" alt=\"来打我呀\"><br>\n好了，下面开始进入正题：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/zb.jpg\" alt=\"装逼\"></p>\n<h1 id=\"之前的困惑\"><a href=\"#%E4%B9%8B%E5%89%8D%E7%9A%84%E5%9B%B0%E6%83%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>之前的困惑</h1>\n<p>使用<code class=\"language-text\">Javascript</code>来构建移动应用已经不是什么新鲜事了。<a href=\"http://ionicframework.com/\">Ionic</a>和<a href=\"http://phonegap.com/\">Phonegap</a>已经做了大量的探索，建立了各自的开发生态圈，吸引了相当多的开发者，不得不说都获得了一定程度的成功。</p>\n<p>但是，尝试做了一些小Demo后，这些框架变得毫无吸引力，主要原因应该是<strong>很难做到原生体验</strong>。后来，转念一想，为啥不使用<code class=\"language-text\">Swift/Objective-C</code>或者<code class=\"language-text\">Java</code>构建原生app呢，诚然，这对于从前端开发转向app开发，需要学习的挺多，但这不正是一名现代Web开发者所擅长的吗：快速学习。那么，从哪儿开头呢？在Google过程中遇到了一篇文章：<a href=\"https://medium.com/ios-os-x-development/an-ios-developer-on-react-native-1f24786c29f0#.avhlz9qsr\">An iOS Developer on React Native</a>，其中一句话打动了我：</p>\n<blockquote>\n<p>Fast-forward a couple of months, and I’m confident enough to say I may never write an iOS app in Objective-C or Swift again.（快进几个月，我有足够的信心说：再也不会用Objective-C或者Swift来写iOS app了！）</p>\n</blockquote>\n<p>一切的遇见都不是偶然的。看来，官方语言也有不少坑，那为啥不选择<code class=\"language-text\">React Native</code>呢，更何况自己是前端工（Ban）程（Zhuan）师（De）。好吧，我承认绕了个不必要的圈子，但走一些弯路能看到更多的风景，不是吗？<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/ym.png\" alt=\"姚明\"><br>\n好的，下面先了解下需求。（难道不应该是先说一下<code class=\"language-text\">React Native</code>么 (╯‵□′)╯︵┻━┻）</p>\n<h1 id=\"先谈谈需求\"><a href=\"#%E5%85%88%E8%B0%88%E8%B0%88%E9%9C%80%E6%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>先谈谈需求</h1>\n<p>很不幸，我从未在苹果商店找到过一个设置手机壁纸的完美APP。在Mac上，<a href=\"http://unsplash.com/\">Unsplash</a>承包了我的所有这方面的需求，很完美，然而在手机上…对不起，打开<code class=\"language-text\">Setting</code>，找到<code class=\"language-text\">Wallpaper</code>…。</p>\n<p>为何不试着做一个满足自己需求的APP呢？下面是我目前希望有的功能点：</p>\n<ul>\n<li>随机展示适合当做手机壁纸的图片</li>\n<li>可以滑动浏览</li>\n<li>可以保存到相册</li>\n<li>保存前可以预览设置后的效果</li>\n</ul>\n<p>虽然最后一项不知道能否做到，但至少可以开始撸其它功能点了。额，等等，开始之前，我觉得有必要提醒一下你应该知道的事情：</p>\n<ul>\n<li>Javascript</li>\n<li>一些<code class=\"language-text\">ES6</code>的特性：<a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes\">类</a>，<a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions\">箭头函数</a>,<a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\">解构</a>和<a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/template_strings\">模板字符串</a></li>\n<li>Mac OS X 终端 （好吧，你应该有个Mac或者Macbook）</li>\n<li>CSS：flexbox (<a href=\"http://flexboxfroggy.com/\">这里</a>有个非常棒的flexbox游戏教程)</li>\n<li><a href=\"https://facebook.github.io/react/\">React</a>：React的一些基本概念需要知道，比如<code class=\"language-text\">JSX</code>、<code class=\"language-text\">state</code>和<code class=\"language-text\">prop</code>的区别、<code class=\"language-text\">Virtual DOM</code>。</li>\n</ul>\n<h1 id=\"再谈谈文章的规划\"><a href=\"#%E5%86%8D%E8%B0%88%E8%B0%88%E6%96%87%E7%AB%A0%E7%9A%84%E8%A7%84%E5%88%92\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再谈谈文章的规划</h1>\n<p>由于涉及的知识点较多，<code class=\"language-text\">构建我的第一个iOS app</code>将分为两篇来完成。每一篇有<strong>五个章节</strong>，每个章节会推进一步，直至完成预期。文章略长，一旦开始，最好以章节为单位来进行。建议先收藏，回家坐在电脑前慢慢品。</p>\n<h2 id=\"1first-blood建一个空react-native项目\"><a href=\"#1first-blood%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%A9%BAreact-native%E9%A1%B9%E7%9B%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.First Blood:建一个空React Native项目</h2>\n<p>首先确认已安装：</p>\n<ul>\n<li><a href=\"https://developer.apple.com/xcode/\">XCode 7.0或更高版本</a></li>\n<li><a href=\"https://nodejs.org/en/\">Node</a></li>\n</ul>\n<p>然后，在终端输入：<code class=\"language-text\">npm install -g react-native-cli</code>，全局安装React Native。</p>\n<p>如果你觉得我说的不够详细，请移步<a href=\"https://facebook.github.io/react-native/docs/getting-started.html#content\">React Native的官方安装文档</a></p>\n<p>在你电脑找块风水宝地，用于初始化项目目录。在该文件夹下执行命令：<code class=\"language-text\">react-native init PIW</code>。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/init.png\" alt=\"init\"><br>\n（<code class=\"language-text\">PIW</code>是<code class=\"language-text\">Pick Image as Wallpaper</code>的缩写，不要在意这个细节，我为了装X起的。另，鉴于网络因素，等待时间应该较长，此时可以去小个便，或者逗逗你的宠物。）</p>\n<p><code class=\"language-text\">init</code>后的项目目录：</p>\n<p><img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/dir.png\" alt=\"项目目录\"></p>\n<p>很显然，<code class=\"language-text\">index.android.js</code>和<code class=\"language-text\">index.ios.js</code>分别是安卓和苹果应用的入口执行文件，由于我们构建的是iOS APP，所以接下来只跟<code class=\"language-text\">index.ios.js</code>打交道。接下来，移步<code class=\"language-text\">ios</code>文件夹，并双击打开<code class=\"language-text\">PIW.xcodeproj</code>。（Xcode的工程文件）<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/xcode.png\" alt=\"第一眼看到的xcode项目页面\"><br>\n注意有个警告：<code class=\"language-text\">No matching provisioning profiles found.</code>。得想办法修复它。先改个名字，<strong>Bundle Identifier</strong>：<code class=\"language-text\">com.zerosoul.me.tutorial.PIW</code>怎么样？有木有感觉很高大上！只要遵循<a href=\"https://en.wikipedia.org/wiki/Reverse_domain_name_notation\">Reverse DNS Convention</a>，请随意。然后选择<strong>Team</strong>，没有则按照指示新建一个。最后，点击<strong>Fix Issue</strong>。</p>\n<p><strong>Deployment Info</strong>一栏需要改动些默认设置，让app不能横屏，并且隐藏顶部的状态栏，下图红框已标出：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/deployinfo.png\" alt=\"deployment info\"></p>\n<p>好了，可以点击左上角的<strong>Run</strong>，看一看模拟器的效果了。中途应该会蹦出一个终端弹窗，不要慌，正常现象。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/popup.png\" alt=\"terminal popup\"></p>\n<p>一旦Xcode构建完，在模拟器里你会看到这一幕：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/welcome.jpg\" alt=\"welcome to React Native\"></p>\n<p><strong>注：此处有坑，如果你用真机模拟，会出现这么一幕：</strong><br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/localhost.png\" alt=\"大红的懵逼\"><br>\n大红的懵逼！不过别慌，官方文档有对应的解决方法，移步<a href=\"https://facebook.github.io/react-native/docs/running-on-device-ios.html\">这里</a>可以找到解决方式。</p>\n<h2 id=\"2-从第三方获取壁纸数据\"><a href=\"#2-%E4%BB%8E%E7%AC%AC%E4%B8%89%E6%96%B9%E8%8E%B7%E5%8F%96%E5%A3%81%E7%BA%B8%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 从第三方获取壁纸数据</h2>\n<p>既然要做壁纸APP，大量适合做手机壁纸的图片从哪里来？还记得前面提到的Unsplash吗？一切的遇见都不是偶然，好心的歪果仁做了一个<a href=\"https://unsplash.it/\">Unsplash图片调用接口</a>，用于生成一些精美占位图，非常方便！</p>\n<h3 id=\"有关code-classlanguage-textes6code中类的解释\"><a href=\"#%E6%9C%89%E5%85%B3code-classlanguage-textes6code%E4%B8%AD%E7%B1%BB%E7%9A%84%E8%A7%A3%E9%87%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>有关<code class=\"language-text\">ES6</code>中“类”的解释</h3>\n<p>你可能会注意到，有些React代码会出现<code class=\"language-text\">var PIW = React.createClass({ ... })</code>，有些会是<code class=\"language-text\">class PIW extends Component{ ... }</code>。呵呵，这是个历史遗留问题，用哪种风格是个人选择问题，不存在孰优孰劣，有选择恐惧症的同学可以看看<a href=\"https://reactjsnews.com/composing-components\">这篇文章</a>。</p>\n<p>此处，我选择<code class=\"language-text\">Recat.Component</code>风格，别问我为什么，就这么任性！<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/renxing.jpg\" alt=\"任性\"></p>\n<h3 id=\"开始做一些改动\"><a href=\"#%E5%BC%80%E5%A7%8B%E5%81%9A%E4%B8%80%E4%BA%9B%E6%94%B9%E5%8A%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开始做一些改动</h3>\n<p>在<code class=\"language-text\">PIW</code>类里面，第一件事情便是加个构造函数<code class=\"language-text\">constructor</code>，在此初始化两个State：<code class=\"language-text\">wallsJSON</code>和<code class=\"language-text\">isLoading</code>。<code class=\"language-text\">wallsJSON</code>用于存储从第三方接口获取的json数组数据，<code class=\"language-text\">isLoading</code>是个布尔变量，用于标识数据是否加载完毕。  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PIW</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span>\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n      wallsJSON<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n      isLoading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/***/</span>\n\n<span class=\"token operator\">...</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><strong>注：方便起见，涉及的代码改动，我用`/*</strong>/<code class=\"language-text\">隔离标识出，下同。** 既然有存放数据的变量了，就得有给之赋值的函数，好吧，在</code>constructor<code class=\"language-text\">下面加一个占位函数</code>fetchWallsJSON`:  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetchWallsJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>‘壁纸数据从这里加载<span class=\"token operator\">...</span>’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>从业务逻辑来讲，组件一旦加载完毕，就应该触发该函数。那么，该<code class=\"language-text\">componentDidMount</code>上场了，它是React Native组件的生命周期函数之一，在首次渲染（<code class=\"language-text\">render</code>）成功后会触发。想要更系统地理解组件的生命周期，请移步<a href=\"https://facebook.github.io/react/docs/component-specs.html\">这里</a>。注意，既然我们用的ES6的类语法，就可以省略<code class=\"language-text\">getInitialState</code>了，取而代之的是在<code class=\"language-text\">constructor</code>中给<code class=\"language-text\">this.state</code>赋值。  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchWallsJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><code class=\"language-text\">fetchWallsJSON</code>里会打印信息，我们应该从哪儿看到呢？首先，让模拟器获取焦点，使用<code class=\"language-text\">CMD + D</code>组合键调出调试菜单，选择<strong>Debug in Chrome</strong>，好吧，顺便把<strong>Enable live reload</strong>也打开吧，妈妈再也不用担心每次都要手动重启APP了。将会在Chrome里打开一个新标签，按照上面的说明调出<strong>console</strong>的界面。啊哈！<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/console.png\" alt=\"console data loaded tip\"><br>\n坑占好了，下面，可以开始考虑引入真实数据了。访问URL：<a href=\"http://unsplash.it/list\">unsplash.it/list</a> ，你将会看到铺满全屏的数据，接下来我们就基于这些数据做文章啦~~~<br>\n首先，替换掉<code class=\"language-text\">console</code>:  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetchWallsJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/***/</span>\n\n    <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'http://unsplash.it/list'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> response <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> jsonData <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span> error <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>‘获取数据有误： ‘ <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/***/</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p><strong>注：用到了<code class=\"language-text\">fetch</code>函数，不熟悉的同学请参考<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\">这里</a></strong><br>\n保存然后刷新，几秒过后，啊哈！<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/consolerealdata.png\" alt=\"console real data\"></p>\n<p>太好了，我们已经能从第三方拿到数据了！在打印出数据前会有点延迟，这很正常，因为从请求到响应回数据会有个等待时间，此处应有<strong>加载提示</strong>。</p>\n<h2 id=\"3-增加加载提示\"><a href=\"#3-%E5%A2%9E%E5%8A%A0%E5%8A%A0%E8%BD%BD%E6%8F%90%E7%A4%BA\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 增加加载提示</h2>\n<p>首先，把<code class=\"language-text\">PIW</code>类里<code class=\"language-text\">render</code>代码全部删除，新增以下代码：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>isLoading<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isLoading<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderLoadingScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">else</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>里面新增了两个函数，我们来实现它：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">renderLoadingScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n        <span class=\"token operator\">&lt;</span>View style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>loadingContainer<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n            <span class=\"token operator\">&lt;</span>ActivityIndicatorIOS\n\n              animating<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n\n              color<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'#fff'</span><span class=\"token punctuation\">}</span>\n\n              size<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'small'</span><span class=\"token punctuation\">}</span> \n\n              style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>margin<span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n              <span class=\"token operator\">&lt;</span>Text style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>color<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>正在加载数据<span class=\"token operator\">...</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n\n       <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">renderResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n        <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n\n            <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>\n\n             数据已加载\n\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>根据<code class=\"language-text\">isLoading</code>的不同状态，渲染不同的界面。但是请注意，我们好像忘了什么。啊哈，<code class=\"language-text\">isLoading</code>并没有改变状态，应该在哪儿将其状态变过来呢？<code class=\"language-text\">fetchWallsJSON</code>！  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> response <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> jsonData <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>jsonData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/***/</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>isLoading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//更新 isLoading </span>\n\n<span class=\"token comment\">/***/</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span> error <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>‘获取数据有误：‘ <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">...</span></code></pre>\n      </div>\n<p>有关<code class=\"language-text\">setState</code>的详细说明请移步<a href=\"https://facebook.github.io/react/docs/component-api.html\">这里</a>，一句话描述其作用就是用于触发UI更新。<br>\n另外，我们在<code class=\"language-text\">renderLoadingScreen</code>调用了一个新组件<code class=\"language-text\">ActivityIndicatorIOS</code>，因此，需要在头部引入之：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n\n  AppRegistry<span class=\"token punctuation\">,</span>\n\n  StyleSheet<span class=\"token punctuation\">,</span>\n\n  Text<span class=\"token punctuation\">,</span>\n\n  View<span class=\"token punctuation\">,</span>\n\n  <span class=\"token comment\">/***/</span>\n\n  ActivityIndicatorIOS <span class=\"token comment\">// 增加新组件</span>\n\n  <span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>在看到最终效果前，还有一件事情：注意到<code class=\"language-text\">&lt;View&gt;</code>标签内有个<code class=\"language-text\">styles.loadingContainer</code>没有？没错，这是用来定义<code class=\"language-text\">View</code>的样式的，目前可以这样理解：React内的样式全部用行内样式来定义的。而样式则通过<code class=\"language-text\">var styles = StyleSheet.create({…</code>来创建，只需要在相应的组件里加以引用即可：<br>\n创建<code class=\"language-text\">loadingContainer</code>:  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span>\n\n  loadingContainer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n\n    flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n    flexDirection<span class=\"token punctuation\">:</span> <span class=\"token string\">'row'</span><span class=\"token punctuation\">,</span>\n\n    justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n\n    alignItems<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n\n    backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'#000'</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/***/</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>引用<code class=\"language-text\">loadingContainer</code>:  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>loadingContainer<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<p>当然，也可以这样使用：  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\n    flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\n    flexDirection<span class=\"token punctuation\">:</span> <span class=\"token string\">'row'</span><span class=\"token punctuation\">,</span>\n\n    justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n\n    alignItems<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n\n    backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'#000'</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<p>不过这样做代码的可读性和可维护性较差，尤其在有很多组件的时候，容易乱套，所以并不是一个好的实践。另外，注意到没，React Native严重依赖<code class=\"language-text\">flexbox</code>布局元素，所以，学好<code class=\"language-text\">flexbox</code>这个知识点就很有必要。</p>\n<p>保存这些改动，你将会在模拟器中看到以下加载页面：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/loading.png\" alt=\"loading screen\"><br>\n过个几秒钟，将会转为：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/loaded.png\" alt=\"data loaded\"></p>\n<h2 id=\"4-筛选出随机的壁纸\"><a href=\"#4-%E7%AD%9B%E9%80%89%E5%87%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E5%A3%81%E7%BA%B8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 筛选出随机的壁纸</h2>\n<p>这一章节侧重于Javascript的编码，将创建一个专门的模块用于生成随机数。如果模块的概念感到陌生，请先移步<a href=\"https://nodejs.org/api/modules.html#modules_modules\">Node.js的模块文档</a>。</p>\n<p>首先，我们在<code class=\"language-text\">index.ios.js</code>的<code class=\"language-text\">class</code>声明前定义一个常量，用于决定要随机选取的壁纸数量。  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token constant\">NUM_WALLPAPERS</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>然后创建一个用户生成随机数的模块，这个模块内有两个函数：</p>\n<ul>\n<li><code class=\"language-text\">uniqueRandomNumbers</code>：该函数有三个参数，第一个决定了将要返回的随机数数量，后面两个定义随机数选取的范围。比如调用<code class=\"language-text\">uniqueRandomNumbers(5,10,20)</code>将获得包含5个随机数的数组，他们的范围在10到20之间。</li>\n<li><code class=\"language-text\">randomNumberInRange</code>：该函数有两个参数，定义了随机数范围，并返回一个随机数。比如调用<code class=\"language-text\">randomNumberInRange(2,10)</code>将返回介于2到10的随机的一个数。</li>\n</ul>\n<p>当然，我们完全可以将这两个函数合并为一个，但遵循<a href=\"https://en.wikipedia.org/wiki/Single_responsibility_principle\"><strong>单一职责原则</strong></a>应该是编码的最佳实践：一个函数只做一件事并将其做好。相信我，遵循好的编程原则能让以后的日子好过一些。</p>\n<p>好了，思路表述完了，开始编码。首先，在根目录下新建一个js文件<code class=\"language-text\">RandManager.js</code>，以下是代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">uniqueRandomNumbers</span><span class=\"token punctuation\">(</span>numRandomNumbers<span class=\"token punctuation\">,</span> lowerLimit<span class=\"token punctuation\">,</span> upperLimit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">var</span> uniqueNumbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> uniqueNumbers<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> numRandomNumbers <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token keyword\">var</span> currentRandomNumber <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">randomNumberInRange</span><span class=\"token punctuation\">(</span>lowerLimit<span class=\"token punctuation\">,</span> upperLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> uniqueNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>currentRandomNumber<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> \n\n                uniqueNumbers<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>currentRandomNumber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> uniqueNumbers<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token function\">randomNumberInRange</span><span class=\"token punctuation\">(</span>lowerLimit<span class=\"token punctuation\">,</span> upperLimit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">return</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> upperLimit <span class=\"token operator\">-</span> lowerLimit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> lowerLimit<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>在<code class=\"language-text\">index.ios.js</code>中引用<code class=\"language-text\">RandManager</code>模块：<code class=\"language-text\">var RandManager = require(&#39;./RandManager.js&#39;);</code>，然后我们就可以在<code class=\"language-text\">fetchWallsJSON</code>中调用啦：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetchWallsJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'http://unsplash.it/list'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> response <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span> jsonData <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">/***/</span>\n\n      <span class=\"token keyword\">var</span> randomIds <span class=\"token operator\">=</span> RandManager<span class=\"token punctuation\">.</span><span class=\"token function\">uniqueRandomNumbers</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NUM_WALLPAPERS</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> jsonData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">var</span> walls <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n      randomIds<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>randomId <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n        walls<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>jsonData\\<span class=\"token punctuation\">[</span>randomId\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n        isLoading<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n        wallsJSON<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>walls<span class=\"token punctuation\">)</span>\n\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/***/</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span> error <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'获取数据有误：'</span> <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>上面代码应该不用过多解释了，使用<code class=\"language-text\">uniqueRandomNumbers</code>生成5个随机数作为<code class=\"language-text\">jsonData</code>的索引值，进而获取5个随机壁纸数据并存入<code class=\"language-text\">wallsJSON</code>，哦对了，别忘了更新<code class=\"language-text\">isLoading</code>。</p>\n<p>有了随机数据，就可以在<code class=\"language-text\">renderResults</code>里使用了：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">renderResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">/***/</span>\n\n   <span class=\"token comment\">//这里用到了ES6中的解构</span>\n\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">,</span> isLoading<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>isLoading <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n    <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n\n        <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wallpaper<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n\n            <span class=\"token operator\">&lt;</span>Text key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n\n              <span class=\"token punctuation\">{</span>wallpaper<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span>\n\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>以上代码有个地方值得注意：React Native通过循环数组或集合渲染子元素时，需要给每个元素制定一个唯一的<code class=\"language-text\">key</code>，这也是为啥<code class=\"language-text\">&lt;Text key={index}&gt;</code>这样写的原因。</p>\n<p>保存代码，模拟器刷新后，我们看到了五个不同的id：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/randid.png\" alt=\"random id\"><br>\n当然，可以将<code class=\"language-text\">id</code>改为<code class=\"language-text\">author</code>，这样，我们看到的是五个不同的名字：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/randname.png\" alt=\"random name\"></p>\n<p>非常好，我们现在已经可以自如地操控数据了。</p>\n<h2 id=\"5-新增swiper组件\"><a href=\"#5-%E6%96%B0%E5%A2%9Eswiper%E7%BB%84%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 新增Swiper组件</h2>\n<p>React Native有强大的社区支持和<a href=\"https://react.parts/native\">丰富的组件库</a>。这一章节学习如何引入第三方组件。<br>\n对于我们当前的APP，需要一个可滑动浏览图片的组件，推荐<a href=\"https://github.com/leecade/react-native-swiper\">react-native-swiper</a>。</p>\n<p>终端切换到项目根目录，运行命令：<code class=\"language-text\">npm install react-native-swiper --save</code>，然后<code class=\"language-text\">require</code>到代码里：<code class=\"language-text\">var Swiper=require(&#39;react-native-swiper&#39;)</code>。<br>\n将<code class=\"language-text\">renderResults</code>里的<code class=\"language-text\">View</code>替换为<code class=\"language-text\">Swiper</code>：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">renderResults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">,</span> isLoading<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>isLoading <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Swiper<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wallpaper<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>Text key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n              <span class=\"token punctuation\">{</span>wallpaper<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Swiper<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>不出意外的话，界面将变成下面这样：<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/swiperwithdata.png\" alt=\"swiper with name data\"><br>\n下面，根据<a href=\"https://github.com/leecade/react-native-swiper\">Swiper组件的文档</a>，我们来微调一下样式：  </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Swiper</span> \n<span class=\"token attr-name\">dot</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>backgroundColor<span class=\"token punctuation\">:</span><span class=\"token string\">'rgba(255,255,255,.4)'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>borderRadius<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> marginLeft<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> marginRight<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> marginTop<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> marginBottom<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n<span class=\"token attr-name\">activeDot</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>backgroundColor<span class=\"token punctuation\">:</span> <span class=\"token string\">'#fff'</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> borderRadius<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> marginLeft<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> marginRight<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n<span class=\"token attr-name\">loop</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token attr-name\">onMomentumScrollEnd</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onMomentumScrollEnd<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">{</span>wallsJSON<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>wallpaper<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Text</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">{</span>wallpaper<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Text</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Swiper</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<ul>\n<li>微调了下底部分页小圆点，更大更黑了（卧槽，我在说什么…）</li>\n<li>禁用了循环，这样，一旦浏览到最后一页，然后就没有然后了。</li>\n<li>新增了每一页滑动完毕后的触发事件：<code class=\"language-text\">onMomentumScrollEnd</code>（这个会在下一篇文章中用到，此处先占个坑）</li>\n</ul>\n<p>我们已经把Swiper加上了，好啦，这一节就写到这里，因为…我累了。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/shuaiqi.jpg\"></p>\n<h1 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h1>\n<p>写到这里，我发现文章已经挺长的了。那么…再加个总结吧，都这么长了，应该不介意再长一点吧。<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/youdaoli.jpg\" alt=\"有道理\"></p>\n<ul>\n<li>第一节讲的是如何新建一个空的React Native项目</li>\n<li>第二节讲的是如何从第三方API获取原始数据，并建议用ES6新语法来构建程序</li>\n<li>第三节我们根据APP不同的状态渲染出不同的界面</li>\n<li>第四节我们新建了一个模块，引入并解决了产生随机数的问题</li>\n<li>第五节我们新增了一个第三方组件，并做了简单设置。</li>\n</ul>\n<p>好吧，必须承认，目前为止，我们的APP看起来似乎没啥特殊之处。不过，刚入门嘛，一步一步走到这里，也不容易了。下一篇文章，我们将继续打磨这个APP，新增特性预告：</p>\n<ul>\n<li>作者名字将替换为图片，没错，高清无码大图</li>\n<li>自定义双击事件，保存图片到相册：<code class=\"language-text\">PanHandler</code></li>\n<li>通过Xcode新增类库并获取相应授权，比如访问相册</li>\n<li>增加预览功能</li>\n<li>创建更多的自定义组件<br>\n哦对了，最终代码在<a href=\"https://github.com/zerosoul/PIW\">这儿</a>。年轻人，我们下一回合见…<br>\n<img src=\"https://zerosoul.github.io/2016/06/05/building-my-first-ios-app-with-react-native-part-one/dengyan.png\"></li>\n</ul>\n<h1 id=\"原文链接\"><a href=\"#%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原文链接</h1>\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2016/04/the-beauty-of-react-native-building-your-first-ios-app-with-javascript-part-1/\">The Beauty Of React Native: Building Your First iOS App With JavaScript (Part 1)</a></li>\n</ul>","frontmatter":{"title":"React Native之美：构建我的第一个iOS APP（1）","date":"2016-06-05T09:31:37.000Z","category":"它山之石","tags":["react native","react","翻译"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2%E7%9A%84%E8%AF%9D\">写在前面的话</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E4%B9%8B%E5%89%8D%E7%9A%84%E5%9B%B0%E6%83%91\">之前的困惑</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E5%85%88%E8%B0%88%E8%B0%88%E9%9C%80%E6%B1%82\">先谈谈需求</a></li>\n<li>\n<p><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E5%86%8D%E8%B0%88%E8%B0%88%E6%96%87%E7%AB%A0%E7%9A%84%E8%A7%84%E5%88%92\">再谈谈文章的规划</a></p>\n<ul>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#1first-blood%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%A9%BAreact-native%E9%A1%B9%E7%9B%AE\">1.First Blood:建一个空React Native项目</a></li>\n<li>\n<p><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#2-%E4%BB%8E%E7%AC%AC%E4%B8%89%E6%96%B9%E8%8E%B7%E5%8F%96%E5%A3%81%E7%BA%B8%E6%95%B0%E6%8D%AE\">2. 从第三方获取壁纸数据</a></p>\n<ul>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E6%9C%89%E5%85%B3code-classlanguage-textes6code%E4%B8%AD%E7%B1%BB%E7%9A%84%E8%A7%A3%E9%87%8A\">有关&#x3C;code class=\"language-text\">ES6&#x3C;/code>中“类”的解释</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E5%BC%80%E5%A7%8B%E5%81%9A%E4%B8%80%E4%BA%9B%E6%94%B9%E5%8A%A8\">开始做一些改动</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#3-%E5%A2%9E%E5%8A%A0%E5%8A%A0%E8%BD%BD%E6%8F%90%E7%A4%BA\">3. 增加加载提示</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#4-%E7%AD%9B%E9%80%89%E5%87%BA%E9%9A%8F%E6%9C%BA%E7%9A%84%E5%A3%81%E7%BA%B8\">4. 筛选出随机的壁纸</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#5-%E6%96%B0%E5%A2%9Eswiper%E7%BB%84%E4%BB%B6\">5. 新增Swiper组件</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E6%80%BB%E7%BB%93\">总结</a></li>\n<li><a href=\"/posts/building-my-first-ios-app-with-react-native-part-one/#%E5%8E%9F%E6%96%87%E9%93%BE%E6%8E%A5\">原文链接</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/everything-about-promise"},"html":"<p><img src=\"https://zerosoul.github.io/2016/05/26/everything-about-promise/promise.jpg\" alt=\"javascript promise\"></p>\n<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>先看一段代码：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">p<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// do something with the result</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>如果有似曾相识的感觉，那么你在理解javascript中的promise道路上已经迈出了一步。如果完全懵逼，别怕，接下来我们通过例子来了解promise为何物。</p>\n<p>作为新概念，一些人理解promise起来会有些困难，因为这需要思维上的转变。但是请相信我，经过几个实例的讲解，你会发现它的优雅：它使得让人头痛的异步代码写起来更为轻松，而且可以避免“回调大坑”（<a href=\"http://callbackhell.com/\">callback hell</a>）。</p>\n<p>promise背后的思想是：</p>\n<blockquote>\n<p>promise代表的是异步操作的<strong>最终</strong>（eventual）结果</p>\n</blockquote>\n<p>这意味着异步操作的结果并不能立即获取，而是要等到promise稳定了（settled）。</p>\n<p>想想你在日常生活中做出承诺（promise）的例子：小时候，你出门对老妈说：我保证（promise）把垃圾带出去。这句话的意思是在稍后的某个时间点你会去做<strong>扔垃圾</strong>这件事并兑现你的承诺。也许几分钟，也许几小时，也许…</p>\n<p>promise亦是如此。当一个函数返回一个promise，它其实是在说：嘿！我向你承诺，一旦完事，我将带着结果去找你！</p>\n<h1 id=\"举例\"><a href=\"#%E4%B8%BE%E4%BE%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>举例</h1>\n<p>好啦，理论和术语的东西讲多了让人烦，下面我们来例证上面说的一堆话。</p>\n<p>AJAX的概念应该不陌生吧，相信你之前使用过原生<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a>，或者jQuery的<a href=\"http://api.jquery.com/jquery.ajax/\">$.ajax()</a>，或者其它类库。不过，XMLHttpRequest API既复杂又难记忆。谢天谢地，新API <a href=\"https://developer.mozilla.org/en/docs/Web/API/Fetch_API\">fetch</a>简化了ajax的应用，并且，它用到了promise！</p>\n<p>这意味着什么？其实，每当你使用fetch()发出请求，像这样：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/some/endpoint'</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>它就会返回一个promise对象。</p>\n<p>通常我们会使用回调函数来响应异步请求完成时的操作。但是，在promise的世界里，我们得使用<code class=\"language-text\">then()</code>来达到这一目的。</p>\n<p>通过链式调用<code class=\"language-text\">.then(onFulfilled, onRejected)</code>来访问<code class=\"language-text\">fetch</code>的结果：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/some/endpoint'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Response from the endpoint '</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'An error occurred: '</span> <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p><code class=\"language-text\">then</code>方法提供两个参数：</p>\n<ol>\n<li><code class=\"language-text\">onFulfilled</code>：当promise完成（fulfilled）时调用，第一个参数表示promise的结果。</li>\n<li><code class=\"language-text\">onRejected</code>：当promise被拒（rejected）时调用，第一个参数表示promise被拒的原因。</li>\n</ol>\n<p><strong>完成</strong>和<strong>被拒</strong>是promise的两个状态，其实还有第三种状态：挂起（pending）。现在，我们来总结下<code class=\"language-text\">fetch</code>使用promise的经过：</p>\n<ol>\n<li>从调用<code class=\"language-text\">fetch()</code>那一刻，它就返回了一个promise对象</li>\n<li>在请求完成之前，promise的状态一直处于<strong>挂起</strong></li>\n<li>promise由挂起状态，可能会转为<strong>完成</strong>，也可能会是<strong>被拒</strong>。</li>\n</ol>\n<p>值得一提的是，一旦promise的状态转为完成或被拒，其值将不再改变。</p>\n<h1 id=\"使用code-classlanguage-textcatchcode错误处理\"><a href=\"#%E4%BD%BF%E7%94%A8code-classlanguage-textcatchcode%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用<code class=\"language-text\">catch()</code>错误处理</h1>\n<p><a href=\"https://promisesaplus.com/\">Promises/A+ 规范</a> 提供了一种语法糖来处理promise的错误。</p>\n<p>假设有个<code class=\"language-text\">lookupPrice(itemId)</code>函数，功能是查找数据库中特定商品的价格，如果存在记录则表示成功，否则表示失败。无论如何，最终返回一个promise对象，我们可以使用<code class=\"language-text\">catch()</code>来使代码更具可读性：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The item costs: '</span> <span class=\"token operator\">+</span> price<span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find an item with that ID'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>如果商品存在，将会打印：<code class=\"language-text\">The item costs: 50</code>，如果不存在，则打印：<code class=\"language-text\">Could not find an item with that ID</code>。</p>\n<p>如果你对<code class=\"language-text\">then()</code>情有独钟，上面的那段代码可以改写成下面的链式调用：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The item costs: '</span> <span class=\"token operator\">+</span> price<span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find an item with that ID'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<blockquote>\n<p>如果一个promise被拒，代码将直接跳到第一个<code class=\"language-text\">catch</code>或者有<code class=\"language-text\">onRejected</code>的<code class=\"language-text\">then</code>链式调用处。</p>\n</blockquote>\n<p>比如当我们使用一个不存在的商品id来调用<code class=\"language-text\">lookupPrice()</code>：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">99999</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The item costs: '</span> <span class=\"token operator\">+</span> price<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> price\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Double the price: '</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>price <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Could not find an item with that ID'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>由于两个<code class=\"language-text\">then</code>都没有<code class=\"language-text\">onRejected</code>，均被忽略了，代码直接跳到<code class=\"language-text\">catch</code>执行。</p>\n<p>接下来再列举两个代码片段，它们有细微差别，您瞧好了：<br>\n片段1：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 使用 then(onFulfilled, onRejected)</span>\n\n<span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// lookup another price and return the promise created by lookupPrice(456)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">456</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Item 123 does not exist'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>片段2：  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 使用 catch()</span>\n\n<span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>price<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// lookup another price and return the promise created by lookupPrice(456)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">lookupPrice</span><span class=\"token punctuation\">(</span><span class=\"token number\">456</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Either item 123 OR 456 does not exist'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>片段1中，如果商品123不存在，带有<code class=\"language-text\">onRejected</code>的<code class=\"language-text\">then</code>将会被立即执行：</p>\n<ul>\n<li>在这个例子中将会打印“Item 123 does not exist”</li>\n<li>然而，并没有给<code class=\"language-text\">lookupPrice(456)</code>指定错误处理函数，所以，如果商品456不存在，什么都不会打印。这是个未捕捉到的错误(Uncaught error)。</li>\n</ul>\n<p>需要提醒的一点：当你链式调用<code class=\"language-text\">then(onFulfilled, onRejected)</code>，被执行的或者是<code class=\"language-text\">onFulfilled</code>，或者是<code class=\"language-text\">onRejected</code>，绝对不是两个都执行。</p>\n<p>片段2中：</p>\n<ul>\n<li>如果商品123不存在，代码直接进入<code class=\"language-text\">catch</code>，打印“Either item 123 OR 456 does not exist”</li>\n<li>由于在<code class=\"language-text\">then</code>之后链式调用了<code class=\"language-text\">catch</code>，在此之前任何promise转到了被拒状态，都将进入<code class=\"language-text\">catch</code>。所以，如果商品456也不存在，也会在屏幕上看到“Either item 123 OR 456 does not exist”。</li>\n</ul>\n<h1 id=\"使用code-classlanguage-textnew-promisecode创建promise\"><a href=\"#%E4%BD%BF%E7%94%A8code-classlanguage-textnew-promisecode%E5%88%9B%E5%BB%BApromise\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用<code class=\"language-text\">new Promise()</code>创建promise</h1>\n<p>目前为止，我们通过<code class=\"language-text\">fetch</code>API来了解了promise，通过<code class=\"language-text\">then</code>来使用promise的结果。多数情况下，我们会用到各式各样的类库来使用promise。然而，有时还是需要自己创建promise，自主决定什么情况下转入完成，什么情况下转入被拒。</p>\n<p>使用构造函数<code class=\"language-text\">Promise(resolver)</code>来创建promise实例，其中<code class=\"language-text\">resolver</code>接收两个参数：resolve和reject。似曾相识？恩哼？！</p>\n<p>举个栗子：比如我们想创建一个随机数1到10生成函数，并且返回一个promise。如果数字小于5，进入<code class=\"language-text\">resolve</code>（意味着操作成功），如果大于5，进入<code class=\"language-text\">reject</code>（意味着操作失败）。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">generateRandomNumber</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> randomNumber <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>randomNumber <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>randomNumber<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n      <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>randomNumber<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">generateRandomNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Success: '</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error: '</span> <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h1 id=\"链式调用：一次只完成一个任务\"><a href=\"#%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%EF%BC%9A%E4%B8%80%E6%AC%A1%E5%8F%AA%E5%AE%8C%E6%88%90%E4%B8%80%E4%B8%AA%E4%BB%BB%E5%8A%A1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>链式调用：一次只完成一个任务</h1>\n<p>链式调用多个<code class=\"language-text\">then</code>，可以做到进一步处理返回值，并且顺序化执行其它异步任务。</p>\n<p>在一些业务场景，这非常有用。比如，你要调用某个终端来认证用户，一旦认证成功，我们调用另一个终端来获取用户资料。</p>\n<p>上面那个场景用代码来表示的话，类似这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 认证id为333的用户</span>\n\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/auth/333'</span><span class=\"token punctuation\">)</span>\n\n   <span class=\"token comment\">//将响应对象传值给authStatus，用以确认认证成功与否</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>authStatus<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">//认证成功了，则继续调用loadProfile，并传入用户名</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>loadProfile<span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">//认证失败了，进入catch处理程序</span>\n\n  <span class=\"token punctuation\">.</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">authStatus</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">//用户名将传入下一个`then`，即loadProfile</span>\n\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>userName<span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 认证失败，进入reject</span>\n\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'User cannot be authenticated'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">loadProfile</span> <span class=\"token punctuation\">(</span>userName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/profile/'</span> <span class=\"token operator\">+</span> userName<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>profileData<span class=\"token punctuation\">)</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>建议花上一两分钟看上几遍上面代码，研究下各个部分是如何组合在一起的。</p>\n<p>有两个地方需要特别注意下：</p>\n<ul>\n<li>一旦promise转为<strong>完成</strong>状态，它的值将被当做参数自动传入下一个<code class=\"language-text\">then</code>方法中。</li>\n<li>如果认证失败，将立即进入<code class=\"language-text\">catch</code>，并略过<code class=\"language-text\">.then(loadProfile)</code>。</li>\n</ul>\n<h1 id=\"promiseall：一次搞定！\"><a href=\"#promiseall%EF%BC%9A%E4%B8%80%E6%AC%A1%E6%90%9E%E5%AE%9A%EF%BC%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Promise.all()：一次搞定！</h1>\n<p>如果我们不关心异步操作的执行顺序，换句话说，假如我们想在获取用户信息的同时，把最近发表的文章也获取了，该怎么办？</p>\n<p>这时候就该<code class=\"language-text\">Promise.all()</code>上场了。它将promise数组作为参数传入，并且实例化一个promise，只有当数组中所有的promise都转为完成状态时，该实例化promise才进入完成状态。但是，请记住，一旦参数中有一个promise是被拒状态，Promise.all()也就进入了被拒状态。要么所有的promise都完成，要么全部被拒。</p>\n<p>Promise.all()完成返回的结果是一个数组，其中的值对应参数中的promise数组。下面根据刚刚提到的那个场景，我们使用Promise.all()来实现下：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/profile/333'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 获取用户信息</span>\n\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/posts/user/333'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 获取用户文章</span>\n\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// `result`是一个长度为2的数组</span>\n\n  <span class=\"token keyword\">var</span> profileInfo <span class=\"token operator\">=</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>profileData\n\n  <span class=\"token keyword\">var</span> recentPosts <span class=\"token operator\">=</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>posts\n\n  <span class=\"token comment\">//处理数据 BLA BLA ~~~</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h1 id=\"就这些了！我保证！（i-promise）\"><a href=\"#%E5%B0%B1%E8%BF%99%E4%BA%9B%E4%BA%86%EF%BC%81%E6%88%91%E4%BF%9D%E8%AF%81%EF%BC%81%EF%BC%88i-promise%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>就这些了！我保证！（I Promise）</h1>\n<p>一旦开始在代码中实践Promise，你会发现一切都变得相当简单。因此我建议你打开Chrome/Firefox的开发者工具，走一遍这篇文章里的例子。</p>\n<p>需要指出的是，有一个Promise的API我还没有提及:<code class=\"language-text\">Promise.race()</code>。它和<code class=\"language-text\">Promise.all()</code>类似，传入一个promise数组，并实例化一个promise，但不同之处在于传入的promise有任何一个转为完成，实例化的promise便进入完成，任何一个promise转为被拒，便进入被拒。个人认为，这并不十分实用，但我认为有一些特定业务场景会用得上它，你可以在<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/race\">这儿</a>熟悉下这个API，祝好运！</p>\n<h1 id=\"参考链接\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考链接</h1>\n<ul>\n<li>\n<p><a href=\"https://coligo.io/javascript-promises-plain-simple/\">JavaScript Promises: Plain and Simple</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\">MDN:Promise</a></p>\n</li>\n</ul>","frontmatter":{"title":"探索 Javascript Promise","date":"2016-05-26T09:31:37.000Z","category":"它山之石","tags":["译文","技术","javascript","promise"],"cover":"https://zerosoul.github.io/2016/05/26/everything-about-promise/promise.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/everything-about-promise/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/everything-about-promise/#%E4%B8%BE%E4%BE%8B\">举例</a></li>\n<li><a href=\"/posts/everything-about-promise/#%E4%BD%BF%E7%94%A8code-classlanguage-textcatchcode%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\">使用&#x3C;code class=\"language-text\">catch()&#x3C;/code>错误处理</a></li>\n<li><a href=\"/posts/everything-about-promise/#%E4%BD%BF%E7%94%A8code-classlanguage-textnew-promisecode%E5%88%9B%E5%BB%BApromise\">使用&#x3C;code class=\"language-text\">new Promise()&#x3C;/code>创建promise</a></li>\n<li><a href=\"/posts/everything-about-promise/#%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%EF%BC%9A%E4%B8%80%E6%AC%A1%E5%8F%AA%E5%AE%8C%E6%88%90%E4%B8%80%E4%B8%AA%E4%BB%BB%E5%8A%A1\">链式调用：一次只完成一个任务</a></li>\n<li><a href=\"/posts/everything-about-promise/#promiseall%EF%BC%9A%E4%B8%80%E6%AC%A1%E6%90%9E%E5%AE%9A%EF%BC%81\">Promise.all()：一次搞定！</a></li>\n<li><a href=\"/posts/everything-about-promise/#%E5%B0%B1%E8%BF%99%E4%BA%9B%E4%BA%86%EF%BC%81%E6%88%91%E4%BF%9D%E8%AF%81%EF%BC%81%EF%BC%88i-promise%EF%BC%89\">就这些了！我保证！（I Promise）</a></li>\n<li><a href=\"/posts/everything-about-promise/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">参考链接</a></li>\n</ul>","excerpt":"引子 先看一段代码：   如果有似曾相识的感觉，那么你在理解javascript中的promise道路上已经迈出了一步。如果完全懵逼，别怕，接下来我们通过例子来了解promise为何物。 作为新概念，一些人理解promise…"}},{"node":{"fields":{"slug":"/posts/shooting-china"},"html":"<p>不管新闻摄影、纪实摄影，都应该反映社会的变化，你拍下来了，照片就有意义。摄影最应该表现那些即将产生的和随时将要消失的事物。如果脑子里没有独立的品格或者独立的思想，我不相信能拍出多么优秀的作品来。</p>\n<p>珍贵的作品就是要记录历史、记录时代。</p>\n<p>在久患“浮躁病”的时代，我有幸见过一群笃实的人。</p>\n<h1 id=\"沙飞\"><a href=\"#%E6%B2%99%E9%A3%9E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>沙飞</h1>\n<p><img src=\"/images/baiqiuen.jpg\" alt=\"白求恩\"></p>\n<p><img src=\"/images/luxun.jpeg\" alt=\"鲁迅\"></p>\n<h1 id=\"翁乃强\"><a href=\"#%E7%BF%81%E4%B9%83%E5%BC%BA\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>翁乃强</h1>\n<p><img src=\"/images/hongweibing.jpg\" alt=\"红卫兵\"></p>\n<h1 id=\"候登科\"><a href=\"#%E5%80%99%E7%99%BB%E7%A7%91\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>候登科</h1>\n<p><img src=\"/images/maike.jpg\" alt=\"麦客\"></p>\n<p><img src=\"/images/nvmaike.jpeg\" alt=\"女麦客\"></p>\n<h1 id=\"四月影会\"><a href=\"#%E5%9B%9B%E6%9C%88%E5%BD%B1%E4%BC%9A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>四月影会</h1>\n<p><img src=\"/images/siyueyinghui.jpg\" alt=\"四月影会第一次展览\"></p>\n<h1 id=\"解海龙\"><a href=\"#%E8%A7%A3%E6%B5%B7%E9%BE%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解海龙</h1>\n<p><img src=\"/images/%E5%B8%8C%E6%9C%9B%E5%B7%A5%E7%A8%8B.jpg\" alt=\"希望工程\"></p>\n<p><img src=\"/images/%E5%8A%AA%E5%8A%9B%E8%AF%BB%E4%B9%A6%E7%9A%84%E7%94%B7%E5%AD%A9.jpg\" alt=\"努力读书的男孩\"></p>\n<h1 id=\"王福春\"><a href=\"#%E7%8E%8B%E7%A6%8F%E6%98%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>王福春</h1>\n<p><img src=\"/images/%E6%8B%A5%E6%8C%A4%E7%9A%84%E7%81%AB%E8%BD%A6.jpg\" alt=\"拥挤的火车\"></p>\n<h1 id=\"贺延光\"><a href=\"#%E8%B4%BA%E5%BB%B6%E5%85%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>贺延光</h1>\n<p><img src=\"/images/%E9%9D%9E%E5%85%B8.jpg\" alt=\"非典\"></p>\n<h1 id=\"结语\"><a href=\"#%E7%BB%93%E8%AF%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结语</h1>\n<p>某位摄影家说过：端起相机，不过是我打量这个世界的借口。</p>","frontmatter":{"title":"阅读笔记《影像中的国》","date":"2016-05-22T05:23:08.000Z","category":"阅读笔记","tags":["摄影","中国","经典","阅读"],"cover":"/images/希望工程.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/shooting-china/#%E6%B2%99%E9%A3%9E\">沙飞</a></li>\n<li><a href=\"/posts/shooting-china/#%E7%BF%81%E4%B9%83%E5%BC%BA\">翁乃强</a></li>\n<li><a href=\"/posts/shooting-china/#%E5%80%99%E7%99%BB%E7%A7%91\">候登科</a></li>\n<li><a href=\"/posts/shooting-china/#%E5%9B%9B%E6%9C%88%E5%BD%B1%E4%BC%9A\">四月影会</a></li>\n<li><a href=\"/posts/shooting-china/#%E8%A7%A3%E6%B5%B7%E9%BE%99\">解海龙</a></li>\n<li><a href=\"/posts/shooting-china/#%E7%8E%8B%E7%A6%8F%E6%98%A5\">王福春</a></li>\n<li><a href=\"/posts/shooting-china/#%E8%B4%BA%E5%BB%B6%E5%85%89\">贺延光</a></li>\n<li><a href=\"/posts/shooting-china/#%E7%BB%93%E8%AF%AD\">结语</a></li>\n</ul>","excerpt":"…"}}],"pathPrefix":"","first":false,"last":false,"index":4,"pageCount":12,"additionalContext":{}}}