{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/fuck-the-pm"},"html":"<p><img src=\"https://zerosoul.github.io/2015/05/22/fuck-the-pm/pm.png\" alt=\"pm expression\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>这篇文章来自于微信公众号<strong>产品小妖</strong>，具体作者是谁忘记了，如有侵权，请与我联系。文章有共鸣，讲的都是经验之谈，程序员看了会流泪，产品经理看了会沉默，其中一些场景我也碰到过，感同身受。做产品没那么简单，尤其是团队化来完成一个项目，专业素养和沟通同样重要。</p>\n<h1 id=\"正文\"><a href=\"#%E6%AD%A3%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>正文</h1>\n<h2 id=\"开始实施之前\"><a href=\"#%E5%BC%80%E5%A7%8B%E5%AE%9E%E6%96%BD%E4%B9%8B%E5%89%8D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开始实施之前</h2>\n<ul>\n<li><strong>说不清需求价值</strong>，技术问“为什么要做”的时候，支支吾吾，或者说“老板要的、运营要的”，成为了传话筒，是最Low的，相反，能有理有据的顶老板的产品经理，通常会在大家的眼中逼格满满；</li>\n<li><strong>没想到功能细节</strong>，表现为技术问细节（当然，是涉及业务的细节，不是技术实现细节）的时候，自己还没想过，现场想，被发现了，或者因为是接二手需求，并不知道、也没有去追溯这个需求的初衷；</li>\n<li><strong>帮技术评估工作量</strong>，特别是技术出身的产品经理容易犯这个错，潜台词就是“希望加活”，我评估过了，这些都能做掉的，不要给我偷懒；</li>\n<li><strong>逼着技术团队承诺</strong>，产品经理想的是，如果技术承诺了，但却做不到，这样自己就没责任了，但很多事情，在开始的时候是谁也不知道的，应该大家在一条船上同舟共济，这就是“接力跑”和“踢足球”在交棒/传球之后的区别。</li>\n</ul>\n<h2 id=\"实施过程中\"><a href=\"#%E5%AE%9E%E6%96%BD%E8%BF%87%E7%A8%8B%E4%B8%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实施过程中</h2>\n<ul>\n<li><strong>做了一半改需求</strong>，scrum里的表现就是sprint内的非受迫需求变更，大家很难忍受的是产品经理自己没想清楚，而导致的劳动浪费，俗话说“没有变更就没有伤害”，碰到性子烈的就直接要干架了，当然，如果是外部市场变了，大家都可以理解；</li>\n<li><strong>开发过程中消失</strong>，你可以出差、可以开会，但是要能及时响应技术的问题，要不然，为了进度大家照着自己的想法做下去，验收的时候产品经理跑出来说“这不是我要的”，可不要怪没人理你；</li>\n<li><strong>过度关注实现细节</strong>，帮技术决定技术方案，也是技术出身的产品经理容易犯的错，越俎代庖了，会降低技术同学的积极性，渐渐的就完全打工心态了。</li>\n</ul>\n<h2 id=\"产品发布之后\"><a href=\"#%E4%BA%A7%E5%93%81%E5%8F%91%E5%B8%83%E4%B9%8B%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>产品发布之后</h2>\n<ul>\n<li><strong>发布后没有反馈</strong>，技术人员也需要从市场、用户那里获得反馈，从而知道自己做的事情产生了价值，提升成就感，做完发布，石沉大海，大家是不可能有owner感的；</li>\n<li><strong>无节奏感</strong>，让技术人员忙一阵闲一阵，发布之后再忙着研究接下来做什么，让技术人员在干死干活的高强度之后突然不知道做什么，几天后又开始要赶进度。</li>\n</ul>\n<h2 id=\"全过程都有\"><a href=\"#%E5%85%A8%E8%BF%87%E7%A8%8B%E9%83%BD%E6%9C%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>全过程都有</h2>\n<ul>\n<li><strong>优柔寡断无决断</strong>，是产品经理最要不得的品质，就是在已经讨论完毕后，大家都等着你拍板的时候“你说吧，往哪儿走我们就跟着办”，这时候你说“啊，那个，各种方案各有利弊啊，我也不知道怎么办啊，你们有什么好想法……”，你就完蛋了；</li>\n<li><strong>报喜不报忧</strong>，产品经理总想藏着掖着一些信息，比如“老板在考虑干掉这个项目”这类信息，出发点可能是好的，但，当大家通过其他途径知道了以后，互信就完全打破了，大家会觉得“你还是把我们当资源”。</li>\n</ul>","frontmatter":{"title":"程序员看了会流泪，产品经理看了会沉默","date":"2015-05-22T09:31:37.000Z","category":"它山之石","tags":["产品","互联网","转载"],"cover":"https://zerosoul.github.io/2015/05/22/fuck-the-pm/pm.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/fuck-the-pm/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li>\n<p><a href=\"/posts/fuck-the-pm/#%E6%AD%A3%E6%96%87\">正文</a></p>\n<ul>\n<li><a href=\"/posts/fuck-the-pm/#%E5%BC%80%E5%A7%8B%E5%AE%9E%E6%96%BD%E4%B9%8B%E5%89%8D\">开始实施之前</a></li>\n<li><a href=\"/posts/fuck-the-pm/#%E5%AE%9E%E6%96%BD%E8%BF%87%E7%A8%8B%E4%B8%AD\">实施过程中</a></li>\n<li><a href=\"/posts/fuck-the-pm/#%E4%BA%A7%E5%93%81%E5%8F%91%E5%B8%83%E4%B9%8B%E5%90%8E\">产品发布之后</a></li>\n<li><a href=\"/posts/fuck-the-pm/#%E5%85%A8%E8%BF%87%E7%A8%8B%E9%83%BD%E6%9C%89\">全过程都有</a></li>\n</ul>\n</li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/14-advices-for-programmer"},"html":"<p>下面是开发大牛总结的高效编程的14点经验。不管你是编程菜鸟还是资深程序员，或许都能从中得到启发。</p>\n<h1 id=\"计划\"><a href=\"#%E8%AE%A1%E5%88%92\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>计划</h1>\n<p>所谓plan,其实就是对于编程中的“设计”阶段，当然，这里的plan并不像设计那样重量级。它要求我们程序员在正式编程前最少要考虑一下下面的问题：</p>\n<ul>\n<li>你这个程序，工具或是项目的目的，究竟是用来干什么的。你只有知道做什么，要达到什么样的目的，你才能做得好，做得对。</li>\n<li>需要有什么样的功能。需要你给出来个功能表。这样可以保证我们不会遗漏了什么。</li>\n<li>准备好一些技术难题的前期调查和解决方案。不要等到开始编程的时候才去想。</li>\n</ul>\n<p>下面是你因为有“plan”而得到的好处：</p>\n<ul>\n<li>你能够清楚地明白你要做的东西长什么样？</li>\n<li>你能清楚知道你要开发的东西要干些什么事？</li>\n<li>你能够在开发工程中解决你所有可能发生的难题。</li>\n</ul>\n<h1 id=\"使用伪代码\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BC%AA%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用伪代码</h1>\n<p>伪代码是一个非常不错的方式，让你可以看到你要写得程序长什么样？</p>\n<p>一些人并不喜欢伪代码，因为他们并不想把同样的代码写两遍，一遍是伪代码，一遍是真代码。其实，这是可以理解的，因为两个copy的东西是比较不好维护的。但是我想，这是可以权衡的，如果的算法很简单，那么就不需要伪代码了，如果你的算法比较复杂，比较绕，那么，有一个伪代码提纲挈领将会是一件非常不错的事情，因为他有利于让别人从一个简单的文档来了解一个复杂的算法或系统。这就好像一个电线的布线图一样，你可以很容易地通过一个简单的文档从复杂的实现中找到头绪。</p>\n<h1 id=\"书写清楚的注释\"><a href=\"#%E4%B9%A6%E5%86%99%E6%B8%85%E6%A5%9A%E7%9A%84%E6%B3%A8%E9%87%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>书写清楚的注释</h1>\n<p>请在你的代码中书写清楚的程序注释。当然，注释不是越多越好，注释应该是简明扼要的，如果你的程序足够地清楚简单，那么注释就会显的多余。另外，注释应该是注释“原因，理由，目的”，而不是注释“是什么”。</p>\n<h1 id=\"使用自动的编辑工具\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E7%9A%84%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用自动的编辑工具</h1>\n<p>自动的编辑工具有很多，比如 Typinator，这是一个可以通过设定一些替代的简单代码来实现重复语句的快捷插入，比如你自己的签名、常用的语句等等，通过它可以设定替代的简短代码。还有其它一些代码自动完成的工具，比如一些VC的插件，还有像Source Insight这样的东西。别小看这一点点时间，如果你每天都在写代码的话，今天一点点，明天一点点，将会为你省出很多的时间。</p>\n<h1 id=\"减少代码\"><a href=\"#%E5%87%8F%E5%B0%91%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>减少代码</h1>\n<p>减少代码的数量，坚持DRY（Don’t Repeat Yourself） 和KISS（Keep It Simple &#x26; Stupid） 原则。这样可以有交物减少代码的复杂度，提高程序的易读性和可维护性，同时也能增加代码的质量</p>\n<h1 id=\"代码重用\"><a href=\"#%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码重用</h1>\n<p>DRY (don’t repeat yourself) 原则就是告诉我们需要重用现有的代码。这样，你才能够站在巨人的肩膀之上，从而可以更多的关注和自己所要处理业务的逻辑。编程的最高境界就是写出来的代码是可能被重用的，重用和泛型这是编程里始终在追求的目标。</p>\n<h1 id=\"代码重构\"><a href=\"#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码重构</h1>\n<p>一些老的代码可能已经不合时宜了，比较以前老的C++的STL库在多线程下可能会出现很多问题。所以，我们自己的代码也是一样的，每过一段时间，我们需要把这些代码回收再利用，这就是软件的重构。重构代码所追求的并不是要提供更多的功能，而是让老的代码更有生命力，让老的代码跟上时代，更具扩展性，灵活性。</p>\n<h1 id=\"使用设计模式\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用设计模式</h1>\n<p>设计模式是一种从代码级解决某一些问题的方法论。这个世界上有很多很多的设计模式，比如MVC，单实例，工厂，观察者等等，等等。使用好的设计模式可以让你的代码更具重用和扩展性。</p>\n<h1 id=\"使用程序框架framework\"><a href=\"#%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6framework\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用程序框架Framework</h1>\n<p>Frameworks 是一份给程序员的礼物，他们帮助你完成了很多很细节的事情，他们有可能是一个lib库，你需要进行简单的拼装，一个几乎完成了的软件框架就已形成。这是一个能够给开发工作提速的东西。只要上网随便搜一搜，你可以看到太多太多的框架了。形形色色，几乎都是开源社区贡献的。</p>\n<h1 id=\"泛型编程\"><a href=\"#%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>泛型编程</h1>\n<p>如果抽像出一些程序中相似的东西，然后把这些相似的东西用一个标准的东西实现，这也是编程所追求的最高境界之一，像诸如C++中的STL之类的东西就是此类东西的最佳体现。灵活之及，几乎都快放之四海皆准了。</p>\n<h1 id=\"使用开源的代码\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用开源的代码</h1>\n<p>这个世界上有太多太多开源的代码了。学会利用他们可以让你更节省时间和精力，因为我们完全没有必要把相当的东西实现若干次，学会使用开源的代码不但是一个学习的过程，同样也是一个增加编程效率的事情。</p>\n<h1 id=\"完善开发环境\"><a href=\"#%E5%AE%8C%E5%96%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完善开发环境</h1>\n<p>开发环境非常重要，因为好的开发环境可以让你事倍功半。他们可以让你不需要关注别的东西，比如，我曾看过某程序员在调整编辑器的字体和高亮上花费了不少工夫。是的，这是值得肯定了，只有把开发环境变得舒服，才能让自己更好的编程。</p>\n<h1 id=\"使用调试器\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E5%99%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用调试器</h1>\n<p>学会使用调试器来调试代码，单步跟踪，变量值跟踪，内存，堆栈等等。熟练地使用调试器可以让你更好的查找程序的问题，以得到最优的代码。</p>\n<h1 id=\"使用版本管理工具\"><a href=\"#%E4%BD%BF%E7%94%A8%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用版本管理工具</h1>\n<p>版本管理工具应该是任何程序员都应该要去学会使用的东西，特别在一个团队中，如何管理程序的不同版本，如何维护，存放代码，版本管理工具绝对是开发过程中不可少的东西。其意义绝对不只代码备份和共享那么简单。</p>","frontmatter":{"title":"程序员高效编程的14点建议","date":"2013-11-03T09:31:37.000Z","category":"它山之石","tags":["技术","编程","转载"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/14-advices-for-programmer/#%E8%AE%A1%E5%88%92\">计划</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E4%BC%AA%E4%BB%A3%E7%A0%81\">使用伪代码</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%B9%A6%E5%86%99%E6%B8%85%E6%A5%9A%E7%9A%84%E6%B3%A8%E9%87%8A\">书写清楚的注释</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E7%9A%84%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7\">使用自动的编辑工具</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E5%87%8F%E5%B0%91%E4%BB%A3%E7%A0%81\">减少代码</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8\">代码重用</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84\">代码重构</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F\">使用设计模式</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6framework\">使用程序框架Framework</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B\">泛型编程</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E4%BB%A3%E7%A0%81\">使用开源的代码</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E5%AE%8C%E5%96%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">完善开发环境</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E5%99%A8\">使用调试器</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\">使用版本管理工具</a></li>\n</ul>","excerpt":"下面是开发大牛总结的高效编程的14点经验。不管你是编程菜鸟还是资深程序员，或许都能从中得到启发。 计划 所谓plan,其实就是对于编程中的“设计”阶段，当然，这里的plan…"}},{"node":{"fields":{"slug":"/posts/12-goals-for-developer"},"html":"<h1 id=\"概述\"><a href=\"#%E6%A6%82%E8%BF%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概述</h1>\n<p>对程序员们来说挑战自我非常重要，要么不断创新，要么技术停滞不前。新年伊始，我整理了12个月的目标，每个目标都是对技术或个人能力的挑战，而且可以年复一年循环使用。</p>\n<ol>\n<li>变得有耐心</li>\n<li>保持健康</li>\n<li>拥抱变化带来的不适应</li>\n<li>学习一门新的编程语言</li>\n<li>自动化</li>\n<li>学习更多数学知识</li>\n<li>关注安全</li>\n<li>备份你的数据</li>\n<li>学习更多理论知识</li>\n<li>接触艺术和人文</li>\n<li>向新的软件学习</li>\n<li>完成一个自己的项目</li>\n</ol>\n<p>接下来对这些建议逐个介绍。</p>\n<h1 id=\"变得有耐心\"><a href=\"#%E5%8F%98%E5%BE%97%E6%9C%89%E8%80%90%E5%BF%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>变得有耐心</h1>\n<p>程序员们会担心锻炼耐心付出的努力得不到应有的回报。其实，培养耐心只要付出很小的投入就能够得到相对而言很大的收获。下面是开始锻炼耐心可以尝试的一个列表，只要全身心投入其中任意一项，都可以在一个月左右脱离门外汉（成为有经验的新手）的阶段：</p>\n<p>烹饪、徒步、滑雪、天文、慢跑、木工、武术、舞蹈</p>\n<h1 id=\"保持健康\"><a href=\"#%E4%BF%9D%E6%8C%81%E5%81%A5%E5%BA%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>保持健康</h1>\n<p>程序员通常久坐少动，因此在日常工作中会面临健康问题，但通常都被我们忽略了。一年中花整整一个月来调整你的生活习惯、饮食和生活环境，这会促使你养成持久、健康的生活习惯。每年去一趟诊所检查血压、胆固醇和血糖，看看这些指标最近有什么变化。如果你的手腕开始疼痛或者已经疼了很久，马上停掉手上的工作开始与“鼠标手”（重复性劳损）作战。注意你的坐姿，尤其是肩膀和脖子。我使用了矫姿器来帮助治疗。</p>\n<p>跟踪你的体重、摄入以及燃烧的卡路里。如果有必要，可以改变生活方式以养成健康的饮食习惯和减肥。</p>\n<p>参考文章：<a href=\"http://blog.jobbole.com/485/\">《程序员的常见健康问题》</a></p>\n<h1 id=\"拥抱变化带来的不适\"><a href=\"#%E6%8B%A5%E6%8A%B1%E5%8F%98%E5%8C%96%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%B8%8D%E9%80%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拥抱变化带来的不适</h1>\n<p>在我20刚出头的时候，通过观察身边年纪稍大一些的伙伴我发现有些人停滞不前而另一些则活力充沛，我试着寻找背后的原因。答案就是舒适感。舒适会让技术停滞不前。当找到一个能够为我所用的系统时，我们会一直使用它。但技术是不断进步的，而那些停留在舒适区的人永远不会意识到这些进步能够为他们带来好处。不破不立，要让自己适应不舒适的感觉。</p>\n<p>下面列出的事情一开始可能会让你感到不适应：</p>\n<ul>\n<li>使用德沃夏克键盘</li>\n<li>使用vim替代emacs，反之亦然</li>\n<li>不使用鼠标</li>\n<li>使用不同的窗口管理器</li>\n<li>喝清咖啡不加奶油和糖，或者喝清茶</li>\n<li>尝试一个月“流行且无聊的新事物”</li>\n<li>一个星期中有一天不开手机</li>\n<li>学习使用一种可以单手输入的设备</li>\n<li>尝试一个不同的操作系统</li>\n<li>一个星期中有一天不上网</li>\n<li>试着对饮食加以限制：尝试吃素，成为纯素食主义者，不吃乳制品，等等</li>\n<li>每天吃一种你不喜欢的食物</li>\n<li>将你习惯使用的胳膊用绷带绑起来</li>\n<li>学习用你不习惯的那只手写字</li>\n<li>开一个博客</li>\n<li>参加公共演讲</li>\n<li>一个月听一种你不喜欢的音乐</li>\n<li>去医院或退休家庭护理做志愿者</li>\n<li>一个星期有一天快生活</li>\n<li>去一个与自己文化或语言不同的国家旅行</li>\n<li>读一篇广受好评但却不是你喜欢题材的小说</li>\n<li>看一场广受好评但却不是你喜欢风格的电影或演出</li>\n<li>学会用变速杆（手动）开车</li>\n<li>反对你相信的一些事情</li>\n</ul>\n<p>在一个月的尝试之后，你可以决定是否继续采用新方式，或者找到新方式中好的经验与原有方式的结合点。例如，在我从使用了10年的emacs转向vim时，我会为插入模式设置emacs风格快捷键从而继续使用vim。</p>\n<p>参考：<a href=\"http://blog.jobbole.com/10250/\">《25个Vim教程资源》</a></p>\n<h1 id=\"学习一门新的编程语言\"><a href=\"#%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E6%96%B0%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>学习一门新的编程语言</h1>\n<p>编程语言起起落落。如果只了解一门语言，程序员的解决问题能力以及职业前景都会因此受到限制。花上整整一个月时间吸收一门新语言或者一个新的编程范式，并用它写一个小程序。</p>\n<p>下面是一些可以学习但不是非常主流的编程语言：</p>\n<p>Racket、 Haskell、Scala、Erlang、Clojure、SML/NJOCaml、Squeak、Prolog、Datalog.</p>\n<p>如果你无所不知，那么你可以实现一门新的编程语言。</p>\n<h1 id=\"自动化\"><a href=\"#%E8%87%AA%E5%8A%A8%E5%8C%96\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自动化</h1>\n<p>程序员拥有最强大的待开发技能就是将虚拟和现实自动化的能力。如果你从来没有造过一个机器人，那么去做一个吧。至少学会使用<a href=\"http://www.amazon.com/gp/product/B001USHRYI/ref=as_li_ss_tl?ie=UTF8&#x26;tag=ucmbread-20&#x26;linkCode=as2&#x26;camp=1789&#x26;creative=390957&#x26;creativeASIN=B001USHRYI\">Lego Mindstorms</a>或者玩一玩<a href=\"http://www.arduino.cc/\">Arduino board</a>。</p>\n<p>检查一下你每天的任务，看看其中有哪些可以完全或者部分自动化。自动化在家庭生活里已经有了长足的进步，甚至可以像<a href=\"http://www.insteon.net/\">Insteon</a>那样对系统进行DIY。</p>\n<p>投资一个月的时间来进行自动化：</p>\n<ul>\n<li>为频繁进行的工作编写自动化shell脚本</li>\n<li>编写shell脚本帮助写作</li>\n<li>学会如何使用<a href=\"http://linuxtools-rst.readthedocs.io/zh_CN/latest/tool/crontab.html\">cron</a>工具</li>\n<li>改造橱柜灯由感应控制</li>\n<li>尽可能地用无线替代有线</li>\n<li>停止手动同步：将信息存到云端</li>\n<li>通过你的服务器控制家里的空调</li>\n<li>安装数字内部通话系统，儿童监控系统</li>\n<li>让咖啡机自动打开</li>\n<li>为宠物安装自动给水槽</li>\n<li>为宠物安装自动感应门</li>\n</ul>\n<h1 id=\"学习更多数学知识\"><a href=\"#%E5%AD%A6%E4%B9%A0%E6%9B%B4%E5%A4%9A%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>学习更多数学知识</h1>\n<p>计算机科学本质上讲是数学的一个学科。好的数学家中间会产出优秀的程序员。不要让你的数学能力丧失殆尽。</p>\n<p>考虑每年花一个月时间复习列表中的一项：</p>\n<p>逻辑学、离散数学、微积分、概率论、统计学、抽象代数、数论、范畴论、偏序理论 （<a href=\"http://blog.jobbole.com/444/\">《数学是成就卓越开发人员的必备技能》</a>）</p>\n<h1 id=\"关注安全\"><a href=\"#%E5%85%B3%E6%B3%A8%E5%AE%89%E5%85%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>关注安全</h1>\n<p>很少有程序员具备好的安全习惯。如果你对自己的数字安全很在意，你就会对你写的代码安全性更加关心。确保在每个站点都使用了唯一的高安全系数密码。使用加密的密码管理器来管理你的密码，例如PasswordSafe或者KeePassX。如果你还没有对整个磁盘加密，留出时间完成它。（在Mac上可以轻松完成）</p>\n<p>每年都要研究过去12个月中前10位的安全漏洞。他们是如何发生的？在编程中需要怎么做能够避免在你的代码中出现这些漏洞？</p>\n<p>下面是另外一些你需要尝试的安全任务：</p>\n<ul>\n<li>在Apache中加入SSL验证</li>\n<li>使用RSA或AES实现密码系统</li>\n<li>试着破译你的无线网络密码</li>\n<li>用WireShark侦听你的网络通讯</li>\n<li>设置基于密钥的无密码ssh登录</li>\n<li>自己运行nmap；配置你的防火墙</li>\n<li>建立端口扫描</li>\n<li>为USB驱动器加密</li>\n<li>监控日志文件</li>\n<li>设置cron任务定期更新你的程序</li>\n</ul>\n<p><strong>注：nmap：linux下的网络扫描和嗅探工具包</strong></p>\n<h1 id=\"备份你的数据\"><a href=\"#%E5%A4%87%E4%BB%BD%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>备份你的数据</h1>\n<p>每年花一些时间检查你的备份策略。花一个月时间将备份花费的时间减到最小。对重要文件使用异地远程仓库进行版本控制。</p>\n<h1 id=\"学习更多理论知识\"><a href=\"#%E5%AD%A6%E4%B9%A0%E6%9B%B4%E5%A4%9A%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>学习更多理论知识</h1>\n<p>计算机科学有着丰富的理论基础。 了解最新进展的同时还要加强对经典开发理论的掌握。</p>\n<p>每年在下列主题上花一个月时间：</p>\n<ul>\n<li>形式语言</li>\n<li>自动机与可计算性理论</li>\n<li>计算复杂性理论</li>\n<li>形式化方法</li>\n<li>语义学</li>\n<li>算法与数据结构</li>\n</ul>\n<p>名词解释：<br>\n形式语言：按一定规律构成的句子或符号串的有限或无限的集合。<br>\n自动机：是有线状态机（FSM）的数学模型。<br>\n可计算性理论：研究计算的可行性和函数算法的理论。又称算法理论。它是算法设计与分析的基础，也是计算机科学的理论基础。<br>\n计算复杂性理论：计算复杂性理论是理论计算机科学的分支学科，使用数学方法对计算中所需的各种资源的耗费作定量的分析，并研究各类问题之间在计算复杂程度上的相互关系和基本性质，是算法分析的理论基础。<br>\n形式化方法：在逻辑科学中是指分析、研究思维形式结构的方法。<br>\n语义学：研究自然语言中词语意义的学科。也可以指对逻辑形式系统中符号解释的研究。</p>\n<p>对于刚起步的程序员，可以先看一看下列文章：</p>\n<ul>\n<li>用Haskell编写CEK风格的解析器（或语义分析器）</li>\n<li>通过推导进行语法解析</li>\n<li>遗失的方法：如何对Okasaki的红黑树执行删除</li>\n<li>通过推导使用Scheme进行正则表达式模式匹配</li>\n<li>将正则表示转换成非确定性自动机（NFA）</li>\n</ul>\n<p>注：<br>\nCEK：CEK机器是由Matthias Felleisen和Dan Friedman开发的λ-演算的力学模型。<br>\nHaskell：一种纯函数式编程语言，以美国数学家Haskell Brooks Curry命名。</p>\n<h1 id=\"接触艺术和人文\"><a href=\"#%E6%8E%A5%E8%A7%A6%E8%89%BA%E6%9C%AF%E5%92%8C%E4%BA%BA%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>接触艺术和人文</h1>\n<p>工程师往往轻视艺术。他们没有意识到艺术和人文是基础升华的重要因素。史蒂夫·乔布斯乐于指出将技术与人文结合的重要性，事实也却是如此。</p>\n<p>艺术和设计原则同样适用于人和计算机之间的交互。不要忽视这些原则。艺术和人文的训练让直觉更加敏锐，而这方面的练习是难以用数字来计量。工程师需要知道如何衡量那些他们不能计量的事物，而不是只是统计他们可以计量的内容。</p>\n<p>每年至少有一个月学习下面列出的主题：工业设计、哲学、、摄影、绘画、素描、音乐及音乐理论、电影、文学、社会科学同样会对计算机科学家有很大帮助，尤其是经济学和哲学。</p>\n<h1 id=\"向新的软件学习\"><a href=\"#%E5%90%91%E6%96%B0%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>向新的软件学习</h1>\n<p>一个为自己的软件寻找灵感的好办法就是向新的或新型应用程序学习。例如，如果你从来没有尝试过3D建模软件，可以尝试Blender。抑或是，如果你从来没有接触过LaTeX，请真诚地试着去了解它。</p>\n<p>在学习过程中，请注意你喜欢什么和讨厌什么。真诚地问自己，这些观察到的内容是否在你的软件中存在。在工作中很难看到自己的缺点，但发现别人的不足却很容易。天下没有哪个父母认为自己的孩子长得难看。请学习看到自己作品的不足。</p>\n<h1 id=\"完成一个自己的项目\"><a href=\"#%E5%AE%8C%E6%88%90%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完成一个自己的项目</h1>\n<p>如果你整天为别人写代码，那么为自己写程序能让你记得当初为什么会成为程序员。每年为自己选择的项目分配一个月的时间，完成核心功能，将其开源发布。</p>\n<h1 id=\"文章来源声明\"><a href=\"#%E6%96%87%E7%AB%A0%E6%9D%A5%E6%BA%90%E5%A3%B0%E6%98%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>文章来源声明</h1>\n<p>转载自伯乐译文：<a href=\"http://blog.jobbole.com/11590/\">http://blog.jobbole.com/11590/</a></p>","frontmatter":{"title":"为程序员量身定制的12个目标","date":"2013-03-18T09:31:37.000Z","category":"技术","tags":["技术","成长","转载"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/12-goals-for-developer/#%E6%A6%82%E8%BF%B0\">概述</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%8F%98%E5%BE%97%E6%9C%89%E8%80%90%E5%BF%83\">变得有耐心</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E4%BF%9D%E6%8C%81%E5%81%A5%E5%BA%B7\">保持健康</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E6%8B%A5%E6%8A%B1%E5%8F%98%E5%8C%96%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%B8%8D%E9%80%82\">拥抱变化带来的不适</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%AD%A6%E4%B9%A0%E4%B8%80%E9%97%A8%E6%96%B0%E7%9A%84%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80\">学习一门新的编程语言</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E8%87%AA%E5%8A%A8%E5%8C%96\">自动化</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%AD%A6%E4%B9%A0%E6%9B%B4%E5%A4%9A%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86\">学习更多数学知识</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%85%B3%E6%B3%A8%E5%AE%89%E5%85%A8\">关注安全</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%A4%87%E4%BB%BD%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE\">备份你的数据</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%AD%A6%E4%B9%A0%E6%9B%B4%E5%A4%9A%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86\">学习更多理论知识</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E6%8E%A5%E8%A7%A6%E8%89%BA%E6%9C%AF%E5%92%8C%E4%BA%BA%E6%96%87\">接触艺术和人文</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%90%91%E6%96%B0%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%AD%A6%E4%B9%A0\">向新的软件学习</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E5%AE%8C%E6%88%90%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE\">完成一个自己的项目</a></li>\n<li><a href=\"/posts/12-goals-for-developer/#%E6%96%87%E7%AB%A0%E6%9D%A5%E6%BA%90%E5%A3%B0%E6%98%8E\">文章来源声明</a></li>\n</ul>","excerpt":"概述 对程序员们来说挑战自我非常重要，要么不断创新，要么技术停滞不前。新年伊始，我整理了1…"}}],"pathPrefix":"tags/转载","first":true,"last":true,"index":1,"pageCount":1,"additionalContext":{"total":3,"tag":"转载"}}}