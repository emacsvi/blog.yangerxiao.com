{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/react-notes"},"html":"","frontmatter":{"title":"备忘：React","date":"2018-04-12T12:32:58.000Z","category":"技术","tags":["react","备忘","面试"],"cover":null},"tableOfContents":"","excerpt":""}},{"node":{"fields":{"slug":"/posts/javascript-notes"},"html":"","frontmatter":{"title":"备忘：Javascript","date":"2018-04-09T12:32:58.000Z","category":"技术","tags":["javascript","备忘","面试"],"cover":null},"tableOfContents":"","excerpt":""}},{"node":{"fields":{"slug":"/posts/html-notes"},"html":"<h1 id=\"doctype作用？标准模式与混杂模式如何区分？两种模式有何意义\"><a href=\"#doctype%E4%BD%9C%E7%94%A8%EF%BC%9F%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F%E5%A6%82%E4%BD%95%E5%8C%BA%E5%88%86%EF%BC%9F%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F%E6%9C%89%E4%BD%95%E6%84%8F%E4%B9%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOCTYPE作用？标准模式与混杂模式如何区分？两种模式有何意义?</h1>\n<p>告诉浏览器使用哪个版本的HTML规范来渲染文档。DOCTYPE不存在或形式不正确会导致HTML文档以混杂模式呈现。\n标准模式（Standards mode）以浏览器支持的最高标准运行；混杂模式（Quirks mode）中页面是一种比较宽松的向后兼容的方式显示。</p>\n<h1 id=\"html5为什么只需要写-doctype-html？\"><a href=\"#html5%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AA%E9%9C%80%E8%A6%81%E5%86%99-doctype-html%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML5为什么只需要写 <!DOCTYPE HTML>？</h1>\n<p>HTML5不基于SGML（Standard Generalized Markup Language 标准通用标记语言），因此不需要对DTD（DTD 文档类型定义）进行引用，但是需要DOCTYPE来规范浏览器行为。</p>\n<p>HTML4.01基于SGML，所以需要引用DTD。才能告知浏览器文档所使用的文档类型，如下：\n<code class=\"language-text\">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</code></p>\n<h1 id=\"行内元素有哪些？块级元素？-空void元素？\"><a href=\"#%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%EF%BC%9F-%E7%A9%BAvoid%E5%85%83%E7%B4%A0%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>行内元素有哪些？块级元素？ 空(void)元素？</h1>\n<p>行内元素：<code class=\"language-text\">a span img input select</code>\n块级元素：<code class=\"language-text\">div ul ol li dl dt dd h1 p</code>\n空元素：<code class=\"language-<br\"> &lt;hr</code></p>\n<h1 id=\"页面导入样式时，使用link和import有什么区别？\"><a href=\"#%E9%A1%B5%E9%9D%A2%E5%AF%BC%E5%85%A5%E6%A0%B7%E5%BC%8F%E6%97%B6%EF%BC%8C%E4%BD%BF%E7%94%A8link%E5%92%8Cimport%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>页面导入样式时，使用link和@import有什么区别？</h1>\n<p>相同：都是外部引用CSS方式，\n不同：</p>\n<ul>\n<li>link是xhtml标签，除了加载css外，还可以定义rss等其他资源；@import属于css范畴，只能加载css</li>\n<li>link引用css时候，页面载入时同时加载；@import需要在页面完全加载以后加载，而且@import被引用的css会等到引用它的css文件被加载完才加载</li>\n<li>link是xhtml标签，无兼容问题；@import是在css2.1提出来的，低版本的浏览器不支持</li>\n<li>link支持使用javascript控制去改变样式，而@import不支持</li>\n<li>link方式的样式的权重高于@import的权重</li>\n<li>import在html使用时候需要<code class=\"language-text\">&lt;style type=&quot;text/css&quot;&gt;</code>标签包裹</li>\n</ul>\n<h1 id=\"html语义化理解\"><a href=\"#html%E8%AF%AD%E4%B9%89%E5%8C%96%E7%90%86%E8%A7%A3\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML语义化理解</h1>\n<ul>\n<li>去掉样式也能够让页面呈现出清晰的结构。</li>\n<li>有助于爬虫抓取更多的信息，爬虫依赖于标签来确定上下文和各个关键字的权重，有利于SEO。</li>\n<li>提高可读性，有利于维护。</li>\n</ul>\n<h1 id=\"cookies，sessionstorage和localstorage的区别？\"><a href=\"#cookies%EF%BC%8Csessionstorage%E5%92%8Clocalstorage%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cookies，sessionStorage和localStorage的区别？</h1>\n<p>相同：都是保存在浏览器端，且遵循同源策略\n不同：</p>\n<ul>\n<li>cookies在浏览器和服务器间来回传递，而sessionstorage和localstorage不会自动把数据发给服务器，仅在本地保存。</li>\n<li>存储大小的限制不同。cookie保存的数据很小，不能超过4k，而sessionstorage和localstorage保存的数据大，可达到5M。</li>\n<li>数据的有效期不同。cookie在设置的过期时间之前一直有效，即使窗口或者浏览器关闭。sessionstorage仅在浏览器窗口关闭之前有效。localstorage始终有效，窗口和浏览器关闭也一直保存，用作长久数据保存。</li>\n<li>作用域不同。cookie在所有的同源窗口都是共享；sessionstorage不在不同的浏览器共享，即使同一页面；localstorage在所有同源窗口都是共享</li>\n</ul>\n<h1 id=\"title与h1的区别、b与strong的区别、i与em的区别？\"><a href=\"#title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81b%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81i%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>title与h1的区别、b与strong的区别、i与em的区别？</h1>\n<ul>\n<li>title属性没有明确意义，只表示标题；h1表示层次明确的标题，对页面信息的抓取也有很大的影响</li>\n<li>strong标明重点内容，语气加强含义；b是无意义的视觉表示</li>\n<li>em强调文本；i是斜体，是无意义的视觉表示</li>\n<li>视觉标签：<code class=\"language-text\">b i u s</code>，着重视觉。</li>\n<li>语义标签：<code class=\"language-text\">strong em ins del code</code>，着重语义。</li>\n</ul>","frontmatter":{"title":"备忘：HTML","date":"2018-03-09T12:32:58.000Z","category":"技术","tags":["html","备忘","面试"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/html-notes/#doctype%E4%BD%9C%E7%94%A8%EF%BC%9F%E6%A0%87%E5%87%86%E6%A8%A1%E5%BC%8F%E4%B8%8E%E6%B7%B7%E6%9D%82%E6%A8%A1%E5%BC%8F%E5%A6%82%E4%BD%95%E5%8C%BA%E5%88%86%EF%BC%9F%E4%B8%A4%E7%A7%8D%E6%A8%A1%E5%BC%8F%E6%9C%89%E4%BD%95%E6%84%8F%E4%B9%89\">DOCTYPE作用？标准模式与混杂模式如何区分？两种模式有何意义?</a></li>\n<li><a href=\"/posts/html-notes/#html5%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AA%E9%9C%80%E8%A6%81%E5%86%99-doctype-html%EF%BC%9F\">HTML5为什么只需要写 &#x3C;!DOCTYPE HTML>？</a></li>\n<li><a href=\"/posts/html-notes/#%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0%E6%9C%89%E5%93%AA%E4%BA%9B%EF%BC%9F%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%EF%BC%9F-%E7%A9%BAvoid%E5%85%83%E7%B4%A0%EF%BC%9F\">行内元素有哪些？块级元素？ 空(void)元素？</a></li>\n<li><a href=\"/posts/html-notes/#%E9%A1%B5%E9%9D%A2%E5%AF%BC%E5%85%A5%E6%A0%B7%E5%BC%8F%E6%97%B6%EF%BC%8C%E4%BD%BF%E7%94%A8link%E5%92%8Cimport%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F\">页面导入样式时，使用link和@import有什么区别？</a></li>\n<li><a href=\"/posts/html-notes/#html%E8%AF%AD%E4%B9%89%E5%8C%96%E7%90%86%E8%A7%A3\">HTML语义化理解</a></li>\n<li><a href=\"/posts/html-notes/#cookies%EF%BC%8Csessionstorage%E5%92%8Clocalstorage%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\">cookies，sessionStorage和localStorage的区别？</a></li>\n<li><a href=\"/posts/html-notes/#title%E4%B8%8Eh1%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81b%E4%B8%8Estrong%E7%9A%84%E5%8C%BA%E5%88%AB%E3%80%81i%E4%B8%8Eem%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\">title与h1的区别、b与strong的区别、i与em的区别？</a></li>\n</ul>","excerpt":"DOCTYPE作用？标准模式与混杂模式如何区分？两种模式有何意义? 告诉浏览器使用哪个版本的HTML规范来渲染文档。DOCTYPE不存在或形式不正确会导致HTML文档以混杂模式呈现。\n标准模式（Standards mode）以浏览器支持的最高标准运行；混杂模式（Quirks mode…"}},{"node":{"fields":{"slug":"/posts/nodejs-notes"},"html":"","frontmatter":{"title":"备忘：Node.js","date":"2018-03-09T12:32:58.000Z","category":"技术","tags":["node.js","备忘","面试"],"cover":null},"tableOfContents":"","excerpt":""}},{"node":{"fields":{"slug":"/posts/php-notes"},"html":"","frontmatter":{"title":"备忘：PHP","date":"2018-02-19T12:32:58.000Z","category":"技术","tags":["php","备忘","面试"],"cover":null},"tableOfContents":"","excerpt":""}},{"node":{"fields":{"slug":"/posts/the-non-designers-design-book"},"html":"<h1 id=\"4大排版原则\"><a href=\"#4%E5%A4%A7%E6%8E%92%E7%89%88%E5%8E%9F%E5%88%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4大排版原则</h1>\n<p>亲密性、对齐、对比、重复。这4个原则是可以打破的，但绝对不可以被忽视，打破规则之前你必须知道规则是什么。</p>\n<h2 id=\"亲密性\"><a href=\"#%E4%BA%B2%E5%AF%86%E6%80%A7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>亲密性</h2>\n<p>含义：将相关项组织在一起。在一个页面上，位置接近就意味存在着关联。因此相关的项应当靠近，归组在一起。</p>\n<p>作用：分组，留白。</p>\n<p>方法：</p>\n<ul>\n<li>如果页面太过拥挤，那就适当缩小字号后再将段落拉开，然后通过添加编号或者通过首字增大将区分得更明显；</li>\n<li>当条目比较多时，将内容分栏或者列表；</li>\n<li>通过设置相同的颜色，观众可以自然而然地从首字读到后面的句子。</li>\n</ul>\n<h2 id=\"对齐\"><a href=\"#%E5%AF%B9%E9%BD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>对齐</h2>\n<p>含义：每个元素都应当与页面上的另一个元素有某种视觉联系。</p>\n<p>原则：</p>\n<ul>\n<li>一般情况下，页面上只使用一种文本对齐。但若想在同一页面上同时右对齐和左对齐文本，一定要让这些文本以某种方式对齐！</li>\n<li>如果设计中的对齐很明确，那么可以有意识打破对齐，但一定要表现出这是有意的。</li>\n</ul>\n<p>方法：找准一条明确的对齐线，并用它来对齐。</p>\n<p>分类：</p>\n<ul>\n<li>\n<p>右对齐/左对齐：充分利用亲密性，并结合明确的右对齐或左对齐。</p>\n</li>\n<li>\n<p>居中对齐</p>\n<ul>\n<li>文本居中，文本块不居中；</li>\n<li>将文本放在页面上方，增加紧张性；</li>\n<li>在居中布局中设置一种非常随意、有趣的字体。</li>\n</ul>\n</li>\n<li>\n<p>其他对齐</p>\n<ul>\n<li>文本行水平摆放，则按其基线对齐；</li>\n<li>如有图片元素，将其边界与页面边界对齐；</li>\n<li>与版心线对齐；</li>\n<li>元素之间对齐。元素之间是通过“看不见的线”实现对齐的，这些对齐参考线可以是直线或规则的曲线；</li>\n<li>对齐到网格。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"对比\"><a href=\"#%E5%AF%B9%E6%AF%94\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>对比</h2>\n<p>含义：如果页面上的元素不相同，那就干脆让它们截然不同，以吸引读者眼球。</p>\n<p>方法：首先划分层次，多打几个回车将统一层次的要点分成多个并列的条目，然后使用不同的字号区分层次，最后使用点、线、面等修饰元素突出重点。</p>\n<p>分类：</p>\n<ul>\n<li>\n<p>文字的对比</p>\n</li>\n<li>\n<p>字号对比。在字号的对比上不必保守，大胆使用强烈的字号变化效果往往更好。</p>\n</li>\n<li>\n<p>反白。反白是使用底部色块修饰文字。色块能够强烈地增大文字的视觉比重，效果非常明显。矩形色块很常见，但太平稳，而使用贴布条等图形元素来替代会更有新意。</p>\n</li>\n<li>\n<p>方向对比：</p>\n<ul>\n<li>向右上倾斜的字体产生一种前进的力量，向右下倾斜则相反；</li>\n<li>水平文字与瘦高文本列的对比；</li>\n<li>不要在角落里放有角度的字体。</li>\n</ul>\n</li>\n<li>\n<p>图片的对比：局部放大、背景黑白、虚化、局部遮盖。</p>\n</li>\n</ul>\n<h2 id=\"重复\"><a href=\"#%E9%87%8D%E5%A4%8D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>重复</h2>\n<p>让视觉要素在整个作品中重复，能够实现整个PPT风格的统一，包括统一颜色方案、字体字号、文本行距、项目符号、图表风格、对齐方式、图片风格，或者一种特别的字体。</p>\n<p>不要把重复用得太滥，而应当尽量“采用多样性实现统一”。也就是说，如果一个重复元素很明确（如一个圆），那么可以采用多种不同方式重复这个圆，而不是简单地重复同一个圆。</p>\n<h2 id=\"排版的过程\"><a href=\"#%E6%8E%92%E7%89%88%E7%9A%84%E8%BF%87%E7%A8%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>排版的过程</h2>\n<ol>\n<li>亲密性：将信息按逻辑进行分组，确定这些组之间的关系，并通过组之间的亲密性来显示这些关系。</li>\n<li>对齐：在页面上组织文本和图片时，要建立并维护明确的对齐。</li>\n<li>对比：除非你已经决定要建立一个非常协调的设计，否则就应该建立强烈对比，吸引读者的视线。</li>\n<li>重复：为建立重复，可以使用粗字体、线、装饰符号或者某种空间布局。看看哪些元素已经自然地重复，再看看是否适合加大重复力度。</li>\n</ol>","frontmatter":{"title":"阅读笔记《写给大家看的设计书》","date":"2018-02-08T09:31:37.000Z","category":"阅读笔记","tags":["设计","产品","备忘","阅读"],"cover":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/the-non-designers-design-book/#4%E5%A4%A7%E6%8E%92%E7%89%88%E5%8E%9F%E5%88%99\">4大排版原则</a></p>\n<ul>\n<li><a href=\"/posts/the-non-designers-design-book/#%E4%BA%B2%E5%AF%86%E6%80%A7\">亲密性</a></li>\n<li><a href=\"/posts/the-non-designers-design-book/#%E5%AF%B9%E9%BD%90\">对齐</a></li>\n<li><a href=\"/posts/the-non-designers-design-book/#%E5%AF%B9%E6%AF%94\">对比</a></li>\n<li><a href=\"/posts/the-non-designers-design-book/#%E9%87%8D%E5%A4%8D\">重复</a></li>\n<li><a href=\"/posts/the-non-designers-design-book/#%E6%8E%92%E7%89%88%E7%9A%84%E8%BF%87%E7%A8%8B\">排版的过程</a></li>\n</ul>\n</li>\n</ul>","excerpt":"4大排版原则 亲密性、对齐、对比、重复。这…"}},{"node":{"fields":{"slug":"/posts/css-notes"},"html":"","frontmatter":{"title":"备忘：CSS","date":"2018-02-04T12:32:58.000Z","category":"技术","tags":["css","备忘","面试"],"cover":null},"tableOfContents":"","excerpt":""}},{"node":{"fields":{"slug":"/posts/javascript-symbol"},"html":"<h1 id=\"es6第七种数据类型：symbol\"><a href=\"#es6%E7%AC%AC%E4%B8%83%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9Asymbol\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ES6第七种数据类型：Symbol</h1>\n<p>Javascript已有6种数据类型: <strong>Undefined,Null,布尔值,字符串,数值,对象</strong>。现在ES6新加入一种数据类型：Symbol。</p>\n<p>它的最大特点: <strong>独一无二</strong>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 没有参数的情况</span>\n<span class=\"token keyword\">var</span> s1 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> s2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ns1 <span class=\"token operator\">===</span> s2 <span class=\"token comment\">// false</span>\n<span class=\"token comment\">// 有参数的情况</span>\n<span class=\"token keyword\">var</span> s1 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> s2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ns1 <span class=\"token operator\">===</span> s2 <span class=\"token comment\">// false</span></code></pre>\n      </div>\n<p>这里的<code class=\"language-text\">foo</code>是该Symbol的一个描述，并非两个参数都为'foo' ，就能够使得这两个Symbol相同。</p>\n<p>作为属性名的使用</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> mySymbol <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 第一种写法</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\na<span class=\"token punctuation\">[</span>mySymbol<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 第二种写法</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>mySymbol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello!'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 第三种写法</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> mySymbol<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hello!'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 以上写法都得到同样结果</span>\na<span class=\"token punctuation\">[</span>mySymbol<span class=\"token punctuation\">]</span> <span class=\"token comment\">// \"Hello!\"</span></code></pre>\n      </div>\n<p>注意，这里不可以使用 <code class=\"language-text\">a.mySymbol = &#39;hello&#39;;</code> 来填充该属性值。因为点运算符后面总是字符串.</p>\n<h1 id=\"为什么要使用symbol\"><a href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8symbol\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>为什么要使用Symbol?</h1>\n<p>那么问题来了，为什么要使用Symbol呢？有这样一种场景：如果想区分两个属性，其实我们并不在意，这两个属性值究竟是什么，我们在意的是，这两个属性绝对要区分开来！例如:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> shapeType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> triangle<span class=\"token punctuation\">:</span> <span class=\"token string\">'Triangle'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">var</span> area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n      <span class=\"token keyword\">case</span> shapeType<span class=\"token punctuation\">.</span>triangle<span class=\"token punctuation\">:</span>\n      area <span class=\"token operator\">=</span> <span class=\"token number\">.5</span> <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> options<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> \n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">}</span> \n    <span class=\"token keyword\">return</span> area<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span>shapeType<span class=\"token punctuation\">.</span>triangle<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>这个时候，我们仅仅是想区分各种形状，因为不同的形状用不同公式来算面积。这里使用的是triangle的名字叫做<strong>Triangle</strong>，事实上我们不想对triangle去特地取个名，我们只想要区分triangle这个形状不同于任何其他形状，那么这个时候Symbol就派上用场了。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> shapeType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   triangle<span class=\"token punctuation\">:</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>也就是说，不用非要去给变量赋一个字符串的值，去区分它和别的变量的值不同，因为去给每个变量取个语义化而又不同的值是一件伤脑子的事，当我们只需要知道每个变量的值都是百分百不同，这时候就可以用Symbol。</p>","frontmatter":{"title":"ES6新增的Symbol适用场景","date":"2018-01-29T12:32:58.000Z","category":"技术","tags":["es6","javascript","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/javascript-symbol/#es6%E7%AC%AC%E4%B8%83%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9Asymbol\">ES6第七种数据类型：Symbol</a></li>\n<li><a href=\"/posts/javascript-symbol/#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8symbol\">为什么要使用Symbol?</a></li>\n</ul>","excerpt":"ES6第七种数据类型：Symbol Javascript已有6种数据类型:  Undefined,Null,布尔值,字符串,数值,对象 。现在ES6新加入一种数据类型：Symbol。 它的最大特点:  独一无二 。 这里的 是该Symbol的一个描述，并非两个参数都为'foo…"}},{"node":{"fields":{"slug":"/posts/fh-21-subsite-summary"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>参加工作五年了，一直想找个实战项目综合性地练练手：从后端到前端，从后台到前台，技术选型，开发排期，开发环境，部署环境，通通自己来搞定。这是件很有挑战性的事情，同时也可遇不可求。</p>\n<p>不知是上天的眷顾还是捉弄，前段时间公司有个“分站”项目立项，委任我为项目经理（第一次作为项目负责人），但人手严重不足，只给我分配一个只有一年开发经验的PHP程序员，工作态度挺好，但基础实在薄弱，时间紧，任务重，许多问题实在是不能从零开始教她，最后没办法，硬着头皮自己包揽了大部分开发任务。</p>\n<p>一个多月的加班加点的生活，最终如期并且超出预期地完成了分站项目，值得好好总结总结：不吹不黑，讲讲从前端转后端，搞定PHP项目是怎样的一种体验，无关情怀，只讲事实。总结分为两部分，第一部分介绍飞华分站这个项目，第二部分分享下对写代码这件事的思考。</p>\n<h1 id=\"飞华分站\"><a href=\"#%E9%A3%9E%E5%8D%8E%E5%88%86%E7%AB%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>飞华分站</h1>\n<p>飞华分站项目，是以省为站点单位建站与管理平台，其实就是门户网站在各个行政区域的本地化站点，有如下功能：\n后台，其实就是数据的管理，交互非常多：</p>\n<ul>\n<li>登录，注册，角色，权限控制等标配功能</li>\n<li>一个后台对应多个站点</li>\n<li>后台角色分为：超级管理员、站点管理员和站点编辑</li>\n<li>超级管理员可以编辑站点（增删改查），并拥有站点管理员和编辑的所有权限</li>\n<li>站点管理员可以管理编辑（新建，删除，重置密码等等），管理分类（增删改查），并拥有编辑的所有权限</li>\n<li>站点编辑可以编辑文章（增删改查）和手工（增删改查）</li>\n</ul>\n<p><img src=\"/images/sub_summary/fs3.login.png\" alt=\"后台登录\" title=\"后台登录\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-index.png\" alt=\"超级管理员后台首页\" title=\"超级管理员后台首页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-list.png\" alt=\"后台用户管理界面\" title=\"后台用户管理界面\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-edit.png\" alt=\"后台文章管理界面\" title=\"后台文章管理界面\"></p>\n<p>前台，纯展示页面，分为首页，列表页，详情页：</p>\n<p><img src=\"/images/sub_summary/site.index.png\" alt=\"分站前台首页\" title=\"分站前台首页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/site-list.png\" alt=\"分站前台列表页\" title=\"分站前台列表页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/site-detail.png\" alt=\"分站前台详情页\" title=\"分站前台详情页\"></p>\n<h1 id=\"改进\"><a href=\"#%E6%94%B9%E8%BF%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>改进</h1>\n<p>公司有自己的PHP框架，这么多年了，自己也或多或少地了解了这套框架的代码，有些地方已经挺老旧了，基于此套代码，我做了如下改进：</p>\n<h2 id=\"代码瘦身\"><a href=\"#%E4%BB%A3%E7%A0%81%E7%98%A6%E8%BA%AB\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码瘦身</h2>\n<p>删掉了巨量无用的代码，最终打包出的代码从70+M锐减到20+M</p>\n<h2 id=\"数据库的使用方式\"><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数据库的使用方式</h2>\n<p>mysqli ==>PDO（Medoo）</p>\n<p>PDO优势：</p>\n<ul>\n<li>\n<p>PDO真正的以底层实现的统一接口数库操作接口，不管后端使用的是何种数据库，如果代码封装好了以后，应用层调用基本上差不多的，当后端数据库更换了以后，应用层代码基本不用修改. </p>\n</li>\n<li>\n<p>支持更高级的DB特性操作，如：存储过程的调度等,mysql原生库是不支持的. </p>\n</li>\n<li>\n<p>PHP官方主推，兼容性稳定性必然要高于<code class=\"language-text\">MySQL Extension</code>,可以直接使用<code class=\"language-text\">pecl upgrade pdo</code> 命令升级. </p>\n</li>\n<li>\n<p>可以防止SQL注入，确保数据库更加安全</p>\n<p>真正感到爽的是：可以以OO方式来存取数据，不用自己拼sql语句，减少了出错的可能性，更易维护。</p>\n</li>\n</ul>\n<h2 id=\"类库的加载方式\"><a href=\"#%E7%B1%BB%E5%BA%93%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>类库的加载方式</h2>\n<p><code class=\"language-text\">require XXX</code> ==> <code class=\"language-text\">Composer</code></p>\n<h2 id=\"开发体验\"><a href=\"#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开发体验</h2>\n<p>SVN本地提交后刷新看效果 ==> Docker本地开发</p>\n<h2 id=\"后台颜值交互\"><a href=\"#%E5%90%8E%E5%8F%B0%E9%A2%9C%E5%80%BC%E4%BA%A4%E4%BA%92\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>后台颜值&#x26;交互</h2>\n<ul>\n<li>Bootstrap-UI ==> Semantic-UI</li>\n<li>同步操作，刷新页面 ==> 异步操作，即时响应</li>\n</ul>\n<h2 id=\"同一功能，不同的实现\"><a href=\"#%E5%90%8C%E4%B8%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>同一功能，不同的实现</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">功能点</th>\n<th align=\"left\">新实现</th>\n<th align=\"left\">老实现</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">分页</td>\n<td align=\"left\">结构化<br><strong>body数据</strong></td>\n<td align=\"left\">PHP拼接HTML</td>\n</tr>\n<tr>\n<td align=\"left\">手工</td>\n<td align=\"left\">标识<br><strong>更灵活，更一致，减少了理解成本和数据库表</strong></td>\n<td align=\"left\">模块</td>\n</tr>\n<tr>\n<td align=\"left\">表单验证</td>\n<td align=\"left\">自动化、可配置<br><strong>增强了体验的同时也精简了代码</strong></td>\n<td align=\"left\">手写</td>\n</tr>\n<tr>\n<td align=\"left\">缩略图上传</td>\n<td align=\"left\">多张、可配置</td>\n<td align=\"left\">单张</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"新工具\"><a href=\"#%E6%96%B0%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新工具</h1>\n<p>为了支持以上列出的改进，经过大量的调研，引入了以下新工具：</p>\n<ul>\n<li><a href=\"https://www.docker.com/\">docker</a>：方便开发环境的搭建</li>\n</ul>\n<p>docker v.s. VM</p>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>Docker</th>\n<th>VM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启动速度</td>\n<td>秒级</td>\n<td>分钟级</td>\n</tr>\n<tr>\n<td>硬盘使用</td>\n<td>MB</td>\n<td>GB</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>接近原生</td>\n<td>弱于</td>\n</tr>\n<tr>\n<td>系统支持量</td>\n<td>单机支持上千容器</td>\n<td>一般十几个</td>\n</tr>\n</tbody>\n</table>\n<p>无论是性能、效率、还是资源占用上，比传统虚拟机都有非常明显的优势。当然，对于开发流程而言，要求不仅限于性能、效率和资源占用。 还要考虑制作、分发、部署、管理是否方便快捷、是否可以自动化。 这些通过Docker都可以让流程更高效，机器干机器干的事，人干人该干的事。 降低了应用环境的管理成本，就可以投入更多的精力到更有价值的事情上，比如<strong>需求消化</strong>，<strong>关注代码质量</strong>。 </p>\n<ul>\n<li>\n<p><a href=\"https://getcomposer.org/\">Composer</a>：方便各种PHP类库的引用</p>\n</li>\n<li>\n<p><a href=\"https://medoo.in/api/quote\">Medoo</a>：数据库连接与使用</p>\n</li>\n<li>\n<p><a href=\"https://semantic-ui.com/\">Semantic-UI</a>：后台UI快速搭建</p>\n</li>\n</ul>\n<h1 id=\"三句话\"><a href=\"#%E4%B8%89%E5%8F%A5%E8%AF%9D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三句话</h1>\n<p>也是三个原则，贯穿开发始终</p>\n<ul>\n<li>Machine Repeats,Human Creates.</li>\n<li>Simple Short Straightforward (3S原则)</li>\n<li>脱离业务场景谈技术的优劣都是耍流氓</li>\n</ul>\n<h2 id=\"环境即基础\"><a href=\"#%E7%8E%AF%E5%A2%83%E5%8D%B3%E5%9F%BA%E7%A1%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>环境即基础</h2>\n<p>搭建能提高开发效率的环境：</p>\n<ul>\n<li>docker</li>\n<li>composer</li>\n<li>semantic-ui</li>\n<li>medoo</li>\n</ul>\n<h2 id=\"代码即表达\"><a href=\"#%E4%BB%A3%E7%A0%81%E5%8D%B3%E8%A1%A8%E8%BE%BE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码即表达</h2>\n<ul>\n<li>时刻谨记：维护你代码的人是一个<strong>知道你住址的狂暴精神病患者</strong></li>\n<li>做好格式化（借助编辑器或插件，自动格式化）</li>\n<li>命名规范：类/函数/变量/数据库字段</li>\n<li>代码长度：e.g.一个函数不要超过一个屏幕</li>\n<li>\n<p>好代码本身就是最好的文档：</p>\n<blockquote>\n<p>如果你是医生，病人在请求手术前别洗手，因为那会花太多时间，你会照办吗？本该是病人说了算，但医生却绝对应该拒绝。为什么？因为医生比病人更了解感染的风险。医生如果按病人说的办，就是一种不专业的态度。 同理，程序员遵从不了解混乱代码风险的产品经理（策划）的意愿，都是不专业的做法。</p>\n</blockquote>\n</li>\n</ul>\n<p>推荐读物：\n<img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/clean-code.png\" alt=\"write clean code\" title=\"write clean code\"></p>\n<h2 id=\"思维即能力\"><a href=\"#%E6%80%9D%E7%BB%B4%E5%8D%B3%E8%83%BD%E5%8A%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思维即能力</h2>\n<p>一开始就把事情做对：<strong>CODE LESS THINK MORE</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/think-more-code.png\" alt=\"think more code less\" title=\"think more code less\"></p>\n<h1 id=\"最后\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后</h1>\n<p>在此只是提纲挈领地罗列出自己的观点，很多点都可以展开来说，比如Docker就是一个值得写一系列文章来介绍，以后有时间我在展开来讲。</p>","frontmatter":{"title":"一次项目总结","date":"2017-11-28T12:32:58.000Z","category":"技术","tags":["技术","总结","全栈","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E9%A3%9E%E5%8D%8E%E5%88%86%E7%AB%99\">飞华分站</a></li>\n<li>\n<p><a href=\"/posts/fh-21-subsite-summary/#%E6%94%B9%E8%BF%9B\">改进</a></p>\n<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E4%BB%A3%E7%A0%81%E7%98%A6%E8%BA%AB\">代码瘦身</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\">数据库的使用方式</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E7%B1%BB%E5%BA%93%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F\">类库的加载方式</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\">开发体验</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%90%8E%E5%8F%B0%E9%A2%9C%E5%80%BC%E4%BA%A4%E4%BA%92\">后台颜值&#x26;交互</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%90%8C%E4%B8%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0\">同一功能，不同的实现</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%96%B0%E5%B7%A5%E5%85%B7\">新工具</a></li>\n<li>\n<p><a href=\"/posts/fh-21-subsite-summary/#%E4%B8%89%E5%8F%A5%E8%AF%9D\">三句话</a></p>\n<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E7%8E%AF%E5%A2%83%E5%8D%B3%E5%9F%BA%E7%A1%80\">环境即基础</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E4%BB%A3%E7%A0%81%E5%8D%B3%E8%A1%A8%E8%BE%BE\">代码即表达</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%80%9D%E7%BB%B4%E5%8D%B3%E8%83%BD%E5%8A%9B\">思维即能力</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%9C%80%E5%90%8E\">最后</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/cleaning-up-your-websites-root-directory"},"html":"<p>曾几何时，只需要一个<code class=\"language-text\">favicon.ico</code>就可以满足网站的图标需求，随着移动端开发的繁荣，一个小小的图标也需要适配各种设备，虽然从牌子上区分主要就是苹果和安卓，但是一考虑到屏幕分辨率，真特么头大：</p>\n<ul>\n<li>android-chrome-144×144.png</li>\n<li>android-chrome-192×192.png</li>\n<li>android-chrome-36×36.png</li>\n<li>android-chrome-48×48.png</li>\n<li>android-chrome-72×72.png</li>\n<li>android-chrome-96×96.png</li>\n<li>apple-touch-icon-114×114.png</li>\n<li>apple-touch-icon-120×120.png</li>\n<li>apple-touch-icon-144×144.png</li>\n<li>apple-touch-icon-152×152.png</li>\n<li>apple-touch-icon-180×180.png</li>\n<li>apple-touch-icon-57×57.png</li>\n<li>apple-touch-icon-60×60.png</li>\n<li>apple-touch-icon-72×72.png</li>\n<li>apple-touch-icon-76×76.png</li>\n<li>apple-touch-icon.png</li>\n<li>apple-touch-icon-precomposed.png</li>\n<li>browserconfig.xml</li>\n<li>favicon-16×16.png</li>\n<li>favicon-194×194.png</li>\n<li>favicon-32×32.png</li>\n<li>favicon-96×96.png</li>\n<li>favicon.ico</li>\n<li>manifest.json</li>\n<li>mstile-144×144.png</li>\n<li>mstile-150×150.png</li>\n<li>mstile-310×150.png</li>\n<li>mstile-310×310.png</li>\n<li>mstile-70×70.png</li>\n<li>safari-pinned-tab.svg</li>\n</ul>\n<p>像这种生成各种图标的活儿，挺适合让机器来干：只需要给出一个最大分辨率的图，机器便能返回一个包含各种图标的资源包。我们只需要把这些图放到特定某一位置然后配置下<code class=\"language-text\">nginx</code>，万事大吉。根据这个想法，试着Google了一下，果然有个利器，而且是在线免费生成：<a href=\"http://realfavicongenerator.net/\">Favicon Generator. For real.</a>。</p>\n<p>通过<strong>Favicon Generator</strong>生成的图标资源，不建议放在项目根目录，而是集中放到某处，比如：<code class=\"language-text\">/assets/favicons/</code>，方便管理，通过配置<code class=\"language-text\">nginx</code>达到同样效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\">\n      <pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">~</span> <span class=\"token operator\">^</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>android<span class=\"token operator\">-</span>chrome<span class=\"token operator\">|</span>apple<span class=\"token operator\">-</span>touch<span class=\"token operator\">-</span>icon<span class=\"token operator\">|</span>browserconfig<span class=\"token operator\">|</span>favicon<span class=\"token operator\">|</span>manifest<span class=\"token operator\">|</span>mstile<span class=\"token operator\">|</span>safari<span class=\"token operator\">-</span>pinned<span class=\"token operator\">-</span>tab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\\<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">root</span> <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>example<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>assets<span class=\"token operator\">/</span>favicons<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这样，我的目的达到了：既能一键生成各种繁琐的图标，又清理了项目根目录，可谓一箭双雕。人生苦短，重复性的活儿交给机器，我们负责创造和下达指令。</p>","frontmatter":{"title":"清理项目根目录的各种图标","date":"2017-11-24T06:00:41.000Z","category":"技术","tags":["运维","前端","备忘"],"cover":null},"tableOfContents":"","excerpt":"曾几何时，只需要一个 就可以满足网站的图标需求，随着移动端开发的繁荣，一个小小的图标也需要适配各种设备，虽然从牌子上区分主要就是苹果和安卓，但是一考虑到屏幕分辨率，真特么头大： android-chrome-144×144.png android-chrome-192×192.png android…"}}],"pathPrefix":"tags/备忘","first":true,"last":false,"index":1,"pageCount":4,"additionalContext":{"total":35,"tag":"备忘"}}}