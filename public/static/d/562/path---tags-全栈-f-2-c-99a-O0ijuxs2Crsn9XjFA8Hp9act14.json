{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/fh-21-subsite-summary"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>参加工作五年了，一直想找个实战项目综合性地练练手：从后端到前端，从后台到前台，技术选型，开发排期，开发环境，部署环境，通通自己来搞定。这是件很有挑战性的事情，同时也可遇不可求。</p>\n<p>不知是上天的眷顾还是捉弄，前段时间公司有个“分站”项目立项，委任我为项目经理（第一次作为项目负责人），但人手严重不足，只给我分配一个只有一年开发经验的PHP程序员，工作态度挺好，但基础实在薄弱，时间紧，任务重，许多问题实在是不能从零开始教她，最后没办法，硬着头皮自己包揽了大部分开发任务。</p>\n<p>一个多月的加班加点的生活，最终如期并且超出预期地完成了分站项目，值得好好总结总结：不吹不黑，讲讲从前端转后端，搞定PHP项目是怎样的一种体验，无关情怀，只讲事实。总结分为两部分，第一部分介绍飞华分站这个项目，第二部分分享下对写代码这件事的思考。</p>\n<h1 id=\"飞华分站\"><a href=\"#%E9%A3%9E%E5%8D%8E%E5%88%86%E7%AB%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>飞华分站</h1>\n<p>飞华分站项目，是以省为站点单位建站与管理平台，其实就是门户网站在各个行政区域的本地化站点，有如下功能：\n后台，其实就是数据的管理，交互非常多：</p>\n<ul>\n<li>登录，注册，角色，权限控制等标配功能</li>\n<li>一个后台对应多个站点</li>\n<li>后台角色分为：超级管理员、站点管理员和站点编辑</li>\n<li>超级管理员可以编辑站点（增删改查），并拥有站点管理员和编辑的所有权限</li>\n<li>站点管理员可以管理编辑（新建，删除，重置密码等等），管理分类（增删改查），并拥有编辑的所有权限</li>\n<li>站点编辑可以编辑文章（增删改查）和手工（增删改查）</li>\n</ul>\n<p><img src=\"/images/sub_summary/fs3.login.png\" alt=\"后台登录\" title=\"后台登录\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-index.png\" alt=\"超级管理员后台首页\" title=\"超级管理员后台首页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-list.png\" alt=\"后台用户管理界面\" title=\"后台用户管理界面\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-edit.png\" alt=\"后台文章管理界面\" title=\"后台文章管理界面\"></p>\n<p>前台，纯展示页面，分为首页，列表页，详情页：</p>\n<p><img src=\"/images/sub_summary/site.index.png\" alt=\"分站前台首页\" title=\"分站前台首页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/site-list.png\" alt=\"分站前台列表页\" title=\"分站前台列表页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/site-detail.png\" alt=\"分站前台详情页\" title=\"分站前台详情页\"></p>\n<h1 id=\"改进\"><a href=\"#%E6%94%B9%E8%BF%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>改进</h1>\n<p>公司有自己的PHP框架，这么多年了，自己也或多或少地了解了这套框架的代码，有些地方已经挺老旧了，基于此套代码，我做了如下改进：</p>\n<h2 id=\"代码瘦身\"><a href=\"#%E4%BB%A3%E7%A0%81%E7%98%A6%E8%BA%AB\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码瘦身</h2>\n<p>删掉了巨量无用的代码，最终打包出的代码从70+M锐减到20+M</p>\n<h2 id=\"数据库的使用方式\"><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数据库的使用方式</h2>\n<p>mysqli ==>PDO（Medoo）</p>\n<p>PDO优势：</p>\n<ul>\n<li>\n<p>PDO真正的以底层实现的统一接口数库操作接口，不管后端使用的是何种数据库，如果代码封装好了以后，应用层调用基本上差不多的，当后端数据库更换了以后，应用层代码基本不用修改. </p>\n</li>\n<li>\n<p>支持更高级的DB特性操作，如：存储过程的调度等,mysql原生库是不支持的. </p>\n</li>\n<li>\n<p>PHP官方主推，兼容性稳定性必然要高于<code class=\"language-text\">MySQL Extension</code>,可以直接使用<code class=\"language-text\">pecl upgrade pdo</code> 命令升级. </p>\n</li>\n<li>\n<p>可以防止SQL注入，确保数据库更加安全</p>\n<p>真正感到爽的是：可以以OO方式来存取数据，不用自己拼sql语句，减少了出错的可能性，更易维护。</p>\n</li>\n</ul>\n<h2 id=\"类库的加载方式\"><a href=\"#%E7%B1%BB%E5%BA%93%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>类库的加载方式</h2>\n<p><code class=\"language-text\">require XXX</code> ==> <code class=\"language-text\">Composer</code></p>\n<h2 id=\"开发体验\"><a href=\"#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开发体验</h2>\n<p>SVN本地提交后刷新看效果 ==> Docker本地开发</p>\n<h2 id=\"后台颜值交互\"><a href=\"#%E5%90%8E%E5%8F%B0%E9%A2%9C%E5%80%BC%E4%BA%A4%E4%BA%92\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>后台颜值&#x26;交互</h2>\n<ul>\n<li>Bootstrap-UI ==> Semantic-UI</li>\n<li>同步操作，刷新页面 ==> 异步操作，即时响应</li>\n</ul>\n<h2 id=\"同一功能，不同的实现\"><a href=\"#%E5%90%8C%E4%B8%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>同一功能，不同的实现</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">功能点</th>\n<th align=\"left\">新实现</th>\n<th align=\"left\">老实现</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">分页</td>\n<td align=\"left\">结构化<br><strong>body数据</strong></td>\n<td align=\"left\">PHP拼接HTML</td>\n</tr>\n<tr>\n<td align=\"left\">手工</td>\n<td align=\"left\">标识<br><strong>更灵活，更一致，减少了理解成本和数据库表</strong></td>\n<td align=\"left\">模块</td>\n</tr>\n<tr>\n<td align=\"left\">表单验证</td>\n<td align=\"left\">自动化、可配置<br><strong>增强了体验的同时也精简了代码</strong></td>\n<td align=\"left\">手写</td>\n</tr>\n<tr>\n<td align=\"left\">缩略图上传</td>\n<td align=\"left\">多张、可配置</td>\n<td align=\"left\">单张</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"新工具\"><a href=\"#%E6%96%B0%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新工具</h1>\n<p>为了支持以上列出的改进，经过大量的调研，引入了以下新工具：</p>\n<ul>\n<li><a href=\"https://www.docker.com/\">docker</a>：方便开发环境的搭建</li>\n</ul>\n<p>docker v.s. VM</p>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>Docker</th>\n<th>VM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启动速度</td>\n<td>秒级</td>\n<td>分钟级</td>\n</tr>\n<tr>\n<td>硬盘使用</td>\n<td>MB</td>\n<td>GB</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>接近原生</td>\n<td>弱于</td>\n</tr>\n<tr>\n<td>系统支持量</td>\n<td>单机支持上千容器</td>\n<td>一般十几个</td>\n</tr>\n</tbody>\n</table>\n<p>无论是性能、效率、还是资源占用上，比传统虚拟机都有非常明显的优势。当然，对于开发流程而言，要求不仅限于性能、效率和资源占用。 还要考虑制作、分发、部署、管理是否方便快捷、是否可以自动化。 这些通过Docker都可以让流程更高效，机器干机器干的事，人干人该干的事。 降低了应用环境的管理成本，就可以投入更多的精力到更有价值的事情上，比如<strong>需求消化</strong>，<strong>关注代码质量</strong>。 </p>\n<ul>\n<li>\n<p><a href=\"https://getcomposer.org/\">Composer</a>：方便各种PHP类库的引用</p>\n</li>\n<li>\n<p><a href=\"https://medoo.in/api/quote\">Medoo</a>：数据库连接与使用</p>\n</li>\n<li>\n<p><a href=\"https://semantic-ui.com/\">Semantic-UI</a>：后台UI快速搭建</p>\n</li>\n</ul>\n<h1 id=\"三句话\"><a href=\"#%E4%B8%89%E5%8F%A5%E8%AF%9D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三句话</h1>\n<p>也是三个原则，贯穿开发始终</p>\n<ul>\n<li>Machine Repeats,Human Creates.</li>\n<li>Simple Short Straightforward (3S原则)</li>\n<li>脱离业务场景谈技术的优劣都是耍流氓</li>\n</ul>\n<h2 id=\"环境即基础\"><a href=\"#%E7%8E%AF%E5%A2%83%E5%8D%B3%E5%9F%BA%E7%A1%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>环境即基础</h2>\n<p>搭建能提高开发效率的环境：</p>\n<ul>\n<li>docker</li>\n<li>composer</li>\n<li>semantic-ui</li>\n<li>medoo</li>\n</ul>\n<h2 id=\"代码即表达\"><a href=\"#%E4%BB%A3%E7%A0%81%E5%8D%B3%E8%A1%A8%E8%BE%BE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码即表达</h2>\n<ul>\n<li>时刻谨记：维护你代码的人是一个<strong>知道你住址的狂暴精神病患者</strong></li>\n<li>做好格式化（借助编辑器或插件，自动格式化）</li>\n<li>命名规范：类/函数/变量/数据库字段</li>\n<li>代码长度：e.g.一个函数不要超过一个屏幕</li>\n<li>\n<p>好代码本身就是最好的文档：</p>\n<blockquote>\n<p>如果你是医生，病人在请求手术前别洗手，因为那会花太多时间，你会照办吗？本该是病人说了算，但医生却绝对应该拒绝。为什么？因为医生比病人更了解感染的风险。医生如果按病人说的办，就是一种不专业的态度。 同理，程序员遵从不了解混乱代码风险的产品经理（策划）的意愿，都是不专业的做法。</p>\n</blockquote>\n</li>\n</ul>\n<p>推荐读物：\n<img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/clean-code.png\" alt=\"write clean code\" title=\"write clean code\"></p>\n<h2 id=\"思维即能力\"><a href=\"#%E6%80%9D%E7%BB%B4%E5%8D%B3%E8%83%BD%E5%8A%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思维即能力</h2>\n<p>一开始就把事情做对：<strong>CODE LESS THINK MORE</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/think-more-code.png\" alt=\"think more code less\" title=\"think more code less\"></p>\n<h1 id=\"最后\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后</h1>\n<p>在此只是提纲挈领地罗列出自己的观点，很多点都可以展开来说，比如Docker就是一个值得写一系列文章来介绍，以后有时间我在展开来讲。</p>","frontmatter":{"title":"一次项目总结","date":"2017-11-28T12:32:58.000Z","category":"技术","tags":["技术","总结","全栈","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E9%A3%9E%E5%8D%8E%E5%88%86%E7%AB%99\">飞华分站</a></li>\n<li>\n<p><a href=\"/posts/fh-21-subsite-summary/#%E6%94%B9%E8%BF%9B\">改进</a></p>\n<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E4%BB%A3%E7%A0%81%E7%98%A6%E8%BA%AB\">代码瘦身</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\">数据库的使用方式</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E7%B1%BB%E5%BA%93%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F\">类库的加载方式</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\">开发体验</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%90%8E%E5%8F%B0%E9%A2%9C%E5%80%BC%E4%BA%A4%E4%BA%92\">后台颜值&#x26;交互</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%90%8C%E4%B8%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0\">同一功能，不同的实现</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%96%B0%E5%B7%A5%E5%85%B7\">新工具</a></li>\n<li>\n<p><a href=\"/posts/fh-21-subsite-summary/#%E4%B8%89%E5%8F%A5%E8%AF%9D\">三句话</a></p>\n<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E7%8E%AF%E5%A2%83%E5%8D%B3%E5%9F%BA%E7%A1%80\">环境即基础</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E4%BB%A3%E7%A0%81%E5%8D%B3%E8%A1%A8%E8%BE%BE\">代码即表达</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%80%9D%E7%BB%B4%E5%8D%B3%E8%83%BD%E5%8A%9B\">思维即能力</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%9C%80%E5%90%8E\">最后</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/about-full-stack-engineer"},"html":"<p><img src=\"https://zerosoul.github.io/2016/06/18/about-full-stack-engineer/fullstack.jpg\" alt=\"full stack engineer\"><br>\n全栈工程师现在是个很热的话题，如何定义全栈工程师？在著名的问答网站Quora上有人提出了这个问题，其中一个获得了高票的回答是：</p>\n<blockquote>\n<p>全栈工程师是指，一个能处理数据库、服务器、系统工程和客户端的所有工作的工程师。根据项目的不同，客户需要的可能是移动栈、Web栈，或者原生应用栈</p>\n</blockquote>\n<p>深以为然，所以，全栈工程师应该分为<strong>Web全栈</strong>和<strong>App全栈</strong>。恰巧最近看了本有关<strong>Web全栈工程师</strong>的书，记录下其中一些观点。</p>\n<h1 id=\"笔记笔记\"><a href=\"#%E7%AC%94%E8%AE%B0%E7%AC%94%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E7%AC%94%E8%AE%B0\" title=\"笔记\"></a>笔记</h1>\n<ul>\n<li>应该从能力和思维方式两方面来判定一个人是否是一个合格的全栈工程师。</li>\n<li>对于一些经理来说，宁可雇佣多个可管理的普通工程师，也不愿意聘请一个不可管理的天才工程师。</li>\n<li>一个前端工程师可能会不加思考地实现视觉设计稿，因为他的岗位说明里规定了自己的职责，这其中不包括质疑设计稿，所以他忽略了自己的最终目标：让产品更好。</li>\n<li>全栈工程师除了在一个专精知识领域有深入研究之外，还以知识广博和解决问题能力强著称。</li>\n<li>Done is better than perfect</li>\n<li>老板雇佣一个员工，不是因为他能写程序，而是因为他能帮助自己赚钱。赚钱有两种方法：减少成本和增加收入。</li>\n<li>如果增加一个用户需要的功能是加分项的话，拒绝一个用户不需要的需求更加值得推崇。</li>\n<li>要先看看有哪些问题需要解决，然后再补充您的工具箱。永远从商业目标的角度来决定学习什么，而不是纯粹为了锻炼技术能力去学习。</li>\n<li>如果我开创一个公司需要招聘“全栈工程师”，我要求的三个能力就是一专多长、关注商业目标和关注用户体验。</li>\n<li>绕开每个人都会去做的事情–投简历–转而做一个自己的作品，这就给企业传达了一个信号。</li>\n<li>主动性是全栈工程师必备的一个特质，没有一个全栈工程师是被别人逼出来的。</li>\n<li>每个人都要有意识地维护自己的作品集，它在半年一次的考核、晋升面试甚至以后的跳槽中都非常有用。</li>\n<li>尽量减少同一域下的HTTP请求数，以及尽量减少每一个资源的体积。</li>\n<li>把静态资源放在非主域名下，除了可以增加浏览器并发，还可以减少HTTP请求中携带的不必要的cookie。</li>\n<li><code class=\"language-text\">gzip</code>是一种开源的数据压缩算法，其中<code class=\"language-text\">g</code>代表免费的意思。</li>\n<li>DDoS攻击者喜欢攻击的页面一般是会对数据库进行写操作的页面，这样的页面无法静态化，服务器更容易宕机。</li>\n<li>越接近高级工程师，越考察对某个点的本质理解，以及在项目和团队中的引导作用，而不是对某工具的使用经验。</li>\n<li>框架应该是比库更广泛的概念。一个库是一系列对象、方法等代码，您的应用程序可以把这个库<em>链接</em>进来，起到了重用代码的作用，剩下了重写这部分代码的工作量，而一个框架是一个系统中可重用的一部分。</li>\n<li>行动重于计划，自己给自己挠痒。</li>\n<li>因为大家害怕失败，所以想把产品调整得完美无缺才发布。但是世界上成功的软件都不是完美的软件，而是在合适的时间发布的、刚刚够用的产品。如果它能活下来，在后面的版本中，他才有机会越来越好。</li>\n<li>让市场认可你的能力，而不是让老板认可，因为老板会变，老板的标准不一致，而市场是一致的。</li>\n<li><a href=\"http://semver.org/\">semver</a> &#x26; <a href=\"https://docs.npmjs.com/files/package.json#dependencies\">npm dependencies rules</a></li>\n<li>架构是当项目变得复杂之后必须考虑的问题，而项目总是会变得复杂的。</li>\n<li>“任何能用Javascript实现的，最终都必将用Javascript实现。”<em>Atwood定律</em></li>\n<li>语言只负责描述一个程序，而程序运行的速度，不取决于语言，而是算法和编译器的质量。</li>\n<li>\n<p>如果您平时没有做重要的事情，就会发现自己常常在做紧急的事情。</p>\n<ul>\n<li>如果平时没有注意锻炼身体，就会常常去医院，花费更多时间</li>\n<li>如果没有培养后辈，为每个项目设置接班人，就会常常需要到处救火。</li>\n<li>如果没有配置好版本管理系统就开始工作，就会浪费更多时间去找回丢失的代码</li>\n<li>如果偷懒硬编码一些变量在代码中，后续会花费更多时间过去调试</li>\n</ul>\n</li>\n<li>时间四象限：<br>\n<img src=\"https://zerosoul.github.io/2016/06/18/about-full-stack-engineer/time.jpg\" alt=\"four blocks\"></li>\n<li>拿工作时长来拼，这是体力劳动时代打工者的心态在作祟。</li>\n<li>程序员大致分两种：科学家和工程师。科学家关注技术是否优越，而工程师关注产品是否完美。</li>\n<li>懒惰的终极原因就是你想逃避这件事。</li>\n<li>耐心是一种能力</li>\n<li>用市场最高价格雇佣高效能人士组成团队 <em>Netflix企业文化</em></li>\n<li>所谓自我提升，首先是接纳自我，而不是贬低自我的性格。</li>\n<li>不要为了迎合主流社会，而伪装成一个外向、热情、合群的人。</li>\n<li>项目的定义是：在一定的约束条件下（时间和资源），具有明确目标的一次性任务。</li>\n</ul>\n<h1 id=\"后记后记\"><a href=\"#%E5%90%8E%E8%AE%B0%E5%90%8E%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#%E5%90%8E%E8%AE%B0\" title=\"后记\"></a>后记</h1>\n<p>做自己感兴趣的事情，学想学的知识，不要怕走偏了，如果有人说不务正业，那就让他们说去吧。如果你能远离传统的路子，将会不同凡响。 <em>–Steve Jobs</em></p>","frontmatter":{"title":"阅读笔记《Web全栈工程师的自我修养》","date":"2015-10-18T09:31:37.000Z","category":"阅读笔记","tags":["前端","全栈","阅读"],"cover":"https://zerosoul.github.io/2016/06/18/about-full-stack-engineer/fullstack.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/about-full-stack-engineer/#%E7%AC%94%E8%AE%B0%E7%AC%94%E8%AE%B0\">笔记笔记</a></li>\n<li><a href=\"/posts/about-full-stack-engineer/#%E5%90%8E%E8%AE%B0%E5%90%8E%E8%AE%B0\">后记后记</a></li>\n</ul>","excerpt":"全栈工程师现在是个很热的话题，如何定义全栈工程师？在著名的问答网站Quora上有人提出了这个问题，其中一个获得了高票的回答是： 全栈工程师是指，一个能处理数据库、服务器、系统工程和客户端的所有工作的工程师。根据项目的不同，客户需要的可能是移动栈、Web…"}}],"pathPrefix":"tags/全栈","first":true,"last":true,"index":1,"pageCount":1,"additionalContext":{"total":2,"tag":"全栈"}}}