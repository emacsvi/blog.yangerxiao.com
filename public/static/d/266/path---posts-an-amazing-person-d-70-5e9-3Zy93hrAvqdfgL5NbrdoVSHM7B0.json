{"pageContext":{"slug":"/posts/an-amazing-person","html":"<p>他没有拾人牙慧，一切都是他自己的，是他自己深思熟虑的结果，并经过他自己的验证。连讲话都是自己的字眼，并且用这些字眼的原始意义。</p>\n<p>有人问著名的组织学家聂佛梅瓦基，他怎么能一生都用来研究蠕虫的构造，他很惊奇：“蠕虫那么长，人生可是那么短！”</p>\n<p>柳比歇夫的治学，博大精深，既是一个狭隘领域的专家，又是个杂家。</p>\n<p>写日记要求不高，只要求对自己诚实、有思想和意志。</p>\n<p>他借助于一种内在的注意力，感觉得到时针在表面上移动——对他来说，时间的急流是看得见摸得着的，他仿佛置身于这一急流中，觉得出来光阴在冷冰冰地流逝。</p>\n<p>我们出于我们的自命不凡，深信古人的时间绰绰有余。古人只有日晷、水漏、沙漏，连计算时间都不象个样子，还谈得上什么珍惜时间。按照实干家的见解，进步不就是在于替这位实干家节约时间嘛。为了节约时间，实干家下了马车坐上火车，下了火车坐上飞机。发明了电报和电话来代替书信，电视代替了剧院，拉链代替了扣子，圆珠笔代替了鹅翎。电梯、计算机、百货公司、电传打字机、电动制刀——这一切发明，都是为了替人节省时间。然而，不知道为什么，人越来越感到时间不够用。实干家加快了速度，推广了电子计算机，把百货公司翻修成自动售货公司，采用照相制版法来印报纸。连说话都尽量说得简洁些，也不动手写了，而是利用录音机口授。但时间却越来越紧张。不仅是实干家，人人都感到时间的匮乏。没有时间看朋友；没有时间写信；没有时间照料孩子；没有时间去想；没有时间到秋天的树林里去站一会，什么也不想，光去听听飞舞的落叶飒飒作响；没有时间吟诗；没有时间去给父母上坟。小学生也好，大学生也好，老头儿也好，大家都没有时间。时间不知哪里去了，越来越少。手表再也不是奢侈品，每个人手腕上都戴的有，走得很准，校正过，还防水；人人都有一座闹钟滴滴答答走着。但是时间并没有因此而增加。时间的分配几乎同两千年以前赛纳卡时代一摸一样：“我们一生的时间，大部分用于错误及种种恶行；很大一部分虚抛浪掷，无所事事。我们整个一生，几乎都没有用来干应当干的事。”</p>\n<p>时间的令人烦恼之处正在于它不能不用，结果，人们兴之所至，乱花滥用，用来干五花八门的荒唐事。</p>\n<p>幸福的人是不看表的，反过来也对，不看表的人是幸福的。</p>\n<p>在上帝面前坦白，总要比在凡人面前坦白容易些。把自己的弱点、恶习、空虚等等统统暴露在众人面前和自己面前，是需要勇气的。</p>\n<p>这样到底好不好？——给自己的生活定了框框，定得那么死。捆住了自己的手脚，戴上了笼头，错过了其它的机会，人变得干巴巴的。然而在事实上，柳比歇夫的命运并非如此。他的一生是生气勃勃、和谐协调的一生。他孜孜不倦地追求自己的既定目标，在他生活中是起了重大作用的。他一生始终忠于他青年时代的选择，忠于自己的爱好和理想。他自己认为自己是幸福的；而且在旁人的眼里，他的生活由于目标明确，也是令人羡慕的。</p>\n<p><strong>他的时间好像是物质，不会无影无踪地消逝不见，不会消亡；它变成了什么，总能查得出来。由于做了统计，他获得了时间。这是最实在的收获。</strong></p>\n<p>他是依靠他那最最合理的方法一手造就了自己；他创造了他的方法，他通过他的方法证明，如果把一切才能集中用到一个目标上，可以取得多么多的成就。只要连续多年有系统地、深思熟虑地采用他的方祛，可以超过天才。他的方法似乎使才能提高了。他的方法是远射程的枪炮，是把所有光线集中到一点的凸透镜，是加强器。它是理智的凯歌。</p>\n<p>一个软弱的人度过了严峻的生活，如今来到了草木繁茂的绿洲，流连忘返…</p>\n<p>一个学者的衣着最好保持最低水准，过得去就行。因为：（1）有些人，把穿一套好衣服当作真正的乐趣，何必要同这些人比赛竞争呢？（2）穿朴素的衣服，行动方便自如；（3）稍有些故作‘癫狂’，并不坏：小市民会对你有些讥讽嘲笑，这是一种有益的心理上的锻炼，能让你培养我行我素的精神……”</p>\n<p>每一个人在自己内心都有一所纪念馆；每一个人都有保存自己良心和感受的地方，都有自己的回忆录，都有自己珍爱的地方。</p>\n<p>一个上了年纪的、仪表端庄的人，突然无视身旁的行人，跨过水洼去追一个甲壳虫，一个人要做到这一点，必须有婴儿般的纯洁和不顾一切的品质。</p>\n<p>有这么一句古老的谚语：一个医生，如果他仅仅是一个好医生，那他就不可能是一个好医生。对科学家当然也可以这么说。一个科学家如果他仅仅是一个科学家，那他也就不可能是一个大科学家。当想象力和灵感消失时，创造性的源泉也就枯竭了。创造性的源泉也要求兼及旁骛。否则科学家就只剩下追求事实了。</p>\n<blockquote>\n<p>但愿你能知道\n诗句可以从糟粕中寻找\n不用害臊</p>\n</blockquote>\n<p>谁同现实妥协，谁就是对未来没有信心。</p>\n<p>在他紧张的精神生活中，他崇敬的英雄们、他喜爱的人儿、他的表率都不断在变换。仔细去考察这种变化，该是很有意思的事。对于柳比歇夫，任何时候都不能说他已“成为”怎样一个人。他永远正在“逐步成为”怎样一个人。他一直在探索，一直在变化，他总是重新考虑，不断提高对自己和对自己理想的要求。</p>\n<p>如果想要工作有一个令人欣慰的结局，那么就去干你心向往之的工作。</p>\n<p>柳比歇夫不是一个天才；天才永远是那个总其成的人。一种事业，总有许多先驱者为之献出智慧，最后轮到一个人来完成它，这个人就是天才。</p>\n<p>“消磨时间”——这是不可能在他头脑中产生的念头。任何时间对他来说都是宝贝。时间是进行创造的时间，认识事物的时间，享受生活乐趣的时间。</p>\n<p>他不期待别人赞扬，他学会了自己对自己做出公正的评价。</p>\n<p>他需要的东西极有限：有一个放书的地方和工作的地方，有一个宁静安说的工作环境就够了。当然，宁静安谧这一个要求不算低。在我们的时代，宁静安谧是奇货。</p>\n<p>柳比歇夫的日记和他的书信，记载了他半个多世纪以来为形成自己的个性在精神方面所做的努力。这样的自我修养在许多人看来是没有必要的，甚至令人愤慨。最容易的是认为首先应当是环境和社会作用于人，社会有责任培养人的个性，使个性臻于完善，对个性提出要求等等。柳比歇夫却不然，<strong>他自己对自己提出要求，自己监督自己，自己监视自己，自己向自己汇报</strong>。</p>\n<p>他不是按照自己的能力去衡量任务，而是按照任务去衡量能力。</p>\n<p>力量也不知从哪儿来的。如泉涌至，头脑变得敏锐了，想象力十分活跃……这种幸福的、如醉如痴的状态，在作家称之为灵感，在运动员名为顶峰状态，在科学家则叫做开窍；这种情况每个人都有——有些人不常有，另一些人经常有。人超越了自己，超越了他平常的能力和极限，这种情况是有可能发生的，重要的正是这一点。这么说，这是可能的，而既然能有一次，那么为什么不能有两次，不能每天都这样呢？</p>\n<p>我们一些伟大的作家、科学家、艺术家——他们既是学识渊博的人，又是具有炽烈激情的人，有时甚至过了头。然而他们的激情不是狂热，而是忘我的热情，是创造性精神不可或缺的热情。</p>\n<p>柳比歇夫的方法可以节约原有的时间，但不能增加额外的时间。关键甚至也不在量上：柳比歇夫的时间获得了不同的质；<strong>他同时间之神建立了某种私人的关系</strong>。</p>\n<p>他的时间不是取得成就的时间。他摆脱了赶过别人，夺取第一，超越什么，获得什么的愿望。他热爱时间，珍惜时间，不是把它当作工具，而是<strong>把它看成是进行创造的条件</strong>。他对时间十分虔敬，同时又体贴入微，他认为时间对人们如何使用它并不是无所谓的。时间不是个物理概念，不是时针的转动，而好象是个<strong>道德概念</strong>。在他看来，浪费时间就好比夺走科学研究的时间，就好比滥用和抢走他服务对象的时间。他坚信，<strong>时间是最宝贵的财富，不能乱用到怄气上，不能乱用到竞争角逐或满足虚荣心上。在他看来，对待时间的态度是个道德问题</strong>。</p>\n<p>柳比歇夫并没有建树丰功伟绩，可他建树的要比功绩的意义更为重大——这就是过得很好的一生。这一生的奇特性、谜和秘密就在于柳比歇夫把一生中的特殊现象看成是自然现象。也许这确实是自然的理性生活？<strong>可以说，一个人珍惜每一秒钟，并使每一秒钟都过得很有意义，同时又把这看成是一种自然而然的现象，那是最为困难的一件事</strong>。</p>\n<p>时间统计法不会扼杀灵感，因为人适应它是为了最大限度地利用自己的一切可能性。每个人能做的，比他所做的要多得无限。我们还没有达到一个人能够达到的限度的一半。人的精神潜力在很大程度上还原封未动。当我们看到人们不善于有价值、有意义地利用自己的聪明才智和全部天赋时，是很痛心的。我们现在利用自己，就如利用自然界一样缺乏计算，我们使用自己的办法不科学。看来这个问题还没有全部展开在人们、全人类面前。但这个问题正在展开，因为每一人都是最宝贵的财富。充分施展自己的才能——这是每个人和全人类面临的日益增大的任务。</p>\n<p>如何能做得更多、更快、更好——如果只用这种观点来对待时间统计法，那么得到的好处也只是附带的。这自然也很好，但还不够。关键在于一个人希望从生活得到的是什么。</p>","frontmatter":{"title":"阅读笔记《奇特的一生》","date":"2013-10-02T09:23:08.000Z","category":"阅读笔记","tags":["时间管理","时间统计法","经典","阅读"],"cover":null},"excerpt":"…","tableOfContents":"","prev":{"fields":{"slug":"/posts/14-advices-for-programmer"},"html":"<p>下面是开发大牛总结的高效编程的14点经验。不管你是编程菜鸟还是资深程序员，或许都能从中得到启发。</p>\n<h1 id=\"计划\"><a href=\"#%E8%AE%A1%E5%88%92\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>计划</h1>\n<p>所谓plan,其实就是对于编程中的“设计”阶段，当然，这里的plan并不像设计那样重量级。它要求我们程序员在正式编程前最少要考虑一下下面的问题：</p>\n<ul>\n<li>你这个程序，工具或是项目的目的，究竟是用来干什么的。你只有知道做什么，要达到什么样的目的，你才能做得好，做得对。</li>\n<li>需要有什么样的功能。需要你给出来个功能表。这样可以保证我们不会遗漏了什么。</li>\n<li>准备好一些技术难题的前期调查和解决方案。不要等到开始编程的时候才去想。</li>\n</ul>\n<p>下面是你因为有“plan”而得到的好处：</p>\n<ul>\n<li>你能够清楚地明白你要做的东西长什么样？</li>\n<li>你能清楚知道你要开发的东西要干些什么事？</li>\n<li>你能够在开发工程中解决你所有可能发生的难题。</li>\n</ul>\n<h1 id=\"使用伪代码\"><a href=\"#%E4%BD%BF%E7%94%A8%E4%BC%AA%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用伪代码</h1>\n<p>伪代码是一个非常不错的方式，让你可以看到你要写得程序长什么样？</p>\n<p>一些人并不喜欢伪代码，因为他们并不想把同样的代码写两遍，一遍是伪代码，一遍是真代码。其实，这是可以理解的，因为两个copy的东西是比较不好维护的。但是我想，这是可以权衡的，如果的算法很简单，那么就不需要伪代码了，如果你的算法比较复杂，比较绕，那么，有一个伪代码提纲挈领将会是一件非常不错的事情，因为他有利于让别人从一个简单的文档来了解一个复杂的算法或系统。这就好像一个电线的布线图一样，你可以很容易地通过一个简单的文档从复杂的实现中找到头绪。</p>\n<h1 id=\"书写清楚的注释\"><a href=\"#%E4%B9%A6%E5%86%99%E6%B8%85%E6%A5%9A%E7%9A%84%E6%B3%A8%E9%87%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>书写清楚的注释</h1>\n<p>请在你的代码中书写清楚的程序注释。当然，注释不是越多越好，注释应该是简明扼要的，如果你的程序足够地清楚简单，那么注释就会显的多余。另外，注释应该是注释“原因，理由，目的”，而不是注释“是什么”。</p>\n<h1 id=\"使用自动的编辑工具\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E7%9A%84%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用自动的编辑工具</h1>\n<p>自动的编辑工具有很多，比如 Typinator，这是一个可以通过设定一些替代的简单代码来实现重复语句的快捷插入，比如你自己的签名、常用的语句等等，通过它可以设定替代的简短代码。还有其它一些代码自动完成的工具，比如一些VC的插件，还有像Source Insight这样的东西。别小看这一点点时间，如果你每天都在写代码的话，今天一点点，明天一点点，将会为你省出很多的时间。</p>\n<h1 id=\"减少代码\"><a href=\"#%E5%87%8F%E5%B0%91%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>减少代码</h1>\n<p>减少代码的数量，坚持DRY（Don’t Repeat Yourself） 和KISS（Keep It Simple &#x26; Stupid） 原则。这样可以有交物减少代码的复杂度，提高程序的易读性和可维护性，同时也能增加代码的质量</p>\n<h1 id=\"代码重用\"><a href=\"#%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码重用</h1>\n<p>DRY (don’t repeat yourself) 原则就是告诉我们需要重用现有的代码。这样，你才能够站在巨人的肩膀之上，从而可以更多的关注和自己所要处理业务的逻辑。编程的最高境界就是写出来的代码是可能被重用的，重用和泛型这是编程里始终在追求的目标。</p>\n<h1 id=\"代码重构\"><a href=\"#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码重构</h1>\n<p>一些老的代码可能已经不合时宜了，比较以前老的C++的STL库在多线程下可能会出现很多问题。所以，我们自己的代码也是一样的，每过一段时间，我们需要把这些代码回收再利用，这就是软件的重构。重构代码所追求的并不是要提供更多的功能，而是让老的代码更有生命力，让老的代码跟上时代，更具扩展性，灵活性。</p>\n<h1 id=\"使用设计模式\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用设计模式</h1>\n<p>设计模式是一种从代码级解决某一些问题的方法论。这个世界上有很多很多的设计模式，比如MVC，单实例，工厂，观察者等等，等等。使用好的设计模式可以让你的代码更具重用和扩展性。</p>\n<h1 id=\"使用程序框架framework\"><a href=\"#%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6framework\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用程序框架Framework</h1>\n<p>Frameworks 是一份给程序员的礼物，他们帮助你完成了很多很细节的事情，他们有可能是一个lib库，你需要进行简单的拼装，一个几乎完成了的软件框架就已形成。这是一个能够给开发工作提速的东西。只要上网随便搜一搜，你可以看到太多太多的框架了。形形色色，几乎都是开源社区贡献的。</p>\n<h1 id=\"泛型编程\"><a href=\"#%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>泛型编程</h1>\n<p>如果抽像出一些程序中相似的东西，然后把这些相似的东西用一个标准的东西实现，这也是编程所追求的最高境界之一，像诸如C++中的STL之类的东西就是此类东西的最佳体现。灵活之及，几乎都快放之四海皆准了。</p>\n<h1 id=\"使用开源的代码\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用开源的代码</h1>\n<p>这个世界上有太多太多开源的代码了。学会利用他们可以让你更节省时间和精力，因为我们完全没有必要把相当的东西实现若干次，学会使用开源的代码不但是一个学习的过程，同样也是一个增加编程效率的事情。</p>\n<h1 id=\"完善开发环境\"><a href=\"#%E5%AE%8C%E5%96%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完善开发环境</h1>\n<p>开发环境非常重要，因为好的开发环境可以让你事倍功半。他们可以让你不需要关注别的东西，比如，我曾看过某程序员在调整编辑器的字体和高亮上花费了不少工夫。是的，这是值得肯定了，只有把开发环境变得舒服，才能让自己更好的编程。</p>\n<h1 id=\"使用调试器\"><a href=\"#%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E5%99%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用调试器</h1>\n<p>学会使用调试器来调试代码，单步跟踪，变量值跟踪，内存，堆栈等等。熟练地使用调试器可以让你更好的查找程序的问题，以得到最优的代码。</p>\n<h1 id=\"使用版本管理工具\"><a href=\"#%E4%BD%BF%E7%94%A8%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用版本管理工具</h1>\n<p>版本管理工具应该是任何程序员都应该要去学会使用的东西，特别在一个团队中，如何管理程序的不同版本，如何维护，存放代码，版本管理工具绝对是开发过程中不可少的东西。其意义绝对不只代码备份和共享那么简单。</p>","frontmatter":{"title":"程序员高效编程的14点建议","date":"2013-11-03T09:31:37.000Z","category":"它山之石","tags":["技术","编程","转载"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/14-advices-for-programmer/#%E8%AE%A1%E5%88%92\">计划</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E4%BC%AA%E4%BB%A3%E7%A0%81\">使用伪代码</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%B9%A6%E5%86%99%E6%B8%85%E6%A5%9A%E7%9A%84%E6%B3%A8%E9%87%8A\">书写清楚的注释</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E8%87%AA%E5%8A%A8%E7%9A%84%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7\">使用自动的编辑工具</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E5%87%8F%E5%B0%91%E4%BB%A3%E7%A0%81\">减少代码</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8\">代码重用</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BB%A3%E7%A0%81%E9%87%8D%E6%9E%84\">代码重构</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F\">使用设计模式</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%A1%86%E6%9E%B6framework\">使用程序框架Framework</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B\">泛型编程</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E5%BC%80%E6%BA%90%E7%9A%84%E4%BB%A3%E7%A0%81\">使用开源的代码</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E5%AE%8C%E5%96%84%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83\">完善开发环境</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E5%99%A8\">使用调试器</a></li>\n<li><a href=\"/posts/14-advices-for-programmer/#%E4%BD%BF%E7%94%A8%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7\">使用版本管理工具</a></li>\n</ul>","excerpt":"下面是开发大牛总结的高效编程的14点经验。不管你是编程菜鸟还是资深程序员，或许都能从中得到启发。 计划 所谓plan,其实就是对于编程中的“设计”阶段，当然，这里的plan…"},"next":{"fields":{"slug":"/posts/think-on-software"},"html":"<h1 id=\"我的第一次billg审查\"><a href=\"#%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1billg%E5%AE%A1%E6%9F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>我的第一次BillG审查</h1>\n<p>比尔并不是真地想来评论你写的东西，他只是想确定你对实现那些目标是不是有把握。他的标准做法是不断地提问，越问越难，知道你答不上来，承认自己不知道为止。</p>\n<p>迷信MBA的人们总是愿意相信，懂不懂公司业务没关系，只要懂管理就行。</p>\n<h1 id=\"优秀的程序员在哪儿\"><a href=\"#%E4%BC%98%E7%A7%80%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9C%A8%E5%93%AA%E5%84%BF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>优秀的程序员在哪儿</h1>\n<p>就同所有行业中最好的人才一样，那些优秀的程序员是不会出现在招聘市场上的。通常优秀的程序员在整个职业生涯中，可能会有4次求职。</p>\n<p>一些真正优秀的程序员往往在10岁的时候就开始编程。</p>\n<h1 id=\"寻找优秀的程序员之实战指南\"><a href=\"#%E5%AF%BB%E6%89%BE%E4%BC%98%E7%A7%80%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B9%8B%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>寻找优秀的程序员之实战指南</h1>\n<p>Fog Creek的招聘理念：</p>\n<ul>\n<li>聪明</li>\n<li>能够完成工作</li>\n<li>不收怪人</li>\n</ul>\n<p>许多人选择编程，首要的原因就是，他们宁愿将自己的时间花在一个公平有序的地方，一个严格的能者上庸者下的地方，一个只要你是对的就能赢得任何争论的地方。</p>\n<h1 id=\"写给未来程序员的建议\"><a href=\"#%E5%86%99%E7%BB%99%E6%9C%AA%E6%9D%A5%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%BB%BA%E8%AE%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>写给未来程序员的建议</h1>\n<p>对于某些最激动人心的编程任务来说，指针仍然是非常重要的。比如说，如果不用指针，你根本无法开发Linux内核。如果你不是真正地理解指针，连一行Linux代码也看不懂，说实话，任何操作系统的代码你都看不懂。</p>\n<p><strong>指针和递归要求一定水平的推理能力、抽象思考能力，以及最重要的，在若干个不同的抽象层次上同时审视同一个问题的能力。因此，是否真正理解指针和递归与是否是一个优秀的程序员直接相关。</strong></p>\n<h2 id=\"在耶鲁大学的演讲\"><a href=\"#%E5%9C%A8%E8%80%B6%E9%B2%81%E5%A4%A7%E5%AD%A6%E7%9A%84%E6%BC%94%E8%AE%B2\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在耶鲁大学的演讲</h2>\n<p>我在西海岸生活的那段日子让我习惯了这样一种看法，即管理只是一种不得不做、让人厌烦的杂物活，之所以公司需要管理，就是为了不影响聪明人的工作，让他们把事情做完。经理存在的唯一理由就是把家具的位置摆好，不要挡道，只有这样，真正的天才才能做出优秀的成果。</p>\n<h2 id=\"给计算机系学生的建议\"><a href=\"#%E7%BB%99%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E5%AD%A6%E7%94%9F%E7%9A%84%E5%BB%BA%E8%AE%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>给计算机系学生的建议</h2>\n<p>大多数学生都很自以为是，从不会虚心向前辈求教，他们觉得那样太烦。但是，很幸运，在计算机领域，这样做是对的。因为他们的前辈很可能会说一些不靠谱的话，比如“到2010年之前，对纸带打孔员的需求将超过1亿人”，还有“目前Lisp语言的相关人才非常抢手”</p>\n<ul>\n<li>毕业前练好写作</li>\n<li>毕业前学好C语言</li>\n<li>毕业前学好微观经济学</li>\n<li>选修有大量编程实践的课程</li>\n<li>选修几门非计算机的课程</li>\n<li>别担心工作被印度人抢走</li>\n<li>找一份好的暑期实习工作</li>\n</ul>\n<h1 id=\"设计的作用\"><a href=\"#%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BD%9C%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>设计的作用</h1>\n<p>除非受过专门的训练，明确知道自己想要什么，否则人们挑中的就是人们最熟悉的。</p>\n<p>你之所以有好运气，那是因为你寸土必争。</p>\n<p>为了发现可以改进的地方，你必须有一个思维定势，始终如一地用批判的眼光看世界。随便找一样东西，如果你看不出它的缺点，那么你的思维转型还没有成功。</p>\n<p>无论何时，只要设计报告用形容词来描述产品（“该产品酷毙了”），而没有提及细节（如“它的标题将是拉绒铝的颜色，所有的图标将带有一点反光，好像被放在三角钢琴上一样”），那么你就知道你有麻烦了。</p>\n<p>微软公司和开源软件运动都存在这个问题，那就是程序员受到一种愿望的驱使，渴望方方面面都照顾到，让每个人都感到满意。但是这种愿望的基础其实是一个不正确的认识，更多的选择会不会让用户感到更幸福，我们需要重新思考这一点。</p>\n<h1 id=\"管理大型项目\"><a href=\"#%E7%AE%A1%E7%90%86%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>管理大型项目</h1>\n<h2 id=\"火星人的耳机\"><a href=\"#%E7%81%AB%E6%98%9F%E4%BA%BA%E7%9A%84%E8%80%B3%E6%9C%BA\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>火星人的耳机</h2>\n<p>每一个业内的程序员至少应该理解标准如何生效、标准应该如何生效、我们又怎么会沦落到今天这种一团糟的局面。（说的是Web浏览器标准）</p>\n<p>Jon Postel的鲁棒性原则：输出行为要保守，接受行为要宽容。</p>\n<h1 id=\"编程建议\"><a href=\"#%E7%BC%96%E7%A8%8B%E5%BB%BA%E8%AE%AE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>编程建议</h1>\n<p>不必太在意软件的效率问题和内存占用，只要把很酷的功能做出来，然后等着硬件升级就可以了。</p>\n<p>从长远来看，那些不关心效率、不关心程序是否臃肿、一个劲往软件中加入高级功能的程序员最终将拥有更好的产品。</p>\n<p>每一行代码都可以通过自身判断正误。</p>\n<p>寻找一种代码的书写规范，让错误的代码变得容易被看出。让代码中的相关信息在显示屏上集中在一起，使你能够当场发现和改正某些种类的错误。</p>\n<p>写出真正可靠的代码的方法就是使用那些考虑了人类常见缺陷的简单工具，而不是使用那种含有隐藏副作用、产生有瑕疵的抽象层、假设程序员绝对不会出错的复杂工具。</p>\n<h1 id=\"经营软件公司\"><a href=\"#%E7%BB%8F%E8%90%A5%E8%BD%AF%E4%BB%B6%E5%85%AC%E5%8F%B8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>经营软件公司</h1>\n<p>几乎所有技术支持方面的问题都有两种解决方案。一种是表面的、快速的解决方法，只求把问题解决了事。但是只要你深入思考一点，就会发现还有另一种解决方式，能够防止类似的问题再次发生。如果每次发生问题，你就寻找解决方法，永久性地解决它，那么长此以往，会发生什么结果？那就是所有常见的和容易的问题都被解决了，留下来的都是一些非常罕见的和奇特的问题。</p>","frontmatter":{"title":"阅读笔记《软件随想录》","date":"2013-08-25T06:52:08.000Z","category":"阅读笔记","tags":["互联网","产品","成长","创业","阅读"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/think-on-software/#%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1billg%E5%AE%A1%E6%9F%A5\">我的第一次BillG审查</a></li>\n<li><a href=\"/posts/think-on-software/#%E4%BC%98%E7%A7%80%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9C%A8%E5%93%AA%E5%84%BF\">优秀的程序员在哪儿</a></li>\n<li><a href=\"/posts/think-on-software/#%E5%AF%BB%E6%89%BE%E4%BC%98%E7%A7%80%E7%9A%84%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B9%8B%E5%AE%9E%E6%88%98%E6%8C%87%E5%8D%97\">寻找优秀的程序员之实战指南</a></li>\n<li>\n<p><a href=\"/posts/think-on-software/#%E5%86%99%E7%BB%99%E6%9C%AA%E6%9D%A5%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E5%BB%BA%E8%AE%AE\">写给未来程序员的建议</a></p>\n<ul>\n<li><a href=\"/posts/think-on-software/#%E5%9C%A8%E8%80%B6%E9%B2%81%E5%A4%A7%E5%AD%A6%E7%9A%84%E6%BC%94%E8%AE%B2\">在耶鲁大学的演讲</a></li>\n<li><a href=\"/posts/think-on-software/#%E7%BB%99%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E5%AD%A6%E7%94%9F%E7%9A%84%E5%BB%BA%E8%AE%AE\">给计算机系学生的建议</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/think-on-software/#%E8%AE%BE%E8%AE%A1%E7%9A%84%E4%BD%9C%E7%94%A8\">设计的作用</a></li>\n<li>\n<p><a href=\"/posts/think-on-software/#%E7%AE%A1%E7%90%86%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE\">管理大型项目</a></p>\n<ul>\n<li><a href=\"/posts/think-on-software/#%E7%81%AB%E6%98%9F%E4%BA%BA%E7%9A%84%E8%80%B3%E6%9C%BA\">火星人的耳机</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/think-on-software/#%E7%BC%96%E7%A8%8B%E5%BB%BA%E8%AE%AE\">编程建议</a></li>\n<li><a href=\"/posts/think-on-software/#%E7%BB%8F%E8%90%A5%E8%BD%AF%E4%BB%B6%E5%85%AC%E5%8F%B8\">经营软件公司</a></li>\n</ul>","excerpt":"我的第一次BillG审查 比尔并不是真地想来评论你写的东西，他只是想确定你对实现那些目标是不是有把握。他的标准做法是不断地提问，越问越难，知道你答不上来，承认自己不知道为止。 迷信MBA…"}}}