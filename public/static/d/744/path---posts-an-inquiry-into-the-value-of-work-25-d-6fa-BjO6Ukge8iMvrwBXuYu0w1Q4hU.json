{"pageContext":{"slug":"/posts/an-inquiry-into-the-value-of-work","html":"<h1 id=\"摘记\"><a href=\"#%E6%91%98%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>摘记</h1>\n<p>修车师傅靠的是自己的知识和经验。面对像“这辆车没事吧”这种问题，他的回答直截了当，根本不用考虑什么办公室政治，无需受制于什么中央权力。每天工作结束后，他可以看到自己实实在在的工作成果，为自己解决的那些问题而自豪。</p>\n<p>节俭只是一个表面的经济原因，自力更生实际上是为了满足更深层次的一种需求：我们必须感受到这个世界是可以被理解和把控的，我们可以承担起相应的责任。</p>\n<p>通过动手能力来向世界实实在在地证明自己，由此带来的满足感能让人感到轻松平静。</p>\n<p><strong>工匠精神意味着长期致力于一项工作，深入地钻研它，因为你想把它做好。</strong></p>\n<p><strong>创造力是精通的副产品，而精通只能通过长期的实践来培养。</strong>只有不断地屈从于既定规则，才能实现对某项事务的精通。</p>\n<p>对于那些希望依靠自身力量生活的人而言，手工艺业自然而然地成为了他们的乐土：自由自在，既不受麻木抽象的拘束，也不受当今经济生活两大特色——骗人的美梦及与日俱增的不安全感影响。无欲无求，远离恐惧，正是标准的淡泊之人。</p>\n<h1 id=\"译者后记\"><a href=\"#%E8%AF%91%E8%80%85%E5%90%8E%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>译者后记</h1>\n<p>曾几何时，中国大地上开始盛行白领。白领给人们的印象就是衣着光鲜，西装革履，手提公文包，出入高档写字楼。于是年轻人的志愿就变成大学毕业后加入白领的浩荡队伍，在格子间里占据一席之地。但慢慢地，许多人开始质疑究竟什么是白领。忙碌工作一天后，却说不清楚自己一整天到底干了什么，失落感如影随形，日子越过越麻木。那份工作恰如鸡肋，弃之可惜，食之无味。幸福感究竟在哪里？</p>\n<p>现在有些大学生在毕业后就失业，他们梦想的是白领的光鲜生活，但能力有限，经验有限，机会有限，梦想无法得以实现。不过许多人又不肯放下架子，到基层去工作，去学习，认为有失身份。当看到大学生毕业后去养猪，去卖猪肉，或者去擦皮鞋的新闻时，人们莫不为之可惜，认为书白读了。其实他们不知，每份工作都蕴含了知识，那些大学生从实践中学习到了许多书本未能教给他们的知识，将自己的事业干得有模有样。</p>\n<p>《摩托车修理店的未来工作哲学》一书的作者是一名政治哲学博士，曾经也认定必须找一份与自身身份相称的工作，但“技术工人”的工作让他感觉自己迷失了方向。于是他选择了自己喜欢的摩托车修理工作，开设了自己的摩托车修理店，从摩托车修理中找到了知识和快乐。<strong>compensation这个词语，在英语既表示补偿，也表示薪酬。技术工人们拿着高薪，但工作无法给他们带来成就感，所以薪水也就成为对无聊乏闷和无用感的一种补偿。</strong></p>\n<p>或许你现在正对未来感到迷茫，不知道自己究竟要往何处走：也许你对目前的工作生活状态感到厌倦，觉得幸福离自己很遥远。不管怎样，这本书都值得一读。幸福和价值不在于你是否身居高位，不在于你是否日进斗金。<strong>幸福在于我们能将动手和动脑结合在一起，工作和生活不会完全脱离，幸福在于我们能做一个完整的人。</strong></p>","frontmatter":{"title":"阅读笔记《摩托车修理店未来工作哲学》","date":"2015-08-25T04:26:08.000Z","category":"阅读笔记","tags":["工匠精神","阅读"],"cover":null},"excerpt":"…","tableOfContents":"<ul>\n<li><a href=\"/posts/an-inquiry-into-the-value-of-work/#%E6%91%98%E8%AE%B0\">摘记</a></li>\n<li><a href=\"/posts/an-inquiry-into-the-value-of-work/#%E8%AF%91%E8%80%85%E5%90%8E%E8%AE%B0\">译者后记</a></li>\n</ul>","prev":{"fields":{"slug":"/posts/json-and-jsonp"},"html":"<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>前端开发有个问题不可避免：<strong>跨域获取异步数据</strong>。我比较推崇的解决方式是：<strong>用JSON传数据，靠JSONP来跨域</strong>。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。</p>\n<p>JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿：<strong>JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。一个是描述信息的格式，一个是信息传递双方约定的方法。</strong></p>\n<h1 id=\"什么是json\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjson\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSON</h1>\n<p>有关JSON的概念，曾经写过一篇文章专述，请<a href=\"https://zerosoul.github.io/2015/06/18/explore-json/\">移步这里</a>。</p>\n<p>概括下其优点：</p>\n<ul>\n<li>基于纯文本，跨平台传递；</li>\n<li>Javascript原生支持，后台语言几乎全部支持；</li>\n<li>轻量级数据格式，占用字符少，特别适合网络传递；</li>\n<li>可读性较强，虽然比不上XML一目了然，但在合理的缩进之后还是易识别的；</li>\n<li>容易编写和解析；</li>\n</ul>\n<h1 id=\"什么是jsonp\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSONP</h1>\n<h1 id=\"jsonp是怎么产生的\"><a href=\"#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSONP是怎么产生的</h1>\n<p>我试着用自己的方式来阐释一下这个问题：</p>\n<ol>\n<li>一个众所周知的问题，AJAX直接请求普通文件存在跨域访问的问题，甭管网页是静态的还是动态的，只要是跨域请求，一律不准；</li>\n<li>不过，WEB页面上调用js文件时则不受是否跨域的影响（不仅如此，凡是拥有<code class=\"language-text\">src</code>这个属性的标签都有跨域的能力，比如<code class=\"language-text\">&lt;script&gt;</code>、<code class=\"language-text\">&lt;img&gt;</code>、<code class=\"language-text\">&lt;iframe&gt;</code>）；</li>\n<li>于是可以判断，当前阶段如果想通过纯WEB端（ActiveX控件、服务端代理、属于未来的HTML5之Websocket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js文件里，供客户端调用和进一步处理；</li>\n<li>JSON的纯字符数据格式可以简洁的描述复杂数据，更妙的是JSON被javascript原生支持，所以在客户端几乎可以随心所欲的处理这种格式的数据；</li>\n<li>这样子解决方案就水到渠成了，WEB客户端通过与调用脚本一模一样的方式，来调用跨域服务器上动态生成的js格式文件（一般以JSON为后缀），显而易见，服务器之所以要动态生成JSON文件，目的就在于把客户端需要的数据装入进去。</li>\n<li>客户端在对JSON文件调用成功之后，也就获得了自己所需的数据，剩下的就是按照自己需求进行处理和展现了，这种获取远程数据的方式看起来非常像AJAX，但其实并不一样。</li>\n<li>为了便于客户端使用数据，逐渐形成了一种非正式传输协议，人们把它称作JSONP，该协议的一个要点就是允许用户传递一个<code class=\"language-text\">callback</code>参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。</li>\n</ol>\n<p>我想JSONP的发展历程大概就是这样子，应该八九不离十，下面看一看具体实现。</p>\n<h1 id=\"具体实现\"><a href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>具体实现</h1>\n<p>1.远程服务器<code class=\"language-text\">remote.server.com</code>根目录下有个<code class=\"language-text\">remote.js</code>文件代码如下：  </p>\n<p>1</p>\n<p>alert('我来自远程文件');</p>\n<p>本地服务器<code class=\"language-text\">local.server.com</code>下有个测试页面<code class=\"language-text\">test.html</code>代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>毫无疑问，页面将会弹出一个提示窗体，显示跨域调用成功。<br>\n2.现在<code class=\"language-text\">test.html</code>页面定义一个函数，然后在远程<code class=\"language-text\">remote.js</code>中传入数据进行调用。  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">localHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是本地函数，可以被跨域的remote.js文件调用，远程js带来的数据是：'</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>remote.js文件代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">localHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"我是远程js带来的数据\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>运行之后查看结果，页面成功弹出提示窗口，显示本地函数被跨域的远程js调用成功，并且还接收到了远程js带来的数据。很好，跨域远程获取数据的目的基本实现了，但是又一个问题出现了，怎么让远程js知道它应该调用的本地函数叫什么名字呢？毕竟是JSONP的服务者都要面对很多服务对象，而这些服务对象各自的本地函数都不相同啊？</p>\n<p>3.很容易想到，只要服务端提供的js脚本是动态生成的就行了，这样调用者可以传一个参数过去告诉服务端“我想要一段调用XXX函数的js代码，请你返回给我”，于是服务器就可以按照客户端的需求来生成js脚本并响应了。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n    <span class=\"token comment\">// 得到航班信息查询结果后的回调函数</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">flightHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你查询的航班结果是：票价 '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'余票 '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 提供jsonp服务的url地址（不管是什么类型的地址，最终生成的返回值都是一段javascript代码）</span>\n    <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998&amp;callback=flightHandler\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 创建script标签，设置其属性</span>\n    <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 把script标签加入head，此时调用开始</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span>\\<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>这次的代码变化比较大，不再直接把远程js文件写死，而是编码实现动态查询，而这也正是JSONP客户端的核心部分。</p>\n<p>调用的url中传递了一个code参数，告诉服务器我要查的是<strong>CA1998</strong>次航班的信息，而<strong>callback</strong>参数则告诉服务器，我的本地回调函数叫做<strong>flightHandler</strong>，所以请把查询结果传入这个函数中进行调用。</p>\n<p>服务器很聪明，这个叫做flightResult.aspx的页面生成了一段这样的代码提供给test.html（服务端的实现这里就不演示了，与选用的语言无关，说到底就是拼接字符串）：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">flightHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CA1998\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1780</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"tickets\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>传递给flightHandler函数的是一个JSON，它描述了航班的基本信息。运行页面，成功弹出提示窗口，JSONP的执行全过程顺利完成。<br>\n4.什么？你用的是jQuery？那再来一个使用jQuery实现JSONP的例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n            $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">async</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998\"</span><span class=\"token punctuation\">,</span>\n                dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"jsonp\"</span><span class=\"token punctuation\">,</span>\n                jsonp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)</span>\n                jsonpCallback<span class=\"token punctuation\">:</span><span class=\"token string\">\"flightHandler\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写\"?\"，jQuery会自动为你处理数据</span>\n                success<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您查询到航班信息：票价： '</span> <span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，余票： '</span> <span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                error<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>是不是有点奇怪？为什么这次没有写<code class=\"language-text\">flightHandler</code>这个函数呢？竟然也运行成功了！这就是jQuery的功劳了，在处理JSONP类型的ajax时（虽然jQuery也把JSONP归入了AJAX，但它们真的不是一回事儿），自动帮你生成回调函数并把数据取出来供success属性方法来调用，很爽有木有？</p>\n<h1 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h1>\n<ul>\n<li>\n<p>AJAX和JSONP这两种技术在调用方式上<strong>看起来很像</strong>，目的也一样，都是请求一个url，然后把服务器返回的数据进行处理，因此jQuery把JSONP作为AJAX的一种形式进行了封装；</p>\n</li>\n<li>\n<p>AJAX和JSONP其实本质上是不同的东西。AJAX的核心是通过<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XmlHttpRequest</a>获取非本页内容，而JSONP的核心则是动态添加<code class=\"language-text\">&lt;script&gt;</code>来调用服务器提供的js脚本。</p>\n</li>\n<li>\n<p>AJAX与JSONP的区别不在于是否跨域，AJAX通过服务端代理一样可以实现跨域，JSONP本身也不排斥同域的数据的获取。</p>\n</li>\n<li>\n<p>JSONP是一种方式或者说非强制性协议，如同AJAX一样，它也不一定非要用json格式来传递数据，如果你愿意，字符串都行，只不过这样不利于用JSONP提供公开服务。</p>\n</li>\n</ul>\n<p>总而言之，JSONP不是AJAX的一个特例。</p>","frontmatter":{"title":"探索AJAX和JSONP","date":"2015-08-27T09:31:37.000Z","category":"技术","tags":["json","jsonp","javascript","jquery","前端"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/json-and-jsonp/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjson\">什么是JSON</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\">什么是JSONP</a></li>\n<li><a href=\"/posts/json-and-jsonp/#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\">JSONP是怎么产生的</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\">具体实现</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ul>","excerpt":"前言 前端开发有个问题不可避免： 跨域获取异步数据 。我比较推崇的解决方式是： 用JSON传数据，靠JSONP来跨域 。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。 JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿： JSON…"},"next":{"fields":{"slug":"/posts/the-mole-story"},"html":"<h1 id=\"罗伊\"><a href=\"#%E7%BD%97%E4%BC%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗伊</h1>\n<p>前段时间看完了一部吴秀波的电视剧，《道可道》，拍摄时间比较老，但非常精彩。</p>\n<p>吴秀波饰演的一位名叫罗伊的律师。一个在别人看来自私，刻薄，狂妄，懦弱的律师，一个曾用法律为己服务，却为捍卫法律献出了生命的律师。</p>\n<p>妻子的误解，家庭破碎，婚姻结束，同事们的不理解和冷落，受陷害在看守所里遭屈辱，无法从事他喜爱的律师工作。一个个打击摧残了自负的罗伊，特立独行的罗伊，傲慢的罗伊，自以为强大的罗伊，还有善良的罗伊，一个视家庭、亲情、事业、为己生命的罗伊，他变得沉默、不再张扬、不再伶牙俐齿…</p>\n<p>也许，有人会说他不是一个好人，因为在他的眼里没有道德标准，只有法律。也许，也有人会说他不是一个好律师，因为他曾利用法律去达到自己的目的。也许，还有人会说他不是一个聪明人，竟用自己的生命做武器来捍卫法律。</p>\n<p>可你不能不承认，他是个有勇气的人。以“救人是最大的道，敬业是最大的德”为信条，为了一个执著的信念 <strong>法律面前人人平等</strong> ，可以不惜任何代价，以至于生命。</p>\n<p>电视剧里最打动我的就是罗伊给同事女儿讲《鼹鼠的故事》的桥段，他内心的孤独，无助在此时此刻爆发，这种精神上的孤独比他从小失去父母更让人感到心痛。罗伊何尝不是这个小鼹鼠呢，只想拥有一片属于自己的天空。</p>\n<h1 id=\"《鼹鼠的故事》\"><a href=\"#%E3%80%8A%E9%BC%B9%E9%BC%A0%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>《鼹鼠的故事》</h1>\n<blockquote>\n<p>森林里的草地上的草莓藤的花儿已经谢了<br>\n渐渐的白天长了<br>\n夜短了</p>\n<p>小鼹鼠在家里脚痒痒的<br>\n它觉得该到外面走一走，活动一下了</p>\n<p>对于一只鼹鼠来说<br>\n目的地是永远想不到的<br>\n你可能不相信<br>\n有一次这只小鼹鼠<br>\n竟从地下通道来到了库坦尼克城<br>\n出现在城里的广场上</p>\n<p>起初小鼹鼠只能从一条条椅子缝中间看到一条条的天空<br>\n在这个城里<br>\n广场不是你可以随便就有机会独占的<br>\n“这样的地方值得我留住吗？我应该走吗？”</p>\n<p>小鼹鼠是个流浪者<br>\n它躲在自己的洞里<br>\n有的时候它觉得拥有整个世界<br>\n可有的时候又什么都没有</p>\n<p>它每天在自己的城堡里爬来爬去<br>\n不知道上面的世界是什么样子<br>\n它很想让人知道自己是快乐的<br>\n但也是孤独的……</p>\n</blockquote>\n<h1 id=\"剧照\"><a href=\"#%E5%89%A7%E7%85%A7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>剧照</h1>\n<p><img src=\"https://zerosoul.github.io/2015/08/19/the-mole-story/luoyi.jpg\" alt=\"罗伊\"></p>\n<blockquote>\n<p><strong>亦正亦邪的罗伊</strong></p>\n</blockquote>\n<p><img src=\"https://zerosoul.github.io/2015/08/19/the-mole-story/mole_story.jpg\" alt=\"在给小女孩讲故事的罗伊\"></p>\n<blockquote>\n<p><strong>在给小女孩讲鼹鼠故事</strong></p>\n</blockquote>","frontmatter":{"title":"鼹鼠的故事","date":"2015-08-19T09:31:37.000Z","category":"随笔","tags":["吴秀波","电视剧"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/the-mole-story/#%E7%BD%97%E4%BC%8A\">罗伊</a></li>\n<li><a href=\"/posts/the-mole-story/#%E3%80%8A%E9%BC%B9%E9%BC%A0%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B\">《鼹鼠的故事》</a></li>\n<li><a href=\"/posts/the-mole-story/#%E5%89%A7%E7%85%A7\">剧照</a></li>\n</ul>","excerpt":"…"}}}