{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/style-broken-image-using-css"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>浏览网页时有时会遇到图片加载失败的场景，浏览器往往会给出一个非常丑陋的显示效果：  </p>\n<p><img src=\"https://zerosoul.github.io/2015/05/07/style-broken-image-using-css/img_err.png\" alt=\"加载失败\"><br>\n为了更好的用户体验，这里可以仅仅通过CSS来优化一下样式。恰巧最近工作上遇到了这样的需求，在此记录下自己是如何解决的。</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<p>需要注意两个偏理论上的知识点：</p>\n<ol>\n<li><code class=\"language-text\">img</code>标签是个<a href=\"https://www.w3.org/TR/CSS21/generate.html#before-after-content\">可替换元素</a>，即其呈现是由外部资源决定的，也因此<code class=\"language-text\">:before</code>和<code class=\"language-text\">:after</code>这两个伪元素对其不起作用。但是，当图片加载失败时，伪元素就能派上用场了。</li>\n<li>可以对<code class=\"language-text\">img</code>标签使用排版相关的CSS规则，比如字体，这些规则只对<code class=\"language-text\">alt</code>特性起作用。</li>\n</ol>\n<p>运用上面两个特性，我们就能做到当图片加载失败时，对其美化。</p>\n<h1 id=\"代码\"><a href=\"#%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码</h1>\n<p>使用下面结构当做例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.somewhere.com/images/broken.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>马蛋，图片加载出错了...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>图片加载失败，下面的CSS会发挥作用：  </p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Helvetica'</span><span class=\"token punctuation\">;</span> \n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 300<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span> //自此以上的css会影响alt的样式\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">img:before</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\\\f1c5\"</span> <span class=\"token string\">\" \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>alt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  //content的使用方式请自行谷歌之\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> FontAwesome<span class=\"token punctuation\">;</span> //注意使用的是font awesome 哦，别忘了引入。\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>100, 100, 100<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span> \n\n <span class=\"token selector\">img:after</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"(url: \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00aeef<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> -10px<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>最后，如果图片加载失败，将呈现如下样式：<br>\n<img src=\"https://zerosoul.github.io/2015/05/07/style-broken-image-using-css/img_err_styled.png\" alt=\"加载失败\"></p>\n<p>肿么样，是不是好看了很多！</p>","frontmatter":{"title":"使用CSS美化加载出错的图片","date":"2015-05-07T09:31:37.000Z","category":"技术","tags":["css","前端","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/style-broken-image-using-css/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/style-broken-image-using-css/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/style-broken-image-using-css/#%E4%BB%A3%E7%A0%81\">代码</a></li>\n</ul>","excerpt":"引子 浏览网页时有时会遇到图片加载失败的场景，浏览器往往会给出一个非常丑陋的显示效果：   为了更好的用户体验，这里可以仅仅通过CSS…"}}],"pathPrefix":"tags/css","first":true,"last":true,"index":1,"pageCount":1,"additionalContext":{"total":1,"tag":"css"}}}