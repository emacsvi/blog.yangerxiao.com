{"pageContext":{"slug":"/posts/jquery-best-practice","html":"<p><img src=\"https://zerosoul.github.io/2016/03/06/jquery-best-practice/jquery.jpg\" alt=\"jquery\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>使用<a href=\"http://jquery.com/\">jQuery</a>已经有两年，其<a href=\"https://api.jquery.com/\">API</a>用起来非常的爽，甚至都成为了事实上的标准，以至于好多前端小白把jQuery等同于Javascript。虽然jQuery的普及度很高，但遵循最佳实践来写jQuery代码的却寥寥无几，下面就自己在工作的积累来写一些jQuery的最佳实践（也有从网络上搜集的）。</p>\n<h1 id=\"加载jquery\"><a href=\"#%E5%8A%A0%E8%BD%BDjquery\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>加载jQuery</h1>\n<ul>\n<li>\n<p>使用CDN加载，<a href=\"http://www.paulirish.com/2010/the-protocol-relative-url/\">去掉<code class=\"language-text\">http:</code>或者<code class=\"language-text\">https:</code></a>，同时做好本地fallback。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>//ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">window<span class=\"token punctuation\">.</span>jQuery <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>'<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"js/jquery-2.1.4.min.js\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text/javascript\"</span><span class=\"token operator\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>')<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p>如果可能，请在底部加载jQuery外部文件</p>\n</li>\n<li>\n<p>有关版本问题</p>\n<ul>\n<li>如果需要支持Internet Explorer 6/7/8，那就不要使用2.x</li>\n<li>对于web app，请大胆使用最新版本的jQuery，当然，也可以选择<a href=\"http://zeptojs.com/\">zepto.js</a></li>\n<li>不要使用<a href=\"http://blog.jquery.com/2014/07/03/dont-use-jquery-latest-js/\">jquery-last.js CDN</a></li>\n</ul>\n</li>\n<li>\n<p>检测浏览器特性，请用<a href=\"http://modernizr.com/\">Modernizr</a></p>\n</li>\n</ul>\n<h1 id=\"变量\"><a href=\"#%E5%8F%98%E9%87%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>变量</h1>\n<ul>\n<li>所有的jQuery对象命名最好加个<code class=\"language-text\">$</code>前缀加以区分</li>\n<li>\n<p>缓存通过选择符获取的jQuery对象，以待复用：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token keyword\">var</span> $myDiv <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    $myDiv<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"dom操作\"><a href=\"#dom%E6%93%8D%E4%BD%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM操作</h1>\n<ul>\n<li>\n<p>对于一些较为复杂的DOM操作，可以先<code class=\"language-text\">.detach()</code>，原因<a href=\"http://learn.jquery.com/performance/detach-elements-before-work-with-them/\">参考此处</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token keyword\">var</span> $myList <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list-container > ul\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">//...在$myList上做了一系列复杂的操作后...</span>\n    \n    $myList<span class=\"token punctuation\">.</span><span class=\"token function\">appendTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list-container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>链式调用</p>\n<ul>\n<li>\n<p>链式调用让代码更具可读性</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myDiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>当调用过多时，注意合理加缩进，时刻维持代码可读性</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bold\"</span><span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myClickHandler<span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mouseover\"</span><span class=\"token punctuation\">,</span> myMouseOverHandler<span class=\"token punctuation\">)</span>\n    \n        <span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </code></pre>\n      </div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">#选择器</code></pre>\n      </div>\n</li>\n<li>\n<p>尽可能使用ID选择器，因为jQuery源码中调用的是<code class=\"language-text\">document.getElementById()</code></p>\n</li>\n<li>\n<p>当使用类选择器时，没必要再附加元素标签了</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token keyword\">var</span> $products <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.products\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// SLOW</span>\n    \n    <span class=\"token keyword\">var</span> $products <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".products\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// FAST</span></code></pre>\n      </div>\n</li>\n<li>\n<p>对于像<em>Id->Child</em>这样的嵌套选择器，使用<code class=\"language-text\">.find()</code>性能更好些，因为id选择器不走Sizzle引擎，这能节约一些性能损耗。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD, 全部走的Sizzle选择器引擎</span>\n    \n    <span class=\"token keyword\">var</span> $productIds <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#products div.id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// GOOD, #products 走的是document.getElementById()，因此只有div.id走Sizzle 选择器引擎</span>\n    \n    <span class=\"token keyword\">var</span> $productIds <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#products\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>选择器父类越模糊越好，子类越详细越好。<a href=\"http://learn.jquery.com/performance/optimize-selectors/\">参考此处</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token comment\">// 未经优化的</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.data .gonzalez\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// 优化后的</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".data td.gonzalez\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>给选择器以上下文</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// SLOWER 遍历了整个文档的class</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.class'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// FASTER 只在#class-container下遍历</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.class'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'#class-container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>避免使用通配符<code class=\"language-text\">*</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div.container > *'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div.container'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BETTER</span></code></pre>\n      </div>\n</li>\n<li>\n<p>没有必要嵌套或组合使用ID选择器</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#outer #inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div#inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.outer-container #inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#inner'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GOOD,  document.getElementById()搞定一切</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"事件\"><a href=\"#%E4%BA%8B%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>事件</h1>\n<ul>\n<li>\n<p>每个页面有且仅有一个DOMReady事件，便于调试。</p>\n</li>\n<li>\n<p>尽量不要使用匿名函数来用作事件处理，因为不利于调试，测试，维护和复用。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token comment\">// GOOD</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">myLinkClickHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myLinkClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>避免HTML结构中声明并绑定事件处理函数，这非常不利于调试，也破坏了HTML紧做结构表现的职责。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\">    <span class=\"token comment\">&lt;!-- BAD --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myLink<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onclick</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>myEventHandler();<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>my link<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">    \n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myLink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myEventHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GOOD</span></code></pre>\n      </div>\n</li>\n<li>\n<p>使用<a href=\"http://learn.jquery.com/events/event-delegation/\">事件代理机制</a>，一个明显的好处就是当有新子元素插入时，不用重新绑定事件，<a href=\"http://api.jquery.com/on/#direct-and-delegated-events\">参考此处</a>。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> myClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD, 相当于给list下的所有a元素都绑定了click事件.</span>\n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> myClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//GOOD, 只给父元素list绑定了click事件.</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"ajax\"><a href=\"#ajax\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ajax</h1>\n<ul>\n<li>\n<p>熟习<code class=\"language-text\">$.ajax()</code>，尽量不要用<code class=\"language-text\">.get()</code>,<code class=\"language-text\">.getJson()</code>这样的简洁方式。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">//ajax模板</span>\n    <span class=\"token keyword\">var</span> jqxhr <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">,</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认GET</span>\n        cache<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 默认true, 但对于dataType为'script'或者'jsonp'，则为false</span>\n        data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 请求附带的参数</span>\n        dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span> \n        jsonp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 指定回调参数的名称</span>\n        statusCode<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 在此指定相应的响应状态的回调函数</span>\n            <span class=\"token number\">404</span><span class=\"token punctuation\">:</span> handler404<span class=\"token punctuation\">,</span>\n            <span class=\"token number\">500</span><span class=\"token punctuation\">:</span> handler500\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span>successHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span>failureHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>请求地址最好用<em>无协议的URL</em>，即去除<code class=\"language-text\">http:/https:</code></p>\n</li>\n<li>\n<p>使用<code class=\"language-text\">data</code>对象传送数据，而非附加在URL里</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// 可读性不好...</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"something.php?param1=test1&amp;param2=test2\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 更具可读性...</span>\n    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"something.php\"</span><span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> param1<span class=\"token punctuation\">:</span> test1<span class=\"token punctuation\">,</span> param2<span class=\"token punctuation\">:</span> test2 <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>使用Promise风格，<a href=\"http://www.htmlgoodies.com/beyond/javascript/making-promises-with-jquery-deferred.html\">例子</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>successHandler<span class=\"token punctuation\">,</span> failureHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// OR</span>\n    <span class=\"token keyword\">var</span> jqxhr <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span>successHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jqxhr<span class=\"token punctuation\">.</span><span class=\"token function\">fail</span><span class=\"token punctuation\">(</span>failureHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"动画效果\"><a href=\"#%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>动画效果</h1>\n<ul>\n<li>不要滥用动画效果，或者干脆不用，直到PM有切实需求。</li>\n<li>如果用动画，优先使用像<code class=\"language-text\">show/hide</code>和<code class=\"language-text\">slideUp/slideDown</code>这样的简单API</li>\n</ul>\n<h1 id=\"插件\"><a href=\"#%E6%8F%92%E4%BB%B6\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>插件</h1>\n<ul>\n<li>优先考虑有良好文档，有测试用例，有社区支持的插件</li>\n<li>使用插件前不要忘记检测与你正在使用的jQuery版本是否冲突</li>\n<li>任何可复用的组件都应该插件化，这里有个<a href=\"https://john-dugan.com/jquery-plugin-boilerplate-explained/\">插件模板</a>。</li>\n</ul>\n<h1 id=\"其他\"><a href=\"#%E5%85%B6%E4%BB%96\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其他</h1>\n<ul>\n<li>\n<p>使用对象字面量设置特性</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD</span>\n    $myLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"href\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"my link\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"external\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n    <span class=\"token comment\">// GOOD</span>\n    $myLink<span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        href<span class=\"token punctuation\">:</span> <span class=\"token string\">\"#\"</span><span class=\"token punctuation\">,</span>\n        title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"my link\"</span><span class=\"token punctuation\">,</span>\n        rel<span class=\"token punctuation\">:</span> <span class=\"token string\">\"external\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p>避免使用jQuery添加CSS</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token comment\">// BAD</span>\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#mydiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'color'</span><span class=\"token punctuation\">:</span>red<span class=\"token punctuation\">,</span> <span class=\"token string\">'font-weight'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'bold'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// BAD</span></code></pre>\n      </div>\n<p>定义好CSS rule</p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\">    <span class=\"token selector\">.error</span> <span class=\"token punctuation\">{</span> <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span> <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> /\\* GOOD */</code></pre>\n      </div>\n<p>然后通过jQuery添加class</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#mydiv\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// GOOD</span></code></pre>\n      </div>\n</li>\n</ul>\n<h1 id=\"优秀资源\"><a href=\"#%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>优秀资源</h1>\n<ul>\n<li><a href=\"http://api.jquery.com/\">jQuery API Docs</a></li>\n<li><a href=\"http://learn.jquery.com/\">jQuery Learn</a></li>\n<li><a href=\"http://learn.jquery.com/performance/\">jQuery Performance</a></li>\n<li><a href=\"https://john-dugan.com/jquery-plugin-boilerplate-explained/\">A jQuery Plugin Boilerplate Explained</a></li>\n</ul>","frontmatter":{"title":"jQuery最佳实践","date":"2016-03-06T09:31:37.000Z","category":"技术","tags":["前端","备忘","jQuery","最佳实践"],"cover":null},"excerpt":"前言 使用 jQuery 已经有两年，其 API 用起来非常的爽，甚至都成为了事实上的标准，以至于好多前端小白把jQuery等同于Javascript。虽然jQuery的普及度很高，但遵循最佳实践来写jQuery代码的却寥寥无几，下面就自己在工作的积累来写一些jQuery…","tableOfContents":"<ul>\n<li><a href=\"/posts/jquery-best-practice/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%8A%A0%E8%BD%BDjquery\">加载jQuery</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%8F%98%E9%87%8F\">变量</a></li>\n<li><a href=\"/posts/jquery-best-practice/#dom%E6%93%8D%E4%BD%9C\">DOM操作</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E4%BA%8B%E4%BB%B6\">事件</a></li>\n<li><a href=\"/posts/jquery-best-practice/#ajax\">Ajax</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C\">动画效果</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E6%8F%92%E4%BB%B6\">插件</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E5%85%B6%E4%BB%96\">其他</a></li>\n<li><a href=\"/posts/jquery-best-practice/#%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90\">优秀资源</a></li>\n</ul>","prev":{"fields":{"slug":"/posts/explore-object-assign"},"html":"<p><img src=\"https://zerosoul.github.io/2016/03/25/explore-object-assign/obj.jpg\" alt=\"extend obj\"></p>\n<h1 id=\"起因\"><a href=\"#%E8%B5%B7%E5%9B%A0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起因</h1>\n<p>最近在重构以前写过的<strong>javascript</strong>代码，目的是为了去掉对<strong>jQuery</strong>的依赖。其中有多处用到了<a href=\"http://api.jquery.com/jQuery.extend/\"><code class=\"language-text\">$.extend()</code></a>方法，自然而然会想到这么一个问题：如何用自己的方式来实现？</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<p>首先，定义函数的功能：<strong>传入多个对象，将多个对象的内容合并到第一个对象中，最后返回合并后的对象，即参数中的第一个对象。</strong>这样的定义是否似曾相识？没错，和ES6中的新特性<code class=\"language-text\">Object.assign()</code>几乎一模一样。所以，可以从探索<code class=\"language-text\">Object.assign()</code>开始。</p>\n<h1 id=\"探索objectassign\"><a href=\"#%E6%8E%A2%E7%B4%A2objectassign\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>探索Object.assign()</h1>\n<p><code class=\"language-text\">Object.assign(target, ...sources)</code></p>\n<h1 id=\"使用场景\"><a href=\"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用场景</h1>\n<h2 id=\"拷贝对象\"><a href=\"#%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>拷贝对象</h2>\n<p>只需要传入的第一个参数是空对象即可：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> copy <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { foo: 1 }</span></code></pre>\n      </div>\n<h2 id=\"合并对象\"><a href=\"#%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>合并对象</h2>\n<p>注意第一个传参将会被改变，所以如果不想改变第一个有值参数，可以传入一个空对象：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> o1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> o2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> b<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> o3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> c<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">,</span> o2<span class=\"token punctuation\">,</span> o3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { a: 1, b: 2, c: 3 }</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// { a: 1, b: 2, c: 3 }, 注意第一个参数，即o1有了变化。</span></code></pre>\n      </div>\n<h1 id=\"注意事项\"><a href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>注意事项</h1>\n<ul>\n<li>\n<p>在<code class=\"language-text\">Object.assign()</code>中，原型属性和非可枚举属性不会被拷贝。（<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties\">两种属性的解释</a>）</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> foo<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// foo是obj原型链上的属性</span>\n  bar<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span>  <span class=\"token comment\">// bar 是非可枚举（non-enumerable）属性.</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  baz<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    enumerable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>  <span class=\"token comment\">// baz是可枚举属性.</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> copy <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { baz: 3 }，只拷贝了baz属性</span></code></pre>\n      </div>\n</li>\n<li>\n<p>元类型会被转化为对象</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> v1 <span class=\"token operator\">=</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> v2 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> v3 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> obj <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">,</span> undefined<span class=\"token punctuation\">,</span> v3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">//元类型里面的字符串被转化为字符数组，null和undefined被忽略</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// { \"0\": \"a\", \"1\": \"b\", \"2\": \"c\" }</span></code></pre>\n      </div>\n</li>\n<li>\n<p>异常会抛出，但是已经执行的代码会生效</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> target <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  writable<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// target.foo 为只读属性</span>\nObject<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> bar<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> foo2<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> foo<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> foo3<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> baz<span class=\"token punctuation\">:</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 会抛出异常：TypeError: \"foo\" is read-only，但是之前的赋值操作已经生效。</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>foo2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>foo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 1, 异常就是在这儿发生的，所以还是1</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>foo3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>baz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// undefined</span></code></pre>\n      </div>\n<h1 id=\"pollyfill\"><a href=\"#pollyfill\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pollyfill</h1>\n</li>\n</ul>\n<p>上面是对<code class=\"language-text\">Object.assign()</code>概念层面的探索，由于要考虑旧版本浏览器兼容性问题，需要写一个<strong>pollyfill</strong>，其实这才是重头戏。不过，只有理解了<code class=\"language-text\">Object.assign()</code>都干了些什么，才有可能写出来：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> Object<span class=\"token punctuation\">.</span>assign <span class=\"token operator\">!=</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      Object<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">assign</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//第一个传参不能是undefined和null，因为它们不能被转为对象</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">===</span> undefined <span class=\"token operator\">||</span> target <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Can not convert undefined or null to object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token comment\">//使用Object对象化target</span>\n        <span class=\"token keyword\">var</span> output <span class=\"token operator\">=</span> <span class=\"token function\">Object</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>l<span class=\"token operator\">=</span>arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> l<span class=\"token punctuation\">;</span> idx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">var</span> source <span class=\"token operator\">=</span> arguments<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token comment\">//后续传参也需要判断undefined和null</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>source <span class=\"token operator\">!==</span> undefined <span class=\"token operator\">&amp;&amp;</span> source <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> key <span class=\"token keyword\">in</span> source<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>hasOwnProperty<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                output<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> source<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n              <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> output<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"结束\"><a href=\"#%E7%BB%93%E6%9D%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结束</h1>\n<p>好了，现在可以在宿主环境大胆使用<code class=\"language-text\">Object.assign()</code>了，Let’s rock it~~~</p>\n<h1 id=\"参考链接：\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考链接：</h1>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\">MDN:Object.assign()</a></p>","frontmatter":{"title":"探索Object.assign()","date":"2016-03-25T09:31:37.000Z","category":"技术","tags":["javascript","ES6","前端"],"cover":"https://zerosoul.github.io/2016/03/25/explore-object-assign/obj.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/explore-object-assign/#%E8%B5%B7%E5%9B%A0\">起因</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E6%8E%A2%E7%B4%A2objectassign\">探索Object.assign()</a></li>\n<li>\n<p><a href=\"/posts/explore-object-assign/#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\">使用场景</a></p>\n<ul>\n<li><a href=\"/posts/explore-object-assign/#%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1\">拷贝对象</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E5%90%88%E5%B9%B6%E5%AF%B9%E8%B1%A1\">合并对象</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/explore-object-assign/#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">注意事项</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E7%BB%93%E6%9D%9F\">结束</a></li>\n<li><a href=\"/posts/explore-object-assign/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5%EF%BC%9A\">参考链接：</a></li>\n</ul>","excerpt":"起因 最近在重构以前写过的 javascript 代码，目的是为了去掉对 jQuery…"},"next":{"fields":{"slug":"/posts/how-to-interview"},"html":"<p><img src=\"https://zerosoul.github.io/2016/03/06/how-to-interview/areyouok.png\" alt=\"are you ready\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>最近公司在招前端，一件说大不大，说小不小的事情。第一次当起了面试官，不敢掉以轻心，准备工作要做足，毕竟要招进来的人是经常朝夕相处的同事，靠谱些为好。经过几天的实践与反思，总结了一套适合自己的面试问题，希望对一些人有所启发。每个题目都没有标准答案，注重的是答题的思路以及对问题本身的拓展，有些给出了<strong>参考链接</strong>，都是我曾经读过的文章，恩，如果英语不过关，祝好运。</p>\n<h1 id=\"面试题\"><a href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>面试题</h1>\n<h2 id=\"预热\"><a href=\"#%E9%A2%84%E7%83%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>预热</h2>\n<ul>\n<li>\n<p><strong>昨天或者最近这一周，学了些什么？</strong><br>\n前端这个工种是依托互联网的繁荣快速发展起来的，因而也就促使着前端不断革新技术来满足日新月异的互联网。学习不是为了跟风，什么新学什么，而是为了完善和更新自己的技能树，保持核心竞争力。如果能从这个问题的回答看出你有阅读，学习，实践的习惯，那就更好了。</p>\n</li>\n<li>\n<p><strong>如果今年想掌握一门新技术，会是什么？为什么选择它？</strong><br>\n如果说上面那个问题是战术问题，那么这个应该就是战略问题。无论想横向发展还是纵向发展，都逃不脱一个<strong>成长</strong>的话题，透过这个问题，可以了解下应聘者的技术视野，同时也是其成长的方向与潜力。</p>\n</li>\n<li>\n<p><strong>最近有没有遇到些问题？你是如何解决的？</strong><br>\n这个问题比较开放，即使遇到的不是技术问题，也可以回答，比如，遇到的问题是马桶堵了，也可以说出来。主要是了解下应聘者解决问题的思路。</p>\n</li>\n<li>\n<p><strong>谈谈你的开发流程与环境</strong><br>\n有多热爱开发，就得有多热心于开发环境的打磨，因为上班的绝大部分时间都是沉浸在这个环境下，舒适度很重要。</p>\n</li>\n<li>\n<p><strong>有没有在线的得意之作，为了完成这个作品，用到了哪些工具，你贡献了哪些功能或者想法，能谈谈吗？</strong><br>\n有些前端业余会做一些小项目，实践新知的同时涨涨姿势。这些小作品往往能给面试锦上添花。</p>\n</li>\n<li>\n<p><strong>有写博客吗？</strong><br>\n写博客是一种输出，也是一种沉淀，即便不怎么写技术类文章，能坚持写的，是靠谱特征之一。</p>\n</li>\n</ul>\n<h2 id=\"html\"><a href=\"#html\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML</h2>\n<p>HTML是骨架，是基础。语义化标签，SEO，兼容性，加载和渲染顺序与性能等等，在写HTML代码时都需要考虑进来。</p>\n<ul>\n<li>\n<p><strong>大概写一下你常用的HTML骨架（PC&#x26;Mobile）</strong></p>\n</li>\n<li>\n<p><strong>Quirks Mode（怪异模式）和Standards Mode（标准模式）的异同点</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Quirks_Mode_and_Standards_Mode\">参考链接</a></p>\n</li>\n<li>\n<p><strong>什么是Flash of Unstyled Content（FOUC），如何避免？</strong><br>\n<a href=\"http://www.techrepublic.com/blog/web-designer/how-to-prevent-flash-of-unstyled-content-on-your-websites/\">参考链接</a></p>\n</li>\n<li>\n<p><strong>尽可能多地列举出HTML5新标签</strong><br>\n基础问题，如果不能列举出三个以上，下面那个问题也没必要问了。</p>\n</li>\n<li>\n<p><strong>HTML5的新特性里面，你最喜欢哪个？为什么？</strong><br>\n开放性问题，目的在于了解对HTML5的认知与实践。</p>\n</li>\n<li>\n<p><strong>cookie,localStorage和sessionStorage 异同点</strong><br>\n<a href=\"http://stackoverflow.com/questions/19867599/what-is-the-difference-between-localstorage-sessionstorage-session-and-cookies\">参考链接</a></p>\n</li>\n<li>\n<p><strong>解释下CORS，怎样使用</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\">参考链接</a></p>\n</li>\n<li>\n<p><strong>script标签 <code class=\"language-text\">async</code> 与<code class=\"language-text\">defer</code>两个特性的异同点</strong><br>\n<a href=\"http://www.growingwiththeweb.com/2014/02/async-vs-defer-attributes.html\">参考链接</a></p>\n</li>\n<li>\n<p><strong>CSS放在head标签头部，js放在body标签底部，有啥优点？可不可以不这样？</strong><br>\n<a href=\"http://stackoverflow.com/a/25275805\">参考链接</a></p>\n</li>\n</ul>\n<ul>\n<li><strong><code class=\"language-text\">event.PreventDefault</code>，<code class=\"language-text\">event.stopPropagation</code>与<code class=\"language-text\">return false</code>异同点</strong><br>\n<a href=\"http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false\">参考链接</a></li>\n</ul>\n<h2 id=\"css\"><a href=\"#css\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS</h2>\n<p>CSS是我的薄弱项，只考察基础，但是有这些基础我认为也就够了。任重道远，共勉。</p>\n<ul>\n<li>\n<p><strong>尽可能多地列举display属性值，追问：<code class=\"language-text\">inline</code>和<code class=\"language-text\">inline-block</code>的区别</strong></p>\n</li>\n<li>\n<p><strong>尽可能多地列举position属性值，追问：<code class=\"language-text\">absolute</code>是怎么工作的</strong></p>\n</li>\n<li>\n<p><strong>为什么会产生浮动，清除浮动的技巧</strong><br>\n<a href=\"http://www.sitepoint.com/clearing-floats-overview-different-clearfix-methods/\">参考链接</a></p>\n</li>\n<li>\n<p><strong>描述下你对盒模型的理解，通过CSS怎么告知浏览器使用不同的盒模型</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model\">参考链接</a></p>\n</li>\n<li>\n<p><strong>解释下Block Formatting Content (BFC)，它是如何工作的</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Block_formatting_context\">参考链接</a></p>\n</li>\n<li>\n<p><strong>使用过哪些CSS框架？有没有试过更改或者改进它们？</strong><br>\n开放性问题，目测一般会回答Bootstrap。</p>\n</li>\n</ul>\n<h2 id=\"javascript\"><a href=\"#javascript\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Javascript</h2>\n<p>公司项目中写交互的场景比较多，所以这一块是重点考察的，虽然平时都使用jQuery，但有javascript的基础更为重要。</p>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">===</code>与<code class=\"language-text\">==</code>异同点</strong><br>\n基础问题，这个如果表现出不知所措，就没必要往下进行了。</p>\n</li>\n<li>\n<p><strong>实现下面的函数</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">duplicate</span><span class=\"token punctuation\">(</span>\\<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span>\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\\[1,2,3,1,2,3\\]</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>描述下document.write()使用场景</strong></p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">onload</code>和 <code class=\"language-text\">$(document).ready</code>的区别</strong><br>\n<a href=\"http://stackoverflow.com/questions/3698200/window-onload-vs-document-ready\">参考链接</a></p>\n</li>\n<li>\n<p><strong>immediately-invoked function expression（IIFE）的工作原理</strong><br>\n<a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/#iife\">参考链接</a></p>\n</li>\n<li>\n<p><strong>谈一下你对javascript中<code class=\"language-text\">this</code>的理解</strong><br>\n<a href=\"http://javascriptissexy.com/understand-javascripts-this-with-clarity-and-master-it/\">参考链接</a></p>\n</li>\n<li>\n<p><strong>事件代理(Event Delegation)</strong><br>\n<a href=\"https://davidwalsh.name/event-delegate\">参考链接</a></p>\n</li>\n<li>\n<p><strong>闭包是什么？举例它在实际工作的应用</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures\">参考链接</a></p>\n</li>\n<li>\n<p><strong>说出下面代码Person函数使用的区别</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> person1<span class=\"token operator\">=</span><span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> person2<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong><code class=\"language-text\">call</code>和<code class=\"language-text\">apply</code>的异同点</strong><br>\n<a href=\"http://stackoverflow.com/questions/1986896/what-is-the-difference-between-call-and-apply\">参考链接</a></p>\n</li>\n<li>\n<p><strong>你是如何理解</strong>hoisting<strong>的</strong><br>\n<a href=\"http://www.adequatelygood.com/JavaScript-Scoping-and-Hoisting.html\">参考链接</a></p>\n</li>\n<li>\n<p><strong>尽可能详细地解释下AJAX，请写出创建并发送一个AJAX请求的过程。</strong><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/AJAX\">参考链接</a></p>\n</li>\n<li>\n<p><strong>解释下JSONP，为什么说它不是真正的AJAX?</strong><br>\n<a href=\"http://stackoverflow.com/questions/7115940/difference-between-ajax-restful-rest-json-and-jsonp\">参考链接</a></p>\n</li>\n<li>\n<p><strong>当写<code class=\"language-text\">onscroll</code>事件的回调函数时，你能想到的最佳实践是什么？</strong><br>\n<a href=\"https://dannyvankooten.com/delay-scroll-handlers-javascript/\">参考链接</a></p>\n</li>\n</ul>\n<h2 id=\"jquery\"><a href=\"#jquery\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jQuery</h2>\n<p>公司项目中，用到了jQuery，所以有必要考察一下这方面的基础，其实如果前面问题回答的足够出色，这一块可以忽略，因为相信有了前面的基础，jQuery上手会很快。</p>\n<ul>\n<li>\n<p><strong>jQuery是个框架还是类库，为什么使用？</strong></p>\n</li>\n<li>\n<p><strong>如何使用jQuery获取元素的属性</strong></p>\n</li>\n<li>\n<p><strong>如何使用jQuery同时选取多个元素</strong></p>\n</li>\n<li>\n<p><strong>单击下面P标签，其背景色变为黑色，再单击回复原来颜色，使用jQuery实现</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>test_tag<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>点我变色，再点我恢复<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n</li>\n<li>\n<p><strong>大概写出jQuery下AJAX使用场景</strong></p>\n</li>\n</ul>\n<h2 id=\"其它\"><a href=\"#%E5%85%B6%E5%AE%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>其它</h2>\n<ul>\n<li>\n<p><strong>为什么说在多个域名下存放静态资源会好一些？</strong></p>\n</li>\n<li>\n<p><strong>浏览器地址栏输入URL敲回车那一刻起到页面完全呈现出，尽可能详细描述出中间发生了什么。</strong></p>\n</li>\n<li>\n<p><strong>长轮询，Websocket，SSE</strong></p>\n</li>\n<li>\n<p><strong>HTTP Method 有哪些，尽可能多地列举</strong></p>\n</li>\n</ul>\n<h1 id=\"结束\"><a href=\"#%E7%BB%93%E6%9D%9F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结束</h1>\n<p>以上是我经过思考与总结的一套前端技术面试题，大部分都能在网上找到答案。当然，面试时不会都问到，随机选七八个问题就差不多了。前端远不止这些，有很多比较成熟的技术并没有提及，比如NODE.js，比如Angular.js，再比如React.js，但招聘的目的不是为了炫技，更不是要故意为难应聘者，而是筛选出适合公司发展的人员。可以参考，但不要照搬，靠谱与否，自己衡量。</p>\n<h1 id=\"参考\"><a href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<ul>\n<li><a href=\"https://github.com/h5bp/Front-end-Developer-Interview-Questions\">Front-end Job Interview Questions</a></li>\n</ul>","frontmatter":{"title":"前端面试题的思考","date":"2016-03-06T09:31:37.000Z","category":"阅读笔记","tags":["前端","备忘","面试","成长"],"cover":"https://zerosoul.github.io/2016/03/06/how-to-interview/areyouok.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/how-to-interview/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li>\n<p><a href=\"/posts/how-to-interview/#%E9%9D%A2%E8%AF%95%E9%A2%98\">面试题</a></p>\n<ul>\n<li><a href=\"/posts/how-to-interview/#%E9%A2%84%E7%83%AD\">预热</a></li>\n<li><a href=\"/posts/how-to-interview/#html\">HTML</a></li>\n<li><a href=\"/posts/how-to-interview/#css\">CSS</a></li>\n<li><a href=\"/posts/how-to-interview/#javascript\">Javascript</a></li>\n<li><a href=\"/posts/how-to-interview/#jquery\">jQuery</a></li>\n<li><a href=\"/posts/how-to-interview/#%E5%85%B6%E5%AE%83\">其它</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/how-to-interview/#%E7%BB%93%E6%9D%9F\">结束</a></li>\n<li><a href=\"/posts/how-to-interview/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","excerpt":"…"}}}