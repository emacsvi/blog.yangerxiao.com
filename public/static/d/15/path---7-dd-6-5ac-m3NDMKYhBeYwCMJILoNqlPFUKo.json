{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/json-and-jsonp"},"html":"<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>前端开发有个问题不可避免：<strong>跨域获取异步数据</strong>。我比较推崇的解决方式是：<strong>用JSON传数据，靠JSONP来跨域</strong>。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。</p>\n<p>JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿：<strong>JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。一个是描述信息的格式，一个是信息传递双方约定的方法。</strong></p>\n<h1 id=\"什么是json\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjson\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSON</h1>\n<p>有关JSON的概念，曾经写过一篇文章专述，请<a href=\"https://zerosoul.github.io/2015/06/18/explore-json/\">移步这里</a>。</p>\n<p>概括下其优点：</p>\n<ul>\n<li>基于纯文本，跨平台传递；</li>\n<li>Javascript原生支持，后台语言几乎全部支持；</li>\n<li>轻量级数据格式，占用字符少，特别适合网络传递；</li>\n<li>可读性较强，虽然比不上XML一目了然，但在合理的缩进之后还是易识别的；</li>\n<li>容易编写和解析；</li>\n</ul>\n<h1 id=\"什么是jsonp\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSONP</h1>\n<h1 id=\"jsonp是怎么产生的\"><a href=\"#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSONP是怎么产生的</h1>\n<p>我试着用自己的方式来阐释一下这个问题：</p>\n<ol>\n<li>一个众所周知的问题，AJAX直接请求普通文件存在跨域访问的问题，甭管网页是静态的还是动态的，只要是跨域请求，一律不准；</li>\n<li>不过，WEB页面上调用js文件时则不受是否跨域的影响（不仅如此，凡是拥有<code class=\"language-text\">src</code>这个属性的标签都有跨域的能力，比如<code class=\"language-text\">&lt;script&gt;</code>、<code class=\"language-text\">&lt;img&gt;</code>、<code class=\"language-text\">&lt;iframe&gt;</code>）；</li>\n<li>于是可以判断，当前阶段如果想通过纯WEB端（ActiveX控件、服务端代理、属于未来的HTML5之Websocket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js文件里，供客户端调用和进一步处理；</li>\n<li>JSON的纯字符数据格式可以简洁的描述复杂数据，更妙的是JSON被javascript原生支持，所以在客户端几乎可以随心所欲的处理这种格式的数据；</li>\n<li>这样子解决方案就水到渠成了，WEB客户端通过与调用脚本一模一样的方式，来调用跨域服务器上动态生成的js格式文件（一般以JSON为后缀），显而易见，服务器之所以要动态生成JSON文件，目的就在于把客户端需要的数据装入进去。</li>\n<li>客户端在对JSON文件调用成功之后，也就获得了自己所需的数据，剩下的就是按照自己需求进行处理和展现了，这种获取远程数据的方式看起来非常像AJAX，但其实并不一样。</li>\n<li>为了便于客户端使用数据，逐渐形成了一种非正式传输协议，人们把它称作JSONP，该协议的一个要点就是允许用户传递一个<code class=\"language-text\">callback</code>参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。</li>\n</ol>\n<p>我想JSONP的发展历程大概就是这样子，应该八九不离十，下面看一看具体实现。</p>\n<h1 id=\"具体实现\"><a href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>具体实现</h1>\n<p>1.远程服务器<code class=\"language-text\">remote.server.com</code>根目录下有个<code class=\"language-text\">remote.js</code>文件代码如下：  </p>\n<p>1</p>\n<p>alert('我来自远程文件');</p>\n<p>本地服务器<code class=\"language-text\">local.server.com</code>下有个测试页面<code class=\"language-text\">test.html</code>代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>毫无疑问，页面将会弹出一个提示窗体，显示跨域调用成功。<br>\n2.现在<code class=\"language-text\">test.html</code>页面定义一个函数，然后在远程<code class=\"language-text\">remote.js</code>中传入数据进行调用。  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">localHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是本地函数，可以被跨域的remote.js文件调用，远程js带来的数据是：'</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>remote.js文件代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">localHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"我是远程js带来的数据\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>运行之后查看结果，页面成功弹出提示窗口，显示本地函数被跨域的远程js调用成功，并且还接收到了远程js带来的数据。很好，跨域远程获取数据的目的基本实现了，但是又一个问题出现了，怎么让远程js知道它应该调用的本地函数叫什么名字呢？毕竟是JSONP的服务者都要面对很多服务对象，而这些服务对象各自的本地函数都不相同啊？</p>\n<p>3.很容易想到，只要服务端提供的js脚本是动态生成的就行了，这样调用者可以传一个参数过去告诉服务端“我想要一段调用XXX函数的js代码，请你返回给我”，于是服务器就可以按照客户端的需求来生成js脚本并响应了。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n    <span class=\"token comment\">// 得到航班信息查询结果后的回调函数</span>\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">flightHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你查询的航班结果是：票价 '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'余票 '</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 提供jsonp服务的url地址（不管是什么类型的地址，最终生成的返回值都是一段javascript代码）</span>\n    <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998&amp;callback=flightHandler\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 创建script标签，设置其属性</span>\n    <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 把script标签加入head，此时调用开始</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span>\\<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>这次的代码变化比较大，不再直接把远程js文件写死，而是编码实现动态查询，而这也正是JSONP客户端的核心部分。</p>\n<p>调用的url中传递了一个code参数，告诉服务器我要查的是<strong>CA1998</strong>次航班的信息，而<strong>callback</strong>参数则告诉服务器，我的本地回调函数叫做<strong>flightHandler</strong>，所以请把查询结果传入这个函数中进行调用。</p>\n<p>服务器很聪明，这个叫做flightResult.aspx的页面生成了一段这样的代码提供给test.html（服务端的实现这里就不演示了，与选用的语言无关，说到底就是拼接字符串）：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">flightHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CA1998\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1780</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"tickets\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>传递给flightHandler函数的是一个JSON，它描述了航班的基本信息。运行页面，成功弹出提示窗口，JSONP的执行全过程顺利完成。<br>\n4.什么？你用的是jQuery？那再来一个使用jQuery实现JSONP的例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n            $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">async</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n                url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998\"</span><span class=\"token punctuation\">,</span>\n                dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"jsonp\"</span><span class=\"token punctuation\">,</span>\n                jsonp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)</span>\n                jsonpCallback<span class=\"token punctuation\">:</span><span class=\"token string\">\"flightHandler\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token comment\">//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写\"?\"，jQuery会自动为你处理数据</span>\n                success<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您查询到航班信息：票价： '</span> <span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，余票： '</span> <span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                error<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>是不是有点奇怪？为什么这次没有写<code class=\"language-text\">flightHandler</code>这个函数呢？竟然也运行成功了！这就是jQuery的功劳了，在处理JSONP类型的ajax时（虽然jQuery也把JSONP归入了AJAX，但它们真的不是一回事儿），自动帮你生成回调函数并把数据取出来供success属性方法来调用，很爽有木有？</p>\n<h1 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h1>\n<ul>\n<li>\n<p>AJAX和JSONP这两种技术在调用方式上<strong>看起来很像</strong>，目的也一样，都是请求一个url，然后把服务器返回的数据进行处理，因此jQuery把JSONP作为AJAX的一种形式进行了封装；</p>\n</li>\n<li>\n<p>AJAX和JSONP其实本质上是不同的东西。AJAX的核心是通过<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XmlHttpRequest</a>获取非本页内容，而JSONP的核心则是动态添加<code class=\"language-text\">&lt;script&gt;</code>来调用服务器提供的js脚本。</p>\n</li>\n<li>\n<p>AJAX与JSONP的区别不在于是否跨域，AJAX通过服务端代理一样可以实现跨域，JSONP本身也不排斥同域的数据的获取。</p>\n</li>\n<li>\n<p>JSONP是一种方式或者说非强制性协议，如同AJAX一样，它也不一定非要用json格式来传递数据，如果你愿意，字符串都行，只不过这样不利于用JSONP提供公开服务。</p>\n</li>\n</ul>\n<p>总而言之，JSONP不是AJAX的一个特例。</p>","frontmatter":{"title":"探索AJAX和JSONP","date":"2015-08-27T09:31:37.000Z","category":"技术","tags":["json","jsonp","javascript","jquery","前端"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/json-and-jsonp/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjson\">什么是JSON</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\">什么是JSONP</a></li>\n<li><a href=\"/posts/json-and-jsonp/#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\">JSONP是怎么产生的</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\">具体实现</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ul>","excerpt":"前言 前端开发有个问题不可避免： 跨域获取异步数据 。我比较推崇的解决方式是： 用JSON传数据，靠JSONP来跨域 。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。 JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿： JSON…"}},{"node":{"fields":{"slug":"/posts/an-inquiry-into-the-value-of-work"},"html":"<h1 id=\"摘记\"><a href=\"#%E6%91%98%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>摘记</h1>\n<p>修车师傅靠的是自己的知识和经验。面对像“这辆车没事吧”这种问题，他的回答直截了当，根本不用考虑什么办公室政治，无需受制于什么中央权力。每天工作结束后，他可以看到自己实实在在的工作成果，为自己解决的那些问题而自豪。</p>\n<p>节俭只是一个表面的经济原因，自力更生实际上是为了满足更深层次的一种需求：我们必须感受到这个世界是可以被理解和把控的，我们可以承担起相应的责任。</p>\n<p>通过动手能力来向世界实实在在地证明自己，由此带来的满足感能让人感到轻松平静。</p>\n<p><strong>工匠精神意味着长期致力于一项工作，深入地钻研它，因为你想把它做好。</strong></p>\n<p><strong>创造力是精通的副产品，而精通只能通过长期的实践来培养。</strong>只有不断地屈从于既定规则，才能实现对某项事务的精通。</p>\n<p>对于那些希望依靠自身力量生活的人而言，手工艺业自然而然地成为了他们的乐土：自由自在，既不受麻木抽象的拘束，也不受当今经济生活两大特色——骗人的美梦及与日俱增的不安全感影响。无欲无求，远离恐惧，正是标准的淡泊之人。</p>\n<h1 id=\"译者后记\"><a href=\"#%E8%AF%91%E8%80%85%E5%90%8E%E8%AE%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>译者后记</h1>\n<p>曾几何时，中国大地上开始盛行白领。白领给人们的印象就是衣着光鲜，西装革履，手提公文包，出入高档写字楼。于是年轻人的志愿就变成大学毕业后加入白领的浩荡队伍，在格子间里占据一席之地。但慢慢地，许多人开始质疑究竟什么是白领。忙碌工作一天后，却说不清楚自己一整天到底干了什么，失落感如影随形，日子越过越麻木。那份工作恰如鸡肋，弃之可惜，食之无味。幸福感究竟在哪里？</p>\n<p>现在有些大学生在毕业后就失业，他们梦想的是白领的光鲜生活，但能力有限，经验有限，机会有限，梦想无法得以实现。不过许多人又不肯放下架子，到基层去工作，去学习，认为有失身份。当看到大学生毕业后去养猪，去卖猪肉，或者去擦皮鞋的新闻时，人们莫不为之可惜，认为书白读了。其实他们不知，每份工作都蕴含了知识，那些大学生从实践中学习到了许多书本未能教给他们的知识，将自己的事业干得有模有样。</p>\n<p>《摩托车修理店的未来工作哲学》一书的作者是一名政治哲学博士，曾经也认定必须找一份与自身身份相称的工作，但“技术工人”的工作让他感觉自己迷失了方向。于是他选择了自己喜欢的摩托车修理工作，开设了自己的摩托车修理店，从摩托车修理中找到了知识和快乐。<strong>compensation这个词语，在英语既表示补偿，也表示薪酬。技术工人们拿着高薪，但工作无法给他们带来成就感，所以薪水也就成为对无聊乏闷和无用感的一种补偿。</strong></p>\n<p>或许你现在正对未来感到迷茫，不知道自己究竟要往何处走：也许你对目前的工作生活状态感到厌倦，觉得幸福离自己很遥远。不管怎样，这本书都值得一读。幸福和价值不在于你是否身居高位，不在于你是否日进斗金。<strong>幸福在于我们能将动手和动脑结合在一起，工作和生活不会完全脱离，幸福在于我们能做一个完整的人。</strong></p>","frontmatter":{"title":"阅读笔记《摩托车修理店未来工作哲学》","date":"2015-08-25T04:26:08.000Z","category":"阅读笔记","tags":["工匠精神","阅读"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/an-inquiry-into-the-value-of-work/#%E6%91%98%E8%AE%B0\">摘记</a></li>\n<li><a href=\"/posts/an-inquiry-into-the-value-of-work/#%E8%AF%91%E8%80%85%E5%90%8E%E8%AE%B0\">译者后记</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/the-mole-story"},"html":"<h1 id=\"罗伊\"><a href=\"#%E7%BD%97%E4%BC%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>罗伊</h1>\n<p>前段时间看完了一部吴秀波的电视剧，《道可道》，拍摄时间比较老，但非常精彩。</p>\n<p>吴秀波饰演的一位名叫罗伊的律师。一个在别人看来自私，刻薄，狂妄，懦弱的律师，一个曾用法律为己服务，却为捍卫法律献出了生命的律师。</p>\n<p>妻子的误解，家庭破碎，婚姻结束，同事们的不理解和冷落，受陷害在看守所里遭屈辱，无法从事他喜爱的律师工作。一个个打击摧残了自负的罗伊，特立独行的罗伊，傲慢的罗伊，自以为强大的罗伊，还有善良的罗伊，一个视家庭、亲情、事业、为己生命的罗伊，他变得沉默、不再张扬、不再伶牙俐齿…</p>\n<p>也许，有人会说他不是一个好人，因为在他的眼里没有道德标准，只有法律。也许，也有人会说他不是一个好律师，因为他曾利用法律去达到自己的目的。也许，还有人会说他不是一个聪明人，竟用自己的生命做武器来捍卫法律。</p>\n<p>可你不能不承认，他是个有勇气的人。以“救人是最大的道，敬业是最大的德”为信条，为了一个执著的信念 <strong>法律面前人人平等</strong> ，可以不惜任何代价，以至于生命。</p>\n<p>电视剧里最打动我的就是罗伊给同事女儿讲《鼹鼠的故事》的桥段，他内心的孤独，无助在此时此刻爆发，这种精神上的孤独比他从小失去父母更让人感到心痛。罗伊何尝不是这个小鼹鼠呢，只想拥有一片属于自己的天空。</p>\n<h1 id=\"《鼹鼠的故事》\"><a href=\"#%E3%80%8A%E9%BC%B9%E9%BC%A0%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>《鼹鼠的故事》</h1>\n<blockquote>\n<p>森林里的草地上的草莓藤的花儿已经谢了<br>\n渐渐的白天长了<br>\n夜短了</p>\n<p>小鼹鼠在家里脚痒痒的<br>\n它觉得该到外面走一走，活动一下了</p>\n<p>对于一只鼹鼠来说<br>\n目的地是永远想不到的<br>\n你可能不相信<br>\n有一次这只小鼹鼠<br>\n竟从地下通道来到了库坦尼克城<br>\n出现在城里的广场上</p>\n<p>起初小鼹鼠只能从一条条椅子缝中间看到一条条的天空<br>\n在这个城里<br>\n广场不是你可以随便就有机会独占的<br>\n“这样的地方值得我留住吗？我应该走吗？”</p>\n<p>小鼹鼠是个流浪者<br>\n它躲在自己的洞里<br>\n有的时候它觉得拥有整个世界<br>\n可有的时候又什么都没有</p>\n<p>它每天在自己的城堡里爬来爬去<br>\n不知道上面的世界是什么样子<br>\n它很想让人知道自己是快乐的<br>\n但也是孤独的……</p>\n</blockquote>\n<h1 id=\"剧照\"><a href=\"#%E5%89%A7%E7%85%A7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>剧照</h1>\n<p><img src=\"https://zerosoul.github.io/2015/08/19/the-mole-story/luoyi.jpg\" alt=\"罗伊\"></p>\n<blockquote>\n<p><strong>亦正亦邪的罗伊</strong></p>\n</blockquote>\n<p><img src=\"https://zerosoul.github.io/2015/08/19/the-mole-story/mole_story.jpg\" alt=\"在给小女孩讲故事的罗伊\"></p>\n<blockquote>\n<p><strong>在给小女孩讲鼹鼠故事</strong></p>\n</blockquote>","frontmatter":{"title":"鼹鼠的故事","date":"2015-08-19T09:31:37.000Z","category":"随笔","tags":["吴秀波","电视剧"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/the-mole-story/#%E7%BD%97%E4%BC%8A\">罗伊</a></li>\n<li><a href=\"/posts/the-mole-story/#%E3%80%8A%E9%BC%B9%E9%BC%A0%E7%9A%84%E6%95%85%E4%BA%8B%E3%80%8B\">《鼹鼠的故事》</a></li>\n<li><a href=\"/posts/the-mole-story/#%E5%89%A7%E7%85%A7\">剧照</a></li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/change-element-type-using-jquery"},"html":"<h1 id=\"起因\"><a href=\"#%E8%B5%B7%E5%9B%A0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起因</h1>\n<p>工作当中遇到个有点意思的技术需求：把某个<code class=\"language-text\">div</code>元素替换成<code class=\"language-text\">a</code>元素。本以为使用jQuery会有现成的API，类似<code class=\"language-text\">$(element).changeType(&quot;a&quot;)</code>啥的，一行代码搞定，结果没找到o(╯□╰)o，看来好久没用jQuery的后果就是喜欢意淫没有的API。自己动手，丰衣足食。</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<ol>\n<li>获取要替换的元素特性集合，暂存到一个变量里。</li>\n<li>构造新的元素，即目标元素，并将暂存的特性赋到该元素中。</li>\n<li>使用<a href=\"http://api.jquery.com/replaceWith/\">jQuery API:replaceWith</a>，将要替换的元素用新构造的元素替换之。</li>\n</ol>\n<h1 id=\"代码实现\"><a href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码实现</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//source element:div.from </span>\n<span class=\"token keyword\">var</span> attrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> $srcEle <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.from\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>$srcEle<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> attr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   attrs<span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> attr<span class=\"token punctuation\">.</span>nodeValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> $targetEle <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;a/>\"</span><span class=\"token punctuation\">,</span>attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>$srcEle<span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             \n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> $targetEle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>当然，为了更具通用性，可以做成一个插件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    $<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">changeElementType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>newType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> attrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>             \n            $<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> attr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n               attrs<span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> attr<span class=\"token punctuation\">.</span>nodeValue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;\"</span> <span class=\"token operator\">+</span> newType <span class=\"token operator\">+</span> <span class=\"token string\">\"/>\"</span><span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>jQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"最后说一句\"><a href=\"#%E6%9C%80%E5%90%8E%E8%AF%B4%E4%B8%80%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后说一句</h1>\n<p>意淫没关系，或许正是开始创作的好契机。</p>","frontmatter":{"title":"改变元素类型（jQuery）","date":"2015-08-08T09:31:37.000Z","category":"技术","tags":["jquery","javascript","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E8%B5%B7%E5%9B%A0\">起因</a></li>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\">代码实现</a></li>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E6%9C%80%E5%90%8E%E8%AF%B4%E4%B8%80%E5%8F%A5\">最后说一句</a></li>\n</ul>","excerpt":"起因 工作当中遇到个有点意思的技术需求：把某个 元素替换成 元素。本以为使用jQuery会有现成的API，类似 啥的，一行代码搞定，结果没找到o(╯□╰)o，看来好久没用jQuery的后果就是喜欢意淫没有的API…"}},{"node":{"fields":{"slug":"/posts/ux-elements"},"html":"<p>任何在用户体验上所做的努力，目的都是为了提高效率。这基本上是以两种主要形式体现出来的：“帮助人们工作得更快”和“减少他们犯错的几率”。</p>\n<p>5个层面：</p>\n<ul>\n<li>表现层</li>\n<li>框架层</li>\n<li>结构层</li>\n<li>范围层</li>\n<li>战略层</li>\n</ul>\n<p><img src=\"/images/five.jpeg\" alt=\"用户体验要素五个层面\"></p>\n<p>随着层面的上升，我们要做的决策就一点一点地变得具体，并涉及越来越精细的细节。</p>\n<h1 id=\"战略层\"><a href=\"#%E6%88%98%E7%95%A5%E5%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>战略层</h1>\n<ul>\n<li>我们要通过这个产品得到什么？</li>\n<li>我们的用户要通过这个产品得到什么？</li>\n</ul>\n<p>应该避免在尚未充分了解问题之前就试图得出结论。</p>\n<p>明确地定义“成功的条件”——而不是定义“通向成功的路径”——才能保证我们不会在这个阶段跑得太快。</p>\n<p>战略应该是设计用户体验的流程起点，但并不意味在项目开始之前你的战略需要完全确定下来。虽然设法击中一个移动的目标可能会浪费很多时间和资源（还有极大的内心挫折感），但是战略也应该是可以演变和改进的。当战略被系统地修改与校正时，这些工作就能成为贯穿整个过程的、持续的灵感源泉。</p>\n<h1 id=\"范围层\"><a href=\"#%E8%8C%83%E5%9B%B4%E5%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>范围层</h1>\n<p>有时候人们口中说出来的、所期望的特性其实并不是他们想要的，当人们在某个过程或某个产品中遭遇到一些困难时，想象有某种解决办法可以缓解这一困难，对任何人来讲都是正常反应。有时这个办法是行不通的，或者是治标不治本。通过与用户探讨这些建议，有时可以得出真正解决问题的、完全不同的需求。</p>\n<p>功能规格说明书：需要的不是文档有多厚有多详细，而是要足够清楚和准确。不必包含产品的每一个细节——只需要包含在设计和开发过程中出现有可能混淆的功能定义。</p>\n<h1 id=\"结构层\"><a href=\"#%E7%BB%93%E6%9E%84%E5%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>结构层</h1>\n<p>交互设计关注于描述“可能的用户行为”，同时定义“系统如何配合与响应”这些用户行为。</p>\n<p>信息架构研究的是人们如何认知信息的过程，对于产品而言，信息架构关注的是呈现给用户的信息是否合理并且具有意义。</p>\n<h1 id=\"框架层\"><a href=\"#%E6%A1%86%E6%9E%B6%E5%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>框架层</h1>\n<p>成功的界面设计是那些能让用户一眼就能看到“最重要的东西”的界面设计。</p>\n<p>文档本身不是目的，只是达到目的的一种手段。为了文档本身而创建文档不仅仅是浪费时间——可能还会降低生产力和打击工作积极性。根据你的需求来撰写正确级别的文档（同时不要欺骗自己可以用较少的文档糊弄过去），才能讲文档从一件麻烦事变成一件有益的事。</p>\n<h1 id=\"表现层\"><a href=\"#%E8%A1%A8%E7%8E%B0%E5%B1%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>表现层</h1>\n<p>不统一的视觉样式会破坏企业形象的清晰程度，并给访问者一个“企业还没搞清楚自身定位”的坏印象。</p>\n<h1 id=\"要素的应用\"><a href=\"#%E8%A6%81%E7%B4%A0%E7%9A%84%E5%BA%94%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>要素的应用</h1>\n<p><strong>成功的方法</strong>和<strong>注定要失败的方法</strong>的差异归根结底就是以下两点：</p>\n<ul>\n<li>了解你正在试着去解决的问题</li>\n<li>了解这些解决办法所造成的后果</li>\n</ul>\n<p>如果你的网站在开发的时候，始终从完整的用户体验出发，那么最后得到的网站就是一份有价值的资产，而不是无休无止的债务。</p>","frontmatter":{"title":"阅读笔记《用户体验要素》","date":"2015-07-25T06:26:24.000Z","category":"阅读笔记","tags":["用户体验","阅读"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/ux-elements/#%E6%88%98%E7%95%A5%E5%B1%82\">战略层</a></li>\n<li><a href=\"/posts/ux-elements/#%E8%8C%83%E5%9B%B4%E5%B1%82\">范围层</a></li>\n<li><a href=\"/posts/ux-elements/#%E7%BB%93%E6%9E%84%E5%B1%82\">结构层</a></li>\n<li><a href=\"/posts/ux-elements/#%E6%A1%86%E6%9E%B6%E5%B1%82\">框架层</a></li>\n<li><a href=\"/posts/ux-elements/#%E8%A1%A8%E7%8E%B0%E5%B1%82\">表现层</a></li>\n<li><a href=\"/posts/ux-elements/#%E8%A6%81%E7%B4%A0%E7%9A%84%E5%BA%94%E7%94%A8\">要素的应用</a></li>\n</ul>","excerpt":"任何在用户体验上所做的努力，目的都是为了提高效率。这基本上是以两种主要形式体现出来的：“帮助人们工作得更快”和“减少他们犯错的几率”。…"}},{"node":{"fields":{"slug":"/posts/how-to-design-website"},"html":"<h1 id=\"产品可用性定义：\"><a href=\"#%E4%BA%A7%E5%93%81%E5%8F%AF%E7%94%A8%E6%80%A7%E5%AE%9A%E4%B9%89%EF%BC%9A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>产品<strong>可用性</strong>定义：</h1>\n<p>让一个有着平均能力和经验的人（甚至稍低于平均水平）能明白如何使用它——不必付出过度的努力，或者遇到不必要的麻烦。一句话的感觉：就是这么简单。</p>\n<ul>\n<li><strong>有用</strong>：能否帮助人们完成一些必需的任务</li>\n<li><strong>可学习</strong>：人们能否明白如何使用它</li>\n<li><strong>可记忆</strong>：人们每次使用的时候，是否都需要重新学习？</li>\n<li><strong>有效</strong>：它们能完成任务吗？</li>\n<li><strong>高效</strong>：它们是否只需花费适当的时间和努力就能完成任务？</li>\n<li><strong>合乎期望</strong>：是人们想要的吗？</li>\n<li><strong>令人愉悦</strong>：人们使用的时候觉得有意思甚至很好玩？</li>\n</ul>\n<h2 id=\"krug可用性第一定律：别让我思考\"><a href=\"#krug%E5%8F%AF%E7%94%A8%E6%80%A7%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B%EF%BC%9A%E5%88%AB%E8%AE%A9%E6%88%91%E6%80%9D%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Krug可用性第一定律：别让我思考</h2>\n<ul>\n<li>我们不是阅读，而是扫描</li>\n<li>我们不做最佳选择，而是满意即可</li>\n<li>我们不是追根究底，而是勉强应付</li>\n</ul>\n<p>为扫描设计，不为阅读设计：</p>\n<ul>\n<li>尽量利用习惯用法</li>\n<li>\n<p>建立有效的视觉层次</p>\n<ul>\n<li>越重要的部分越突出</li>\n<li>逻辑上相关的部分也在视觉上相关</li>\n<li>逻辑上包含的部分在视觉上进行嵌套</li>\n</ul>\n</li>\n<li>把页面划分成明确定义的区域</li>\n<li>明显标识可以点击的地方</li>\n<li>最小化干扰</li>\n<li>为内容创建清楚的格式，以便扫描</li>\n</ul>\n<h2 id=\"krug可用性第二定律：点击多少次都没关系，只要每次点击都是无需思考、明确无误的选择。\"><a href=\"#krug%E5%8F%AF%E7%94%A8%E6%80%A7%E7%AC%AC%E4%BA%8C%E5%AE%9A%E5%BE%8B%EF%BC%9A%E7%82%B9%E5%87%BB%E5%A4%9A%E5%B0%91%E6%AC%A1%E9%83%BD%E6%B2%A1%E5%85%B3%E7%B3%BB%EF%BC%8C%E5%8F%AA%E8%A6%81%E6%AF%8F%E6%AC%A1%E7%82%B9%E5%87%BB%E9%83%BD%E6%98%AF%E6%97%A0%E9%9C%80%E6%80%9D%E8%80%83%E3%80%81%E6%98%8E%E7%A1%AE%E6%97%A0%E8%AF%AF%E7%9A%84%E9%80%89%E6%8B%A9%E3%80%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Krug可用性第二定律：点击多少次都没关系，只要每次点击都是无需思考、明确无误的选择。</h2>\n<h2 id=\"krug可用性第三定律：去掉每个页面上一半的文字，然后把剩下的文字再去掉一半。\"><a href=\"#krug%E5%8F%AF%E7%94%A8%E6%80%A7%E7%AC%AC%E4%B8%89%E5%AE%9A%E5%BE%8B%EF%BC%9A%E5%8E%BB%E6%8E%89%E6%AF%8F%E4%B8%AA%E9%A1%B5%E9%9D%A2%E4%B8%8A%E4%B8%80%E5%8D%8A%E7%9A%84%E6%96%87%E5%AD%97%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8A%8A%E5%89%A9%E4%B8%8B%E7%9A%84%E6%96%87%E5%AD%97%E5%86%8D%E5%8E%BB%E6%8E%89%E4%B8%80%E5%8D%8A%E3%80%82\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Krug可用性第三定律：去掉每个页面上一半的文字，然后把剩下的文字再去掉一半。</h2>\n<p>Web设计中的大爆炸理论：和宇宙大爆炸理论一样，它的基础理论是，访问一个新网站，或者一个新网页的时候，最初的那几秒钟特别重要。</p>","frontmatter":{"title":"阅读笔记《点石成金》","date":"2015-07-21T17:24:08.000Z","category":"阅读笔记","tags":["互联网","技术","设计","产品","阅读"],"cover":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/how-to-design-website/#%E4%BA%A7%E5%93%81%E5%8F%AF%E7%94%A8%E6%80%A7%E5%AE%9A%E4%B9%89%EF%BC%9A\">产品可用性定义：</a></p>\n<ul>\n<li><a href=\"/posts/how-to-design-website/#krug%E5%8F%AF%E7%94%A8%E6%80%A7%E7%AC%AC%E4%B8%80%E5%AE%9A%E5%BE%8B%EF%BC%9A%E5%88%AB%E8%AE%A9%E6%88%91%E6%80%9D%E8%80%83\">Krug可用性第一定律：别让我思考</a></li>\n<li><a href=\"/posts/how-to-design-website/#krug%E5%8F%AF%E7%94%A8%E6%80%A7%E7%AC%AC%E4%BA%8C%E5%AE%9A%E5%BE%8B%EF%BC%9A%E7%82%B9%E5%87%BB%E5%A4%9A%E5%B0%91%E6%AC%A1%E9%83%BD%E6%B2%A1%E5%85%B3%E7%B3%BB%EF%BC%8C%E5%8F%AA%E8%A6%81%E6%AF%8F%E6%AC%A1%E7%82%B9%E5%87%BB%E9%83%BD%E6%98%AF%E6%97%A0%E9%9C%80%E6%80%9D%E8%80%83%E3%80%81%E6%98%8E%E7%A1%AE%E6%97%A0%E8%AF%AF%E7%9A%84%E9%80%89%E6%8B%A9%E3%80%82\">Krug可用性第二定律：点击多少次都没关系，只要每次点击都是无需思考、明确无误的选择。</a></li>\n<li><a href=\"/posts/how-to-design-website/#krug%E5%8F%AF%E7%94%A8%E6%80%A7%E7%AC%AC%E4%B8%89%E5%AE%9A%E5%BE%8B%EF%BC%9A%E5%8E%BB%E6%8E%89%E6%AF%8F%E4%B8%AA%E9%A1%B5%E9%9D%A2%E4%B8%8A%E4%B8%80%E5%8D%8A%E7%9A%84%E6%96%87%E5%AD%97%EF%BC%8C%E7%84%B6%E5%90%8E%E6%8A%8A%E5%89%A9%E4%B8%8B%E7%9A%84%E6%96%87%E5%AD%97%E5%86%8D%E5%8E%BB%E6%8E%89%E4%B8%80%E5%8D%8A%E3%80%82\">Krug可用性第三定律：去掉每个页面上一半的文字，然后把剩下的文字再去掉一半。</a></li>\n</ul>\n</li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/explore-json"},"html":"<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/json.png\" alt=\"json\"></p>\n<h1 id=\"概述\"><a href=\"#%E6%A6%82%E8%BF%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概述</h1>\n<p>JSON(JavaScript Object Notation) 是一种轻量级数据交换格式。 易于阅读和编写，也易于机器解析和生成。 它基于<a href=\"http://www.crockford.com/javascript\">JavaScript Programming Language</a>, <a href=\"http://www.ecma-international.org/publications/files/ecma-st/ECMA-262.pdf\">Standard ECMA-262 3rd Edition - December 1999</a>的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。 这些特性使JSON成为理想的数据交换语言。</p>\n<h1 id=\"标准\"><a href=\"#%E6%A0%87%E5%87%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>标准</h1>\n<p>JSON建构于两种结构：</p>\n<ul>\n<li>名称/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为对象（object），纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。</li>\n<li>值的有序列表（An ordered list of values）。在大部分语言中，它被理解为数组（array）。</li>\n</ul>\n<p>这些都是常见的数据结构。事实上大部分现代计算机语言都以某种形式支持它们。这使得一种数据格式在同样基于这些结构的编程语言之间交换成为可能。</p>\n<p>JSON具有以下这些形式：</p>\n<ul>\n<li>对象是一个无序的“‘名称/值’对”集合。一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间使用“,”（逗号）分隔。</li>\n</ul>\n<p><img src=\"object.gif\" alt=\"object\"></p>\n<ul>\n<li>数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间使用“,”（逗号）分隔。</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/array.gif\" alt=\"array\"></p>\n<ul>\n<li>值（value）可以是双引号括起来的字符串（string）、数值(number)、true、false、 null、对象（object）或者数组（array）。这些结构可以嵌套。</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/value.gif\" alt=\"value\"></p>\n<ul>\n<li>字符串（string）是由双引号包围的任意数量Unicode字符的集合，使用反斜线转义。一个字符（character）即一个单独的字符串（character string）。</li>\n</ul>\n<p>字符串（string）与C或者Java的字符串非常相似。</p>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/string.gif\" alt=\"string\"></p>\n<ul>\n<li>数值（number）也与C或者Java的数值非常相似。除去未曾使用的八进制与十六进制格式。除去一些编码细节。</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/number.gif\" alt=\"number\"></p>\n<p><em>注意：空白可以加入到任何符号之间。</em></p>\n<h1 id=\"参考链接\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考链接</h1>\n<ul>\n<li><a href=\"http://www.json.org/\">JSON官网</a></li>\n</ul>","frontmatter":{"title":"探索JSON","date":"2015-06-18T09:31:37.000Z","category":"技术","tags":["json","备忘","前端"],"cover":"https://zerosoul.github.io/2015/06/18/explore-json/json.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/explore-json/#%E6%A6%82%E8%BF%B0\">概述</a></li>\n<li><a href=\"/posts/explore-json/#%E6%A0%87%E5%87%86\">标准</a></li>\n<li><a href=\"/posts/explore-json/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">参考链接</a></li>\n</ul>","excerpt":"概述 JSON(JavaScript Object Notation) 是一种轻量级数据交换格式。 易于阅读和编写，也易于机器解析和生成。 它基于 JavaScript Programming Language ,  Standard ECMA-262 3rd Edition - December…"}},{"node":{"fields":{"slug":"/posts/the-revolution-road"},"html":"<p><img src=\"/images/revolutionary_road.jpg\" alt=\"revolutionary_road\"></p>\n<p>《革命之路》来自于男女主人公居住地门前那条路的路名，那座在小坡上的白色房子是女主爱波第一次怀孕后，男主弗兰克带着她来到康涅狄格州郊外时，他们一眼看中并买下的。从此以后，他们便一直生活在那里，生下两个孩子，弗兰克在父亲以前工作过的机器工厂里做销售人员，整日无所事事，混工资还房贷，甚至还和一个女同事出过几次轨。爱波则做了全职主妇在家养育一对儿女，并且还做着业余演员圆自己的演员梦。日子就这样平淡无奇的一天天过着，直到爱波某天作为爱波角演出了人生中的一场话剧，但观众们的反响很差，她的演员梦也就破碎了。在当天晚上回家的路上，弗兰克试图安慰爱波，但爱波情绪很激动，他们两人结婚之后的多年积怨爆发了出来，两人大吵了一架。爱波随后在整理照片时发现了弗兰克年轻时在巴菲尔铁塔下的照片，想起了弗兰克曾描述的那个美好的巴黎，于是爱波乘机提出想要改变当前的生活状态，全家搬到巴黎去寻找心中的美好，弗兰克同意了。全家人都兴高采烈的准备着，幻想着搬家后的美好，并把这个消息告诉了身边的邻居、朋友和同事，听到这个消息的人都很嫉妒他们，表面上却装作替他们高兴的样子，除了一个得过精神病的数学博士，谁都不能理解他们。但生活总是充满了意外，爱波怀上了计划外的第三胎，而弗兰克得到了上司的上司的赏识，以前连奢望都不敢想的升职加薪的机会就在眼前唾手可得，弗兰克动摇了，想要留下来继续现在的生活，爱波为此感到很痛苦，在一次酒吧酒醉后和一直垂涎于她的男邻居搞了一次车震，但这持续不到一分钟的经历让她感到更加痛苦，她在和弗兰克的又一次大吵后决定自己给自己做流产。那天早晨，爱波象弗兰克想要的生活那样给弗兰克做了早餐，让弗兰克感到欣喜，在弗兰克离家上班后，爱波取出准备好的工具，给自己做了流产，但由此引起的大出血还是让爱波丧了命。弗兰克最终还是带着孩子离开了革命之路，到城里去居住了。</p>\n<p>这是一个令人绝望的故事，将五十年代美国中产阶级的物质充足，但精彩无望的乏味生活描写得非常精彩，人物的设置也很出色，每个人都有他自己的特点，不繁琐，但却全部刻画了出来。其实，其间很多描写让我看到了我们这一代的生活，这个看似万紫千红的世界，其实被很多的条条框框所约束，所谓的条条道路通罗马似乎只是少数人的游戏，而大多数的我们却只有一条狭窄的小路而已，无望的空虚。而其中的生活，真的是需要技巧的，如何在这绝望中鼓足勇气去开辟一条更宽广的路，则是我们值得思考的问题。</p>\n<p>“如果一个人想要做一件真正忠于自己内心的事情，那么往往只能一个人独自去做。”</p>","frontmatter":{"title":"阅读笔记《革命之路》","date":"2015-05-26T07:12:08.000Z","category":"阅读笔记","tags":["文学","小李子","婚姻","阅读"],"cover":"/images/revolutionary_road.jpg"},"tableOfContents":"","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/fuck-the-pm"},"html":"<p><img src=\"https://zerosoul.github.io/2015/05/22/fuck-the-pm/pm.png\" alt=\"pm expression\"></p>\n<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>这篇文章来自于微信公众号<strong>产品小妖</strong>，具体作者是谁忘记了，如有侵权，请与我联系。文章有共鸣，讲的都是经验之谈，程序员看了会流泪，产品经理看了会沉默，其中一些场景我也碰到过，感同身受。做产品没那么简单，尤其是团队化来完成一个项目，专业素养和沟通同样重要。</p>\n<h1 id=\"正文\"><a href=\"#%E6%AD%A3%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>正文</h1>\n<h2 id=\"开始实施之前\"><a href=\"#%E5%BC%80%E5%A7%8B%E5%AE%9E%E6%96%BD%E4%B9%8B%E5%89%8D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开始实施之前</h2>\n<ul>\n<li><strong>说不清需求价值</strong>，技术问“为什么要做”的时候，支支吾吾，或者说“老板要的、运营要的”，成为了传话筒，是最Low的，相反，能有理有据的顶老板的产品经理，通常会在大家的眼中逼格满满；</li>\n<li><strong>没想到功能细节</strong>，表现为技术问细节（当然，是涉及业务的细节，不是技术实现细节）的时候，自己还没想过，现场想，被发现了，或者因为是接二手需求，并不知道、也没有去追溯这个需求的初衷；</li>\n<li><strong>帮技术评估工作量</strong>，特别是技术出身的产品经理容易犯这个错，潜台词就是“希望加活”，我评估过了，这些都能做掉的，不要给我偷懒；</li>\n<li><strong>逼着技术团队承诺</strong>，产品经理想的是，如果技术承诺了，但却做不到，这样自己就没责任了，但很多事情，在开始的时候是谁也不知道的，应该大家在一条船上同舟共济，这就是“接力跑”和“踢足球”在交棒/传球之后的区别。</li>\n</ul>\n<h2 id=\"实施过程中\"><a href=\"#%E5%AE%9E%E6%96%BD%E8%BF%87%E7%A8%8B%E4%B8%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实施过程中</h2>\n<ul>\n<li><strong>做了一半改需求</strong>，scrum里的表现就是sprint内的非受迫需求变更，大家很难忍受的是产品经理自己没想清楚，而导致的劳动浪费，俗话说“没有变更就没有伤害”，碰到性子烈的就直接要干架了，当然，如果是外部市场变了，大家都可以理解；</li>\n<li><strong>开发过程中消失</strong>，你可以出差、可以开会，但是要能及时响应技术的问题，要不然，为了进度大家照着自己的想法做下去，验收的时候产品经理跑出来说“这不是我要的”，可不要怪没人理你；</li>\n<li><strong>过度关注实现细节</strong>，帮技术决定技术方案，也是技术出身的产品经理容易犯的错，越俎代庖了，会降低技术同学的积极性，渐渐的就完全打工心态了。</li>\n</ul>\n<h2 id=\"产品发布之后\"><a href=\"#%E4%BA%A7%E5%93%81%E5%8F%91%E5%B8%83%E4%B9%8B%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>产品发布之后</h2>\n<ul>\n<li><strong>发布后没有反馈</strong>，技术人员也需要从市场、用户那里获得反馈，从而知道自己做的事情产生了价值，提升成就感，做完发布，石沉大海，大家是不可能有owner感的；</li>\n<li><strong>无节奏感</strong>，让技术人员忙一阵闲一阵，发布之后再忙着研究接下来做什么，让技术人员在干死干活的高强度之后突然不知道做什么，几天后又开始要赶进度。</li>\n</ul>\n<h2 id=\"全过程都有\"><a href=\"#%E5%85%A8%E8%BF%87%E7%A8%8B%E9%83%BD%E6%9C%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>全过程都有</h2>\n<ul>\n<li><strong>优柔寡断无决断</strong>，是产品经理最要不得的品质，就是在已经讨论完毕后，大家都等着你拍板的时候“你说吧，往哪儿走我们就跟着办”，这时候你说“啊，那个，各种方案各有利弊啊，我也不知道怎么办啊，你们有什么好想法……”，你就完蛋了；</li>\n<li><strong>报喜不报忧</strong>，产品经理总想藏着掖着一些信息，比如“老板在考虑干掉这个项目”这类信息，出发点可能是好的，但，当大家通过其他途径知道了以后，互信就完全打破了，大家会觉得“你还是把我们当资源”。</li>\n</ul>","frontmatter":{"title":"程序员看了会流泪，产品经理看了会沉默","date":"2015-05-22T09:31:37.000Z","category":"它山之石","tags":["产品","互联网","转载"],"cover":"https://zerosoul.github.io/2015/05/22/fuck-the-pm/pm.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/fuck-the-pm/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li>\n<p><a href=\"/posts/fuck-the-pm/#%E6%AD%A3%E6%96%87\">正文</a></p>\n<ul>\n<li><a href=\"/posts/fuck-the-pm/#%E5%BC%80%E5%A7%8B%E5%AE%9E%E6%96%BD%E4%B9%8B%E5%89%8D\">开始实施之前</a></li>\n<li><a href=\"/posts/fuck-the-pm/#%E5%AE%9E%E6%96%BD%E8%BF%87%E7%A8%8B%E4%B8%AD\">实施过程中</a></li>\n<li><a href=\"/posts/fuck-the-pm/#%E4%BA%A7%E5%93%81%E5%8F%91%E5%B8%83%E4%B9%8B%E5%90%8E\">产品发布之后</a></li>\n<li><a href=\"/posts/fuck-the-pm/#%E5%85%A8%E8%BF%87%E7%A8%8B%E9%83%BD%E6%9C%89\">全过程都有</a></li>\n</ul>\n</li>\n</ul>","excerpt":"…"}},{"node":{"fields":{"slug":"/posts/style-broken-image-using-css"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>浏览网页时有时会遇到图片加载失败的场景，浏览器往往会给出一个非常丑陋的显示效果：  </p>\n<p><img src=\"https://zerosoul.github.io/2015/05/07/style-broken-image-using-css/img_err.png\" alt=\"加载失败\"><br>\n为了更好的用户体验，这里可以仅仅通过CSS来优化一下样式。恰巧最近工作上遇到了这样的需求，在此记录下自己是如何解决的。</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<p>需要注意两个偏理论上的知识点：</p>\n<ol>\n<li><code class=\"language-text\">img</code>标签是个<a href=\"https://www.w3.org/TR/CSS21/generate.html#before-after-content\">可替换元素</a>，即其呈现是由外部资源决定的，也因此<code class=\"language-text\">:before</code>和<code class=\"language-text\">:after</code>这两个伪元素对其不起作用。但是，当图片加载失败时，伪元素就能派上用场了。</li>\n<li>可以对<code class=\"language-text\">img</code>标签使用排版相关的CSS规则，比如字体，这些规则只对<code class=\"language-text\">alt</code>特性起作用。</li>\n</ol>\n<p>运用上面两个特性，我们就能做到当图片加载失败时，对其美化。</p>\n<h1 id=\"代码\"><a href=\"#%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码</h1>\n<p>使用下面结构当做例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.somewhere.com/images/broken.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>马蛋，图片加载出错了...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>图片加载失败，下面的CSS会发挥作用：  </p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Helvetica'</span><span class=\"token punctuation\">;</span> \n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 300<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span> //自此以上的css会影响alt的样式\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">img:before</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\\\f1c5\"</span> <span class=\"token string\">\" \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>alt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  //content的使用方式请自行谷歌之\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> FontAwesome<span class=\"token punctuation\">;</span> //注意使用的是font awesome 哦，别忘了引入。\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>100, 100, 100<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span> \n\n <span class=\"token selector\">img:after</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"(url: \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00aeef<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> -10px<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>最后，如果图片加载失败，将呈现如下样式：<br>\n<img src=\"https://zerosoul.github.io/2015/05/07/style-broken-image-using-css/img_err_styled.png\" alt=\"加载失败\"></p>\n<p>肿么样，是不是好看了很多！</p>","frontmatter":{"title":"使用CSS美化加载出错的图片","date":"2015-05-07T09:31:37.000Z","category":"技术","tags":["css","前端","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/style-broken-image-using-css/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/style-broken-image-using-css/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/style-broken-image-using-css/#%E4%BB%A3%E7%A0%81\">代码</a></li>\n</ul>","excerpt":"引子 浏览网页时有时会遇到图片加载失败的场景，浏览器往往会给出一个非常丑陋的显示效果：   为了更好的用户体验，这里可以仅仅通过CSS…"}}],"pathPrefix":"","first":false,"last":false,"index":7,"pageCount":12,"additionalContext":{}}}