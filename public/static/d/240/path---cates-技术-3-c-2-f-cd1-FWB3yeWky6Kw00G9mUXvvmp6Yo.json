{"pageContext":{"group":[{"node":{"fields":{"slug":"/posts/how-to-ppt"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>技术从业者似乎有个普遍的问题：<strong>不擅长表达</strong>。当然，表达方式有多种：写作，作画，舞蹈，甚至摄影，等等。而此处要说的，特指口头表达，也就是演讲。</p>\n<h1 id=\"工具\"><a href=\"#%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>工具</h1>\n<p>提到演讲，无论是给领导汇报，还是给同事做分享，最好有个PPT做辅助，而这正是干技术的头痛所在：不愿意花时间把PPT做到像市场部那样美轮美奂，认为是浪费时间，最后只是在每一张Slide上放几个词，美名曰“简单即美”，其实是在自欺欺人。</p>\n<p>如果你也遇到过类似烦恼，或许下面提到的两个工具能帮助你：</p>\n<h1 id=\"impressjs\"><a href=\"#impressjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://impress.github.io/impress.js/\">impress.js</a></h1>\n<p><img src=\"https://zerosoul.github.io/2016/01/16/how-to-ppt/impress.png\" alt=\"impress.js\"></p>\n<p>这个神器是我在2014年找工作期间无意间看到的，被官方<a href=\"http://impress.github.io/impress.js/\">Demo</a>的效果惊艳到了，果断找来<a href=\"https://github.com/impress/impress.js/blob/master/js/impress.js\">源码</a>阅读，研究了一下其中的原理，又发现如此绚丽的效果，用到的技术并不复杂：其核心便是CSS3的Transform和Transition特性。但能把这两个特性运用的如此炉火纯青，歪果仁在利用技术方面，又一次领先了。出于对impress.js的喜爱，当时利用此工具，给自己的做了个<a href=\"https://zerosoul.github.io/impress-resume/#/landing_page\">在线简历</a>。现在看来内容多少有些幼稚，但从浏览体验来说，依然不错。Thank to impress.js!</p>\n<p>如果想超赶市场部同事的PPT特效，名副其实的impress.js不会让你失望，相信也会impress到你！</p>\n<h1 id=\"revealjs\"><a href=\"#revealjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://lab.hakim.se/reveal-js/#/\">reveal.js</a></h1>\n<p><img src=\"https://zerosoul.github.io/2016/01/16/how-to-ppt/reveal.png\" alt=\"reveal.js\"></p>\n<p>这个神器是最近一两周才结识的，也是一见钟情并实战了一次，效果不错。它的特点就是简洁，高大上。impress.js的使用还需要一些坐标计算，reveal.js仅仅需要考虑方向，上下左右，so easy！前两天部门领导要在年度总结大会上做演讲，正发愁怎么做PPT呢，果断不能错过推销神器的机会。在了解领导演讲意图之后，我在impress.js和reveal.js之间选择了reveal.js出马。</p>\n<p><img src=\"https://zerosoul.github.io/2016/01/16/how-to-ppt/ppt.jpg\" alt=\"ppt\"></p>\n<p>值得一提的是，reveal.js有插件机制，有许多优秀插件可以提高演讲逼格，比如，这次总结大会上用到的<a href=\"https://github.com/ysmood/notell\">远程控制插件</a>，乔布斯演讲的即视感有木有！？如果对自己要讲什么已经胸有成竹，做PPT的目的仅仅是为了提示自己讲到哪儿了，该讲哪儿了。那么，reveal.js来干这事儿再适合不过了。</p>\n<h1 id=\"再说两句\"><a href=\"#%E5%86%8D%E8%AF%B4%E4%B8%A4%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>再说两句</h1>\n<p>以上只是简单感性地介绍一下两款神器，其实还有很多特性都没有介绍到，等待你去挖掘。不过工具终究是工具，不能代替我们思考。做演讲最重要的还是清楚自己要讲什么：<strong>主题明确，逻辑清晰，没有PPT，同样能达到表达的目的。</strong></p>","frontmatter":{"title":"工程师的演讲利器","date":"2016-01-16T09:31:37.000Z","category":"技术","tags":["前端","工具","ppt","impress.js","reveal.js"],"cover":"https://zerosoul.github.io/2016/01/16/how-to-ppt/impress.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/how-to-ppt/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/how-to-ppt/#%E5%B7%A5%E5%85%B7\">工具</a></li>\n<li><a href=\"/posts/how-to-ppt/#impressjs\">impress.js</a></li>\n<li><a href=\"/posts/how-to-ppt/#revealjs\">reveal.js</a></li>\n<li><a href=\"/posts/how-to-ppt/#%E5%86%8D%E8%AF%B4%E4%B8%A4%E5%8F%A5\">再说两句</a></li>\n</ul>","excerpt":"引子 技术从业者似乎有个普遍的问题： 不擅长表达 。当然，表达方式有多种：写作，作画，舞蹈，甚至摄影，等等。而此处要说的，特指口头表达，也就是演讲。 工具 提到演讲，无论是给领导汇报，还是给同事做分享，最好有个PPT做辅助，而这正是干技术的头痛所在：不愿意花时间把PPT…"}},{"node":{"fields":{"slug":"/posts/improve-your-workflow-with-browser-sync-2-0"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>Web开发，尤其是前端开发，经常要做的就是不停地“试错”。下面的场景你是否熟悉：</p>\n<p>1.在浏览器打开网页<br>\n2.更改一两行代码<br>\n3.点击浏览器的刷新，重复 <strong>步骤2</strong></p>\n<p>周而复始，还要在不同的设备，不同的浏览器，不同的测试方法，Oh God，编码本来是一项充满创造性的工作，为何如此苦逼？</p>\n<h1 id=\"希望\"><a href=\"#%E5%B8%8C%E6%9C%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>希望</h1>\n<p>程序员应该养成一个优秀习惯：当意识到有重复性的动作，反思一下能不能交给机器来做？有关上面提到的不停地“试错”，其实早就有了解决方式：BrowserSync。我比较懒，懒到人家都出2.0了，才开始了解与使用。</p>\n<blockquote>\n<p>好工具从来不会缺席，只是有时候会迟到。 – 尼古拉斯•杨二</p>\n</blockquote>\n<p>让我们先来看一下新版本有哪些特性：</p>\n<h1 id=\"实时刷新-live-reloading\"><a href=\"#%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0-live-reloading\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实时刷新 (Live reloading)</h1>\n<p>这个应该是基本的吧。修改某个文件（html,css,js），会自动刷新你所打开的所有浏览页面，对，也包括手机端的，这个挺酷的。</p>\n<h1 id=\"交互同步interaction-synchronization\"><a href=\"#%E4%BA%A4%E4%BA%92%E5%90%8C%E6%AD%A5interaction-synchronization\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>交互同步(Interaction synchronization)</h1>\n<p>一句话概括就是：镜像你的交互。滚动页面，点击，表单操作等等会被同步到每个你打开的浏览器。这招在调试移动端页面相当有用，都知道在手机输入文字的痛苦，尤其是英文，有了它，妈妈再也不会看到你拿着手机打字纠结的表情了：完全可以在PC上相应文本框输入文本，然后会同步到每个关联的移动设备上，Amazing！除此之外，你还可以选择哪些交互可以被镜像，真贴心！</p>\n<h1 id=\"远程调试remote-inspector\"><a href=\"#%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95remote-inspector\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>远程调试(Remote inspector)</h1>\n<p>可以使用类似谷歌的 <a href=\"https://developer.chrome.com/devtools\">Dev Tools</a> 来远程调试页面。</p>\n<p><img src=\"https://zerosoul.github.io/2016/01/14/Improve-Your-Workflow-With-BrowserSync-2-0/browsersync2-weinre.png\"></p>\n<h1 id=\"模拟网速simulate-slower-connections\"><a href=\"#%E6%A8%A1%E6%8B%9F%E7%BD%91%E9%80%9Fsimulate-slower-connections\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>模拟网速(Simulate slower connections)</h1>\n<p>Dev Tools 里面已有这个功能，相当实用的一个功能，有些开发问题只有在网速慢的情况才好复现。看来，优秀的工具总是能戳中使用者的痛点。</p>\n<h1 id=\"记录浏览历史url-history\"><a href=\"#%E8%AE%B0%E5%BD%95%E6%B5%8F%E8%A7%88%E5%8E%86%E5%8F%B2url-history\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>记录浏览历史(URL history)</h1>\n<p>浏览历史被记录的好处就是可以随时推送某个测试网址到所有设备，免去记忆和输入的成本，相当便捷。</p>\n<h1 id=\"新ui！new-ui\"><a href=\"#%E6%96%B0ui%EF%BC%81new-ui\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新UI！(New UI)</h1>\n<p>如果不习惯命令行控制方式，可以使用基于网页的UI管理。</p>\n<p><img src=\"https://zerosoul.github.io/2016/01/14/Improve-Your-Workflow-With-BrowserSync-2-0/browsersync2-gui.png\"></p>\n<h1 id=\"兼容构建工具build-tool-compatibility\"><a href=\"#%E5%85%BC%E5%AE%B9%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7build-tool-compatibility\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>兼容构建工具(Build-tool compatibility)</h1>\n<p>可以和Gulp,Grunt以及其它构建工具配套使用。<br>\n<strong>注：这个特性我还没有尝试，不过看起来很高级很好玩的样子。</strong></p>\n<h1 id=\"下载即用！install-anywhere-for-free\"><a href=\"#%E4%B8%8B%E8%BD%BD%E5%8D%B3%E7%94%A8%EF%BC%81install-anywhere-for-free\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>下载即用！(Install anywhere for free)</h1>\n<p>BrowserSync是开源作品，并且支持Windows, Mac OS and Linux三大操作平台。不需要安装浏览器插件或者其他软件，妈妈再也不用担心乱装东西啦。</p>\n<h1 id=\"browsersync-是怎样的工作原理\"><a href=\"#browsersync-%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>BrowserSync 是怎样的工作原理</h1>\n<p>启用BrowserSync时，会建立一个小型web服务器。如果本地存在一个web服务器或者需要与一个线上网站建立联系，可以将BrowserSync当做一个代理服务器。它将在每个访问的页面注入一小段js代码，并使用 <a href=\"https://developer.mozilla.org/en-US/docs/WebSockets/WebSockets_reference\"><strong>websocket</strong></a>与服务器通信。当有事件触发时，比如更改了某个文件或者触发了滚动操作，服务端便会向所有的连接设备发送更新。</p>\n<p>如果你的定位是使用而非参与开发BrowserSync，了解到这里就足够啦。</p>\n<h1 id=\"如何安装\"><a href=\"#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何安装</h1>\n<p>那么…如何安装呢？有个前提条件：安装<a href=\"http://nodejs.org/\">Node.js</a>。</p>\n<p>命令行执行<code class=\"language-text\">node -v</code>，确保Node安装OK。</p>\n<p>全局安装BrowserSync:<code class=\"language-text\">npm install browser-sync -g</code></p>\n<p>注：我在Mac下遇到个问题，需要在npm前面加<code class=\"language-text\">sudo</code>，才能执行成功，应该跟本人的环境配置有关。</p>\n<p>测试安装OK与否：<code class=\"language-text\">browser-sync --version</code></p>\n<p>看看BrowserSync下有哪些命令可以使用：<code class=\"language-text\">browser-sync --help</code></p>\n<h1 id=\"如何使用\"><a href=\"#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>如何使用</h1>\n<p>举个例子：<br>\n假设有个<code class=\"language-text\">test</code>文件夹，里面有HTML文件和css文件夹，css文件夹里面当然是css文件啦。<br>\n首先，先跑到<code class=\"language-text\">test</code>文件夹下：<code class=\"language-text\">cd test</code></p>\n<p>然后 BrowserSync 之：<code class=\"language-text\">browser-sync start --server --files &quot;*.html, css/*.css&quot;</code></p>\n<p>随后将启用一个小型服务器，并监听test下的所有html和css文件夹下的css文件。此时此刻，命令行界面应该显示类似这样的一列信息：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">[BS] Access URLs:\n -------------------------------------\n       Local: http://localhost:3000\n    External: http://192.168.1.21:3000\n -------------------------------------\n          UI: http://localhost:3001\n UI External: http://192.168.1.21:3001\n -------------------------------------\n[BS] Serving files from: ./\n[BS] Watching files...</code></pre>\n      </div>\n<p><code class=\"language-text\">External</code>表示在同一网段下的所有设备都可以访问这个地址。<code class=\"language-text\">UI</code>的意思就是网页版的控制中心。</p>\n<p>还有许多其它特性可以从命令行挖掘。总而言之，花上一两个小时来体验一下，相信你从今以后会离不开它！</p>\n<h1 id=\"参考\"><a href=\"#%E5%8F%82%E8%80%83\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<p><a href=\"http://www.browsersync.io/\">BrowserSync官网</a><br>\n<a href=\"http://www.browsersync.io/docs/command-line/\">BrowserSync文档</a></p>","frontmatter":{"title":"使用BrowserSync 2.0提高前端开发逼格","date":"2016-01-14T09:31:37.000Z","category":"技术","tags":["前端","工具","BrowserSync"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%B8%8C%E6%9C%9B\">希望</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%AE%9E%E6%97%B6%E5%88%B7%E6%96%B0-live-reloading\">实时刷新 (Live reloading)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E4%BA%A4%E4%BA%92%E5%90%8C%E6%AD%A5interaction-synchronization\">交互同步(Interaction synchronization)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95remote-inspector\">远程调试(Remote inspector)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E6%A8%A1%E6%8B%9F%E7%BD%91%E9%80%9Fsimulate-slower-connections\">模拟网速(Simulate slower connections)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E8%AE%B0%E5%BD%95%E6%B5%8F%E8%A7%88%E5%8E%86%E5%8F%B2url-history\">记录浏览历史(URL history)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E6%96%B0ui%EF%BC%81new-ui\">新UI！(New UI)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%85%BC%E5%AE%B9%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7build-tool-compatibility\">兼容构建工具(Build-tool compatibility)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E4%B8%8B%E8%BD%BD%E5%8D%B3%E7%94%A8%EF%BC%81install-anywhere-for-free\">下载即用！(Install anywhere for free)</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#browsersync-%E6%98%AF%E6%80%8E%E6%A0%B7%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\">BrowserSync 是怎样的工作原理</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85\">如何安装</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8\">如何使用</a></li>\n<li><a href=\"/posts/improve-your-workflow-with-browser-sync-2-0/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","excerpt":"引子 Web开发，尤其是前端开发，经常要做的就是不停地“试错”。下面的场景你是否熟悉： 1.在浏览器打开网页 2.更改一两行代码 3.点击浏览器的刷新，重复  步骤2 周而复始，还要在不同的设备，不同的浏览器，不同的测试方法，Oh God…"}},{"node":{"fields":{"slug":"/posts/about-2016"},"html":"<p><img src=\"https://zerosoul.github.io/2015/12/20/about-2016/about-2016.jpg\" alt=\"carrying man\"></p>\n<h1 id=\"楔子\"><a href=\"#%E6%A5%94%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>楔子</h1>\n<p>生命是场持续而长久的积累，没有人真正在乎你在何时，在何地，是在烧着脑细胞，还是在洒着汗水。人们往往只是在你惊艳众人那一刻惊呼：卧槽，这么牛X怎么做到的？！甚至没有仔细听你解释是如何做到的，就去猎奇下一个惊艳时刻。所以，没那么多观众，放轻松，别活得太累。偶尔遇到愿意听你说到口干舌燥的，别犹豫，那不是友情便是爱情。</p>\n<h1 id=\"正文\"><a href=\"#%E6%AD%A3%E6%96%87\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>正文</h1>\n<p>去年此时，我大概在构思今年要做的事情，并有意地把其中<a href=\"https://zerosoul.github.io/2015/02/01/against-the-flow/\">十件事</a>以博文的形式暴露出来，其目的是为了形成某种监督，进而对自己有所激励。此时此刻，恰好一年，这种方式目前来看是有效果的，所以没有理由不沿用一下。</p>\n<ol>\n<li>\n<p>每月写博文<br>\n忙碌不是逃避思考的借口，恰恰是应该坐下来想一下：为什么这么忙？以前常常有想法，却没有以文字的方式沉淀下来，我觉得是种浪费，效率上的浪费，因为能把思考写出来才有生根发芽的可能性，好记性不如烂博文。一篇技术，一点译文，一篇随笔，或者读书笔记都行，每月至少两篇吧。一年下来24篇，恩，不能再少了。</p>\n</li>\n<li>\n<p>物尽其用<br>\n这里的“物”，主要指的是我的MAC本。MAC除了用来装X，对于开发人员更重要的是提高效率，目前我还没有完全适应使用MAC工作，所以物尽其用还有距离呢。当然，工具终究是工具，更重要的是想法，两条腿走路，更稳当一些。</p>\n</li>\n<li>\n<p>APP<br>\n在技术行业工作了几年，耳濡目染久了，也有了互联网产品情节。所以想凭一己之力做个能解决个人具体需求的APP产品，由于自己是干前端的，自然而然的就想到了以前端方式来做。这个过程应该是个学习与实践的好机会，恩，好好玩。</p>\n</li>\n<li>\n<p>塑身<br>\n今年跑步坚持的还不错，身材也相应地变好了一些，但距离“好身材”还略远。所以借着今年打下的底子，继续坚持跑步的同时，办个健身卡，有条件就再请个私教，制定科学的健身计划，持之以恒。虽然走的是健身流程，但最终目的还是想打造完美的身材协调比例，比如肩膀匀不匀称，小腿粗不粗壮，挺胸抬头，全身看上去很协调，就算OK。总之，“主要看气质”，这也是我用的是“塑身”一词，而不是“健身”的原因，至于胸肌，腹肌，肱二头肌发不发达，恩，全是赠品。</p>\n</li>\n<li>\n<p>环台湾岛骑行<br>\n本来计划在今年春节期间去，种种原因拖延到现在，已经来不及了，推到下一年年底吧。或许还是一个人，或许是两人，恩，不能再多了…</p>\n</li>\n<li>\n<p>阅读<br>\n听说能让人保持创造力的最好方式便是持续地阅读，如果说今年的阅读是为了广度，那么明年便是着重深度。不求多，但求精，速度不快，一两个月啃下一本足矣，附带读书笔记。So… 10本书吧，不能再多了，再多就醉了。</p>\n</li>\n<li>\n<p>再去一次怀化某山村<br>\n今年10月份去了次，山清水秀，民风淳朴，与那里结下了更为深厚的不解之缘。从今年开始，每年都会去一次。</p>\n</li>\n<li>\n<p>英语进阶<br>\n英语一直是半瓶子醋水平，虽说应付工作日常足矣，但作为一种开阔视野的好工具，谁不想更为全面地掌握呢。打算通过翻译一本书做起，也算是给“阅读”和“博文”做贡献。</p>\n</li>\n<li>\n<p>摄影进阶<br>\n摄影是个烧钱的爱好，我不是器材党，所以目前来看，总投资没超过5K，都不好意思说自己喜欢摄影了。所谓的进阶，可能更多的是片子的后期。另，入手一个广角镜头，恩，不能再多了。</p>\n</li>\n<li>\n<p>学一种乐器<br>\n说来惭愧，曾经有学吉他的冲动，但也就止于冲动了。吉他携带有些不方便，我更习惯低调，所以想到了口琴，恩，练练口活。</p>\n</li>\n</ol>\n<p>还是那个意思：10件事不是目标，也不是梦想，只是10件事。有些需要常做，比如塑身，有些是一次性，比如骑行，有些烧脑，有些烧钱，有些流汗，甚至有些流泪。不管怎样，都需要努力。努力不是一场真人秀，更像是在做幕后，在看不到的时间与空间持续付出着…</p>\n<p>至于梦想，我觉得其实是一个很平常的东西，那句话怎么说的来着：梦想就像内裤，你得有，但是不要经常拿出来炫耀。从不觉得一个人为了梦想付出很多就显得很高尚。每个人都有自己的生活方式，没有梦想或者不愿意为梦想付出的人也值得尊重，毕竟做成一件事有时不是靠实力，还有运气。</p>\n<p>“内裤”就不晒了，不过做完以上10件事，梦想应该是更近了一步，更何况明年不止这10件。</p>\n<p>努力成为自己想成为的人，不明不白盲目努力的生活，不值得一过。</p>","frontmatter":{"title":"杨二小","date":"2015-12-20T09:31:37.000Z","category":"技术","tags":["年终总结","计划"],"cover":"https://zerosoul.github.io/2015/12/20/about-2016/about-2016.jpg"},"tableOfContents":"<ul>\n<li><a href=\"/posts/about-2016/#%E6%A5%94%E5%AD%90\">楔子</a></li>\n<li><a href=\"/posts/about-2016/#%E6%AD%A3%E6%96%87\">正文</a></li>\n</ul>","excerpt":"楔子 生命是场持续而长久的积累，没有人真正在乎你在何时，在何地，是在烧着脑细胞，还是在洒着汗水。人们往往只是在你惊艳众人那一刻惊呼：卧槽，这么牛X…"}},{"node":{"fields":{"slug":"/posts/build-personal-site-with-hexo-and-github-pages"},"html":"<h1 id=\"准备工作\"><a href=\"#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>准备工作</h1>\n<h2 id=\"githubgithub\"><a href=\"#githubgithub\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"#Github\" title=\"Github\"></a><a href=\"http://github.com\">Github</a></h2>\n<ol>\n<li>登陆你的Github</li>\n<li>新建一个Repository</li>\n<li>将之命名为<em>yourGithubName.github.io</em>(注意替换yourGithubName)</li>\n<li>关键步骤已经完成，其他选项随意啦。点击新建后，别忘了把<em>SSH</em>的地址copy一份，后面有用到</li>\n</ol>\n<h1 id=\"hexo\"><a href=\"#hexo\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://hexo.io\">Hexo</a></h1>\n<ol>\n<li>打开终端</li>\n<li>Hexo依赖 Node 环境，如果没有先安装 Node &#x26; npm，参考<a href=\"http://nodejs.org\">官网</a></li>\n<li>安装 Hexo<br>\n<code class=\"language-text\">npm install -g hexo</code></li>\n<li>齐活，Hexo准备完毕</li>\n</ol>\n<h1 id=\"使用hexo撸github需要的东西\"><a href=\"#%E4%BD%BF%E7%94%A8hexo%E6%92%B8github%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>使用Hexo撸Github需要的东西</h1>\n<ol>\n<li>进入到你想放置github pages repository的目录</li>\n<li>在此创建Hexo Project<br>\n<code class=\"language-text\">hexo init yourGithubName.github.io</code></li>\n<li>切换到刚刚创建的目录<br>\n<code class=\"language-text\">cd yourGithubName.github.io</code></li>\n<li>安装依赖&#x26;生成静态文件&#x26;启动本地服务器<br>\n<code class=\"language-text\">npm install &amp; hexo g &amp; hexo s</code></li>\n<li>目测现在就可以通过访问localhost:4000来瞅瞅网站啥样了</li>\n</ol>\n<h1 id=\"部署到github上\"><a href=\"#%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>部署到Github上</h1>\n<ol>\n<li>首先，停掉Hexo <code class=\"language-text\">Control + C</code></li>\n<li>打开根目录的_config.yml，设置Github地址<br>\n<code class=\"language-text\">deploy: type: git repo: git@github.com:yourGithubName/yourGithubName.github.io.git</code></li>\n<li>部署前，先确认有没有安装<em><a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a></em><br>\n<code class=\"language-text\">npm install hexo-deployer-git --save</code></li>\n<li>部署<br>\n<code class=\"language-text\">hexo d</code></li>\n<li>打开浏览器，访问 <em>yourGithubName.github.io</em></li>\n</ol>\n<h1 id=\"写作\"><a href=\"#%E5%86%99%E4%BD%9C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>写作</h1>\n<ol>\n<li>使用Markdown写作，完事后保存到source/_posts/</li>\n<li>重新生成静态文件<br>\n<code class=\"language-text\">hexo g</code></li>\n<li>运行<code class=\"language-text\">hexo s</code>在本地查看刚刚写的文章</li>\n<li>木问题的话，更新至Github<br>\n<code class=\"language-text\">hexo d</code></li>\n</ol>\n<h1 id=\"绑定自己的域名\"><a href=\"#%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>绑定自己的域名</h1>\n<blockquote>\n<p>我通过淘宝代理<a href=\"https://www.godaddy.com/\">Godaddy</a>购买了 <a href=\"http://zerosou.us\">zerosoul.github.io</a> 域名，就拿这个举例如何绑定吧</p>\n</blockquote>\n<ol>\n<li>Github上进入 zerosoul.github.io</li>\n<li>创建并提交CNAME文件，里面只有一行内容，就是域名：<code class=\"language-text\">zerosoul.github.io</code></li>\n<li>去Godaddy网站管理域名页面<br>\n<img src=\"https://zerosoul.github.io/2015/11/05/build-personal-site-with-hexo-and-github-pages/godaddy_setting.jpg\" alt=\"godaddy setting\"></li>\n<li>增加一条 A 记录:host=<code class=\"language-text\">@</code>，Points to=<code class=\"language-text\">192.30.252.153</code></li>\n<li>增加一条 CNAME 记录:host=<code class=\"language-text\">www</code>，Points to=<code class=\"language-text\">zerosoul.github.io</code></li>\n<li>最后，一定要记得保存更改！<br>\n<img src=\"https://zerosoul.github.io/2015/11/05/build-personal-site-with-hexo-and-github-pages/godaddy_saving.jpg\" alt=\"godaddy saving\"></li>\n<li>静待更改生效，大概一两个小时。</li>\n</ol>\n<h1 id=\"两个小时后\"><a href=\"#%E4%B8%A4%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>两个小时后…</h1>\n<p><strong>装X成功！</strong></p>\n<h1 id=\"相关链接\"><a href=\"#%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>相关链接</h1>\n<p><a href=\"https://hexo.io/docs/\">hexo doc</a><br>\n<a href=\"https://help.github.com/categories/github-pages-basics/\">github pages basic</a><br>\n<a href=\"http://andrewsturges.com/blog/jekyll/tutorial/2014/11/06/github-and-godaddy.html\">Configuring a Godaddy domain name with github pages</a></p>","frontmatter":{"title":"科学地使用 Hexo 和 Github Pages 装X","date":"2015-11-05T09:31:37.000Z","category":"技术","tags":["hexo","github","nodejs","前端"],"cover":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\">准备工作</a></p>\n<ul>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#githubgithub\">GithubGithub</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#hexo\">Hexo</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E4%BD%BF%E7%94%A8hexo%E6%92%B8github%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF\">使用Hexo撸Github需要的东西</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E9%83%A8%E7%BD%B2%E5%88%B0github%E4%B8%8A\">部署到Github上</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E5%86%99%E4%BD%9C\">写作</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D\">绑定自己的域名</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E4%B8%A4%E4%B8%AA%E5%B0%8F%E6%97%B6%E5%90%8E\">两个小时后…</a></li>\n<li><a href=\"/posts/build-personal-site-with-hexo-and-github-pages/#%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5\">相关链接</a></li>\n</ul>","excerpt":"准备工作 Github 登陆你的Github 新建一个Repository 将之命名为 yourGithubName.github.io (注意替换yourGithubName) 关键步骤已经完成，其他选项随意啦。点击新建后，别忘了把 SSH 的地址copy一份，后面有用到 Hexo…"}},{"node":{"fields":{"slug":"/posts/json-and-jsonp"},"html":"<h1 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>前端开发有个问题不可避免：<strong>跨域获取异步数据</strong>。我比较推崇的解决方式是：<strong>用JSON传数据，靠JSONP来跨域</strong>。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。</p>\n<p>JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿：<strong>JSON是一种数据交换格式，而JSONP是一种依靠开发人员的聪明才智创造出的一种非官方跨域数据交互协议。一个是描述信息的格式，一个是信息传递双方约定的方法。</strong></p>\n<h1 id=\"什么是json\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjson\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSON</h1>\n<p>有关JSON的概念，曾经写过一篇文章专述，请<a href=\"https://zerosoul.github.io/2015/06/18/explore-json/\">移步这里</a>。</p>\n<p>概括下其优点：</p>\n<ul>\n<li>基于纯文本，跨平台传递；</li>\n<li>Javascript原生支持，后台语言几乎全部支持；</li>\n<li>轻量级数据格式，占用字符少，特别适合网络传递；</li>\n<li>可读性较强，虽然比不上XML一目了然，但在合理的缩进之后还是易识别的；</li>\n<li>容易编写和解析；</li>\n</ul>\n<h1 id=\"什么是jsonp\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是JSONP</h1>\n<h1 id=\"jsonp是怎么产生的\"><a href=\"#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSONP是怎么产生的</h1>\n<p>我试着用自己的方式来阐释一下这个问题：</p>\n<ol>\n<li>一个众所周知的问题，AJAX直接请求普通文件存在跨域访问的问题，甭管网页是静态的还是动态的，只要是跨域请求，一律不准；</li>\n<li>不过，WEB页面上调用js文件时则不受是否跨域的影响（不仅如此，凡是拥有<code class=\"language-text\">src</code>这个属性的标签都有跨域的能力，比如<code class=\"language-text\">&lt;script&gt;</code>、<code class=\"language-text\">&lt;img&gt;</code>、<code class=\"language-text\">&lt;iframe&gt;</code>）；</li>\n<li>于是可以判断，当前阶段如果想通过纯WEB端（ActiveX控件、服务端代理、属于未来的HTML5之Websocket等方式不算）跨域访问数据就只有一种可能，那就是在远程服务器上设法把数据装进js文件里，供客户端调用和进一步处理；</li>\n<li>JSON的纯字符数据格式可以简洁的描述复杂数据，更妙的是JSON被javascript原生支持，所以在客户端几乎可以随心所欲的处理这种格式的数据；</li>\n<li>这样子解决方案就水到渠成了，WEB客户端通过与调用脚本一模一样的方式，来调用跨域服务器上动态生成的js格式文件（一般以JSON为后缀），显而易见，服务器之所以要动态生成JSON文件，目的就在于把客户端需要的数据装入进去。</li>\n<li>客户端在对JSON文件调用成功之后，也就获得了自己所需的数据，剩下的就是按照自己需求进行处理和展现了，这种获取远程数据的方式看起来非常像AJAX，但其实并不一样。</li>\n<li>为了便于客户端使用数据，逐渐形成了一种非正式传输协议，人们把它称作JSONP，该协议的一个要点就是允许用户传递一个<code class=\"language-text\">callback</code>参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。</li>\n</ol>\n<p>我想JSONP的发展历程大概就是这样子，应该八九不离十，下面看一看具体实现。</p>\n<h1 id=\"具体实现\"><a href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>具体实现</h1>\n<p>1.远程服务器<code class=\"language-text\">remote.server.com</code>根目录下有个<code class=\"language-text\">remote.js</code>文件代码如下：  </p>\n<p>1</p>\n<p>alert('我来自远程文件');</p>\n<p>本地服务器<code class=\"language-text\">local.server.com</code>下有个测试页面<code class=\"language-text\">test.html</code>代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>毫无疑问，页面将会弹出一个提示窗体，显示跨域调用成功。<br>\n2.现在<code class=\"language-text\">test.html</code>页面定义一个函数，然后在远程<code class=\"language-text\">remote.js</code>中传入数据进行调用。  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">localHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'我是本地函数，可以被跨域的remote.js文件调用，远程js带来的数据是：'</span> \\<span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://remote.server.com/remote.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>remote.js文件代码如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">localHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"result\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"我是远程js带来的数据\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>运行之后查看结果，页面成功弹出提示窗口，显示本地函数被跨域的远程js调用成功，并且还接收到了远程js带来的数据。很好，跨域远程获取数据的目的基本实现了，但是又一个问题出现了，怎么让远程js知道它应该调用的本地函数叫什么名字呢？毕竟是JSONP的服务者都要面对很多服务对象，而这些服务对象各自的本地函数都不相同啊？</p>\n<p>3.很容易想到，只要服务端提供的js脚本是动态生成的就行了，这样调用者可以传一个参数过去告诉服务端“我想要一段调用XXX函数的js代码，请你返回给我”，于是服务器就可以按照客户端的需求来生成js脚本并响应了。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n    <span class=\"token comment\">// 得到航班信息查询结果后的回调函数</span>\n\n    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">flightHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'你查询的航班结果是：票价 '</span> \\<span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，'</span> \\<span class=\"token operator\">+</span> <span class=\"token string\">'余票 '</span> \\<span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 提供jsonp服务的url地址（不管是什么类型的地址，最终生成的返回值都是一段javascript代码）</span>\n\n    <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998&amp;callback=flightHandler\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 创建script标签，设置其属性</span>\n\n    <span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 把script标签加入head，此时调用开始</span>\n\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'head'</span><span class=\"token punctuation\">)</span>\\<span class=\"token punctuation\">[</span><span class=\"token number\">0</span>\\<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>这次的代码变化比较大，不再直接把远程js文件写死，而是编码实现动态查询，而这也正是JSONP客户端的核心部分。</p>\n<p>调用的url中传递了一个code参数，告诉服务器我要查的是<strong>CA1998</strong>次航班的信息，而<strong>callback</strong>参数则告诉服务器，我的本地回调函数叫做<strong>flightHandler</strong>，所以请把查询结果传入这个函数中进行调用。</p>\n<p>服务器很聪明，这个叫做flightResult.aspx的页面生成了一段这样的代码提供给test.html（服务端的实现这里就不演示了，与选用的语言无关，说到底就是拼接字符串）：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">flightHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token string\">\"code\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"CA1998\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string\">\"price\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1780</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token string\">\"tickets\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>传递给flightHandler函数的是一个JSON，它描述了航班的基本信息。运行页面，成功弹出提示窗口，JSONP的执行全过程顺利完成。<br>\n4.什么？你用的是jQuery？那再来一个使用jQuery实现JSONP的例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>JSONP测试页面<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n        <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\n            $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n\n                 type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"get\"</span><span class=\"token punctuation\">,</span>\n\n                 <span class=\"token keyword\">async</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n\n                 url<span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://flightQuery.com/jsonp/flightResult.aspx?code=CA1998\"</span><span class=\"token punctuation\">,</span>\n\n                 dataType<span class=\"token punctuation\">:</span> <span class=\"token string\">\"jsonp\"</span><span class=\"token punctuation\">,</span>\n\n                 jsonp<span class=\"token punctuation\">:</span> <span class=\"token string\">\"callback\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)</span>\n\n                 jsonpCallback<span class=\"token punctuation\">:</span><span class=\"token string\">\"flightHandler\"</span><span class=\"token punctuation\">,</span><span class=\"token comment\">//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写\"?\"，jQuery会自动为你处理数据</span>\n\n                 success<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n                     <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'您查询到航班信息：票价： '</span> \\<span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>price <span class=\"token operator\">+</span> <span class=\"token string\">' 元，余票： '</span> \\<span class=\"token operator\">+</span> json<span class=\"token punctuation\">.</span>tickets <span class=\"token operator\">+</span> <span class=\"token string\">' 张。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n                 error<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n                     <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fail'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                 <span class=\"token punctuation\">}</span>\n\n         <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>是不是有点奇怪？为什么这次没有写<code class=\"language-text\">flightHandler</code>这个函数呢？竟然也运行成功了！这就是jQuery的功劳了，在处理JSONP类型的ajax时（虽然jQuery也把JSONP归入了AJAX，但它们真的不是一回事儿），自动帮你生成回调函数并把数据取出来供success属性方法来调用，很爽有木有？</p>\n<h1 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h1>\n<ul>\n<li>\n<p>AJAX和JSONP这两种技术在调用方式上<strong>看起来很像</strong>，目的也一样，都是请求一个url，然后把服务器返回的数据进行处理，因此jQuery把JSONP作为AJAX的一种形式进行了封装；</p>\n</li>\n<li>\n<p>AJAX和JSONP其实本质上是不同的东西。AJAX的核心是通过<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XmlHttpRequest</a>获取非本页内容，而JSONP的核心则是动态添加<code class=\"language-text\">&lt;script&gt;</code>来调用服务器提供的js脚本。</p>\n</li>\n<li>\n<p>AJAX与JSONP的区别不在于是否跨域，AJAX通过服务端代理一样可以实现跨域，JSONP本身也不排斥同域的数据的获取。</p>\n</li>\n<li>\n<p>JSONP是一种方式或者说非强制性协议，如同AJAX一样，它也不一定非要用json格式来传递数据，如果你愿意，字符串都行，只不过这样不利于用JSONP提供公开服务。</p>\n</li>\n</ul>\n<p>总而言之，JSONP不是AJAX的一个特例。</p>","frontmatter":{"title":"探索AJAX和JSONP","date":"2015-08-27T09:31:37.000Z","category":"技术","tags":["json","jsonp","javascript","jquery","前端"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/json-and-jsonp/#%E5%89%8D%E8%A8%80\">前言</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjson\">什么是JSON</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E4%BB%80%E4%B9%88%E6%98%AFjsonp\">什么是JSONP</a></li>\n<li><a href=\"/posts/json-and-jsonp/#jsonp%E6%98%AF%E6%80%8E%E4%B9%88%E4%BA%A7%E7%94%9F%E7%9A%84\">JSONP是怎么产生的</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\">具体实现</a></li>\n<li><a href=\"/posts/json-and-jsonp/#%E6%80%BB%E7%BB%93\">总结</a></li>\n</ul>","excerpt":"前言 前端开发有个问题不可避免： 跨域获取异步数据 。我比较推崇的解决方式是： 用JSON传数据，靠JSONP来跨域 。JSONP是旧有概念的延伸，所以兼容性非常好，这也是推崇的首要理由。 JSON和JSONP虽然只有一个字母的差别，但其实他们根本不是一回事儿： JSON…"}},{"node":{"fields":{"slug":"/posts/change-element-type-using-jquery"},"html":"<h1 id=\"起因\"><a href=\"#%E8%B5%B7%E5%9B%A0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>起因</h1>\n<p>工作当中遇到个有点意思的技术需求：把某个<code class=\"language-text\">div</code>元素替换成<code class=\"language-text\">a</code>元素。本以为使用jQuery会有现成的API，类似<code class=\"language-text\">$(element).changeType(&quot;a&quot;)</code>啥的，一行代码搞定，结果没找到o(╯□╰)o，看来好久没用jQuery的后果就是喜欢意淫没有的API。自己动手，丰衣足食。</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<ol>\n<li>获取要替换的元素特性集合，暂存到一个变量里。</li>\n<li>构造新的元素，即目标元素，并将暂存的特性赋到该元素中。</li>\n<li>使用<a href=\"http://api.jquery.com/replaceWith/\">jQuery API:replaceWith</a>，将要替换的元素用新构造的元素替换之。</li>\n</ol>\n<h1 id=\"代码实现\"><a href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码实现</h1>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">//source element:div.from </span>\n\n<span class=\"token keyword\">var</span> attrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> $srcEle <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div.from\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span>$srcEle<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> attr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n   attrs<span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> attr<span class=\"token punctuation\">.</span>nodeValue<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> $targetEle <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;a/>\"</span><span class=\"token punctuation\">,</span>attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>$srcEle<span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             \n\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> $targetEle<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>当然，为了更具通用性，可以做成一个插件：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    $<span class=\"token punctuation\">.</span>fn<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">changeElementType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>newType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token keyword\">var</span> attrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>             \n\n            $<span class=\"token punctuation\">.</span><span class=\"token function\">each</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attributes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">,</span> attr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n               attrs<span class=\"token punctuation\">[</span>attr<span class=\"token punctuation\">.</span>nodeName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> attr<span class=\"token punctuation\">.</span>nodeValue<span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replaceWith</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n                <span class=\"token keyword\">return</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;\"</span> \\<span class=\"token operator\">+</span> newType <span class=\"token operator\">+</span> <span class=\"token string\">\"/>\"</span><span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">contents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>jQuery<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"最后说一句\"><a href=\"#%E6%9C%80%E5%90%8E%E8%AF%B4%E4%B8%80%E5%8F%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后说一句</h1>\n<p>意淫没关系，或许正是开始创作的好契机。</p>","frontmatter":{"title":"改变元素类型（jQuery）","date":"2015-08-08T09:31:37.000Z","category":"技术","tags":["jquery","javascript","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E8%B5%B7%E5%9B%A0\">起因</a></li>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\">代码实现</a></li>\n<li><a href=\"/posts/change-element-type-using-jquery/#%E6%9C%80%E5%90%8E%E8%AF%B4%E4%B8%80%E5%8F%A5\">最后说一句</a></li>\n</ul>","excerpt":"起因 工作当中遇到个有点意思的技术需求：把某个 元素替换成 元素。本以为使用jQuery会有现成的API，类似 啥的，一行代码搞定，结果没找到o(╯□╰)o，看来好久没用jQuery的后果就是喜欢意淫没有的API…"}},{"node":{"fields":{"slug":"/posts/explore-json"},"html":"<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/json.png\" alt=\"json\"></p>\n<h1 id=\"概述\"><a href=\"#%E6%A6%82%E8%BF%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>概述</h1>\n<p>JSON(JavaScript Object Notation) 是一种轻量级数据交换格式。 易于阅读和编写，也易于机器解析和生成。 它基于<a href=\"http://www.crockford.com/javascript\">JavaScript Programming Language</a>, <a href=\"http://www.ecma-international.org/publications/files/ecma-st/ECMA-262.pdf\">Standard ECMA-262 3rd Edition - December 1999</a>的一个子集。 JSON采用完全独立于语言的文本格式，但是也使用了类似于C语言家族的习惯（包括C, C++, C#, Java, JavaScript, Perl, Python等）。 这些特性使JSON成为理想的数据交换语言。</p>\n<h1 id=\"标准\"><a href=\"#%E6%A0%87%E5%87%86\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>标准</h1>\n<p>JSON建构于两种结构：</p>\n<ul>\n<li>名称/值”对的集合（A collection of name/value pairs）。不同的语言中，它被理解为对象（object），纪录（record），结构（struct），字典（dictionary），哈希表（hash table），有键列表（keyed list），或者关联数组 （associative array）。</li>\n<li>值的有序列表（An ordered list of values）。在大部分语言中，它被理解为数组（array）。</li>\n</ul>\n<p>这些都是常见的数据结构。事实上大部分现代计算机语言都以某种形式支持它们。这使得一种数据格式在同样基于这些结构的编程语言之间交换成为可能。</p>\n<p>JSON具有以下这些形式：</p>\n<ul>\n<li>对象是一个无序的“‘名称/值’对”集合。一个对象以“{”（左括号）开始，“}”（右括号）结束。每个“名称”后跟一个“:”（冒号）；“‘名称/值’ 对”之间使用“,”（逗号）分隔。</li>\n</ul>\n<p><img src=\"object.gif\" alt=\"object\"></p>\n<ul>\n<li>数组是值（value）的有序集合。一个数组以“[”（左中括号）开始，“]”（右中括号）结束。值之间使用“,”（逗号）分隔。</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/array.gif\" alt=\"array\"></p>\n<ul>\n<li>值（value）可以是双引号括起来的字符串（string）、数值(number)、true、false、 null、对象（object）或者数组（array）。这些结构可以嵌套。</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/value.gif\" alt=\"value\"></p>\n<ul>\n<li>字符串（string）是由双引号包围的任意数量Unicode字符的集合，使用反斜线转义。一个字符（character）即一个单独的字符串（character string）。</li>\n</ul>\n<p>字符串（string）与C或者Java的字符串非常相似。</p>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/string.gif\" alt=\"string\"></p>\n<ul>\n<li>数值（number）也与C或者Java的数值非常相似。除去未曾使用的八进制与十六进制格式。除去一些编码细节。</li>\n</ul>\n<p><img src=\"https://zerosoul.github.io/2015/06/18/explore-json/number.gif\" alt=\"number\"></p>\n<p><em>注意：空白可以加入到任何符号之间。</em></p>\n<h1 id=\"参考链接\"><a href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考链接</h1>\n<ul>\n<li><a href=\"http://www.json.org/\">JSON官网</a></li>\n</ul>","frontmatter":{"title":"探索JSON","date":"2015-06-18T09:31:37.000Z","category":"技术","tags":["json","备忘","前端"],"cover":"https://zerosoul.github.io/2015/06/18/explore-json/json.png"},"tableOfContents":"<ul>\n<li><a href=\"/posts/explore-json/#%E6%A6%82%E8%BF%B0\">概述</a></li>\n<li><a href=\"/posts/explore-json/#%E6%A0%87%E5%87%86\">标准</a></li>\n<li><a href=\"/posts/explore-json/#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\">参考链接</a></li>\n</ul>","excerpt":"概述 JSON(JavaScript Object Notation) 是一种轻量级数据交换格式。 易于阅读和编写，也易于机器解析和生成。 它基于 JavaScript Programming Language ,  Standard ECMA-262 3rd Edition - December…"}},{"node":{"fields":{"slug":"/posts/style-broken-image-using-css"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>浏览网页时有时会遇到图片加载失败的场景，浏览器往往会给出一个非常丑陋的显示效果：  </p>\n<p><img src=\"https://zerosoul.github.io/2015/05/07/style-broken-image-using-css/img_err.png\" alt=\"加载失败\"><br>\n为了更好的用户体验，这里可以仅仅通过CSS来优化一下样式。恰巧最近工作上遇到了这样的需求，在此记录下自己是如何解决的。</p>\n<h1 id=\"思路\"><a href=\"#%E6%80%9D%E8%B7%AF\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思路</h1>\n<p>需要注意两个偏理论上的知识点：</p>\n<ol>\n<li><code class=\"language-text\">img</code>标签是个<a href=\"https://www.w3.org/TR/CSS21/generate.html#before-after-content\">可替换元素</a>，即其呈现是由外部资源决定的，也因此<code class=\"language-text\">:before</code>和<code class=\"language-text\">:after</code>这两个伪元素对其不起作用。但是，当图片加载失败时，伪元素就能派上用场了。</li>\n<li>可以对<code class=\"language-text\">img</code>标签使用排版相关的CSS规则，比如字体，这些规则只对<code class=\"language-text\">alt</code>特性起作用。</li>\n</ol>\n<p>运用上面两个特性，我们就能做到当图片加载失败时，对其美化。</p>\n<h1 id=\"代码\"><a href=\"#%E4%BB%A3%E7%A0%81\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码</h1>\n<p>使用下面结构当做例子：  </p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://www.somewhere.com/images/broken.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>马蛋，图片加载出错了...<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>图片加载失败，下面的CSS会发挥作用：  </p>\n<div class=\"gatsby-highlight\" data-language=\"css\">\n      <pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">img</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Helvetica'</span><span class=\"token punctuation\">;</span> \n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 300<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">line-height</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span> //自此以上的css会影响alt的样式\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n    <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">img:before</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\\\f1c5\"</span> <span class=\"token string\">\" \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>alt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  //content的使用方式请自行谷歌之\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> FontAwesome<span class=\"token punctuation\">;</span> //注意使用的是font awesome 哦，别忘了引入。\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgb</span><span class=\"token punctuation\">(</span>100, 100, 100<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span> \n\n <span class=\"token selector\">img:after</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"(url: \"</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token string\">\")\"</span><span class=\"token punctuation\">;</span> \n        <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #00aeef<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> -10px<span class=\"token punctuation\">;</span> \n        <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> 1000<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>最后，如果图片加载失败，将呈现如下样式：<br>\n<img src=\"https://zerosoul.github.io/2015/05/07/style-broken-image-using-css/img_err_styled.png\" alt=\"加载失败\"></p>\n<p>肿么样，是不是好看了很多！</p>","frontmatter":{"title":"使用CSS美化加载出错的图片","date":"2015-05-07T09:31:37.000Z","category":"技术","tags":["css","前端","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/style-broken-image-using-css/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/style-broken-image-using-css/#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"/posts/style-broken-image-using-css/#%E4%BB%A3%E7%A0%81\">代码</a></li>\n</ul>","excerpt":"引子 浏览网页时有时会遇到图片加载失败的场景，浏览器往往会给出一个非常丑陋的显示效果：   为了更好的用户体验，这里可以仅仅通过CSS…"}},{"node":{"fields":{"slug":"/posts/using-image-error-event-correctly"},"html":"<h1 id=\"问题\"><a href=\"#%E9%97%AE%E9%A2%98\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>问题</h1>\n<p>经常遇到图片加载不上的问题，一般解决这个问题的方式就是给<code class=\"language-text\">image</code>绑定<code class=\"language-text\">error</code>事件，当图片加载出错，触发该事件，然后给image重新指定一个通用图片：</p>\n<h1 id=\"解决\"><a href=\"#%E8%A7%A3%E5%86%B3\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>解决</h1>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>image.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onerror</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>imgError(this);<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\">\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">imgError</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    image<span class=\"token punctuation\">.</span>onerror <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n    image<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"/images/error.gif\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>更简短的方式：</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>image.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onError</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>this.onerror=null;this.src=<span class=\"token punctuation\">'</span>/images/noimage.gif<span class=\"token punctuation\">'</span>;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<p>有个地方值得注意：当触发错误事件时，首先要做的就是清楚错误事件<code class=\"language-text\">image.onerror = &quot;&quot;;</code>，否则万一后面重新指定图片时，依然报错，就会陷入死循环，直接stack overflow了。</p>\n<h1 id=\"更好的方式（jquery）\"><a href=\"#%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%88jquery%EF%BC%89\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>更好的方式（jQuery）</h1>\n<p>以上方式虽然精简，但并不提倡将绑定事件混合在HTML结构中，所以我们用jQuery重新实现一下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/images/error.gif\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>jQuery还有个API：<a href=\"http://api.jquery.com/one/\">.one</a>，也就是给元素绑定只触发一次的事件，非常适合干这事儿：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">one</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">'/images/error.gif'</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>","frontmatter":{"title":"绑定image错误事件的正确姿势","date":"2014-11-25T09:31:37.000Z","category":"技术","tags":["前端","jquery","javascript"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/using-image-error-event-correctly/#%E9%97%AE%E9%A2%98\">问题</a></li>\n<li><a href=\"/posts/using-image-error-event-correctly/#%E8%A7%A3%E5%86%B3\">解决</a></li>\n<li><a href=\"/posts/using-image-error-event-correctly/#%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%88jquery%EF%BC%89\">更好的方式（jQuery）</a></li>\n</ul>","excerpt":"问题 经常遇到图片加载不上的问题，一般解决这个问题的方式就是给 绑定 事件，当图片加载出错，触发该事件，然后给image重新指定一个通用图片： 解决 更简短的方式： 有个地方值得注意：当触发错误事件时，首先要做的就是清楚错误事件 ，否则万一后面重新指定图片时，依然报错，就会陷入死循环，直接stack…"}},{"node":{"fields":{"slug":"/posts/shorthand-javascript-coding"},"html":"<p>Javascript代码写多了，就会下意识想用更简短的方式来表述同一逻辑。在此把工作中用到的简写方式记录下，权当备忘录。</p>\n<h1 id=\"code-classlanguage-textif-true--elsecode\"><a href=\"#code-classlanguage-textif-true--elsecode\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">If true … else</code></h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> test<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    test<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\n    test<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> test<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">:</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>当然，如果是仅仅赋值布尔类型变量，还可以再精简下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> test<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//来个嵌套层次更深一些的例子</span>\n\n<span class=\"token keyword\">var</span> x<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\ntest<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"大于10\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">&lt;</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"小于5\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"大于5小于10\"</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//小于5</span>\n\n<span class=\"token comment\">//函数调用也可以用到</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span>z<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token operator\">?</span>x<span class=\"token punctuation\">:</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"code-classlanguage-textifcode判断\"><a href=\"#code-classlanguage-textifcode%E5%88%A4%E6%96%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">if</code>判断</h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>test <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">//do sth</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>test <span class=\"token operator\">!=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">//do sth</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">//do sth</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">//do sth</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h1 id=\"code-classlanguage-textnullcodecode-classlanguage-textundefinedcode与空检测\"><a href=\"#code-classlanguage-textnullcodecode-classlanguage-textundefinedcode%E4%B8%8E%E7%A9%BA%E6%A3%80%E6%B5%8B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">null</code>,<code class=\"language-text\">undefined</code>与空检测</h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>var1 <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> var1 <span class=\"token operator\">!==</span> undefined <span class=\"token operator\">||</span> var1 <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n     <span class=\"token keyword\">var</span> var2 <span class=\"token operator\">=</span> var1<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> var2 <span class=\"token operator\">=</span> var1 <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"声明变量\"><a href=\"#%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>声明变量</h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> x<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> y<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>这种声明变量的场景用到的比较少，也记录下吧，谁让咱这是备忘录呢。</p>\n<h1 id=\"code-classlanguage-textcharatcode简写\"><a href=\"#code-classlanguage-textcharatcode%E7%AE%80%E5%86%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><code class=\"language-text\">charAt()</code>简写</h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"myString\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"myString\"</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></code></pre>\n      </div>\n<h1 id=\"比较返回值\"><a href=\"#%E6%AF%94%E8%BE%83%E8%BF%94%E5%9B%9E%E5%80%BC\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>比较返回值</h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> undefined<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">return</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">return</span> ret <span class=\"token operator\">||</span> <span class=\"token function\">fun</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h1 id=\"取整\"><a href=\"#%E5%8F%96%E6%95%B4\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>取整</h1>\n<p>传统写法：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token number\">4.9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">4</span>  <span class=\"token comment\">//true</span></code></pre>\n      </div>\n<p>简写：  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">~</span><span class=\"token operator\">~</span><span class=\"token number\">4.9</span> <span class=\"token operator\">===</span> <span class=\"token number\">4</span>  <span class=\"token comment\">//true</span></code></pre>\n      </div>\n<h1 id=\"未完待续\"><a href=\"#%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>未完待续…</h1>","frontmatter":{"title":"Javascript代码简写备忘录","date":"2014-10-17T09:31:37.000Z","category":"技术","tags":["javascript","前端","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/shorthand-javascript-coding/#code-classlanguage-textif-true--elsecode\">&#x3C;code class=\"language-text\">If true … else&#x3C;/code></a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#code-classlanguage-textifcode%E5%88%A4%E6%96%AD\">&#x3C;code class=\"language-text\">if&#x3C;/code>判断</a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#code-classlanguage-textnullcodecode-classlanguage-textundefinedcode%E4%B8%8E%E7%A9%BA%E6%A3%80%E6%B5%8B\">&#x3C;code class=\"language-text\">null&#x3C;/code>,&#x3C;code class=\"language-text\">undefined&#x3C;/code>与空检测</a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F\">声明变量</a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#code-classlanguage-textcharatcode%E7%AE%80%E5%86%99\">&#x3C;code class=\"language-text\">charAt()&#x3C;/code>简写</a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#%E6%AF%94%E8%BE%83%E8%BF%94%E5%9B%9E%E5%80%BC\">比较返回值</a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#%E5%8F%96%E6%95%B4\">取整</a></li>\n<li><a href=\"/posts/shorthand-javascript-coding/#%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD\">未完待续…</a></li>\n</ul>","excerpt":"Javascript…"}}],"pathPrefix":"cates/技术","first":false,"last":false,"index":3,"pageCount":4,"additionalContext":{"total":38,"category":"技术"}}}