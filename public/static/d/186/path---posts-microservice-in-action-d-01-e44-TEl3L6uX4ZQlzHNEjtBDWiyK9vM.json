{"pageContext":{"slug":"/posts/microservice-in-action","html":"<h1 id=\"单块架构\"><a href=\"#%E5%8D%95%E5%9D%97%E6%9E%B6%E6%9E%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>单块架构</h1>\n<p>功能集中、代码中心化、一个发布包、部署后运行在同一进程的应用程序，通常称之为单块架构应用。</p>\n<p>单块架构通常划分三个层次：</p>\n<ul>\n<li>表示层，聚焦数据显示和用户交互</li>\n<li>业务逻辑层，聚焦业务逻辑处理</li>\n<li>数据访问层，聚焦数据存储与访问</li>\n</ul>\n<p>逻辑上虽然划分了三层，但并不是物理上的分层，也就是说，对不同层的代码而言，经历编译、打包、部署后，所有的代码最终还是运行在同一个进程中。</p>\n<p>单块架构优点：</p>\n<ul>\n<li>易于开发</li>\n<li>易于测试</li>\n<li>易于部署</li>\n<li>易于水平伸缩</li>\n</ul>\n<p>单块架构缺点：</p>\n<ul>\n<li>\n<p>维护成本增加</p>\n<p>随着代码量的增加，在开发人员对全局功能缺乏深度理解的情况下，修复一个缺陷，还有可能引入其他缺陷。</p>\n</li>\n<li>\n<p>持续交付周期长</p>\n</li>\n<li>\n<p>新人培养周期长</p>\n</li>\n<li>\n<p>技术选型成本高</p>\n</li>\n<li>\n<p>可扩展性差</p>\n</li>\n<li>\n<p>构建全功能团队难</p>\n</li>\n</ul>\n<p>互联网产品特点：创新成本低、需求变化快、用户群体庞大。</p>\n<h1 id=\"微服务架构\"><a href=\"#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>微服务架构</h1>\n<p>微服务架构与SOA:</p>\n<p><img src=\"/images/micro_and_soa.jpg\" alt=\"micro_and_soa\"></p>\n<p>微服务本质：</p>\n<ul>\n<li>服务作为组件</li>\n<li>围绕业务组织团队</li>\n<li>关注产品而非项目：You build it, you run it.</li>\n<li>技术多样性</li>\n<li>业务数据独立</li>\n<li>基础设施自动化</li>\n<li>演进式架构</li>\n</ul>\n<p>分布式系统的复杂度：</p>\n<ul>\n<li>性能</li>\n<li>可靠性</li>\n<li>异步</li>\n<li>数据一致性</li>\n<li>工具：开发、调试</li>\n</ul>\n<h1 id=\"微服务实践\"><a href=\"#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>微服务实践</h1>\n<p><img src=\"/images/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5.png\" alt=\"微服务实践\"></p>\n<p>如何从工程实践出发，尽早将开发、测试、部署、运维、监控的流水线打通，才能帮助团队更好地驾驭微服务。</p>\n<p>日志聚合工具：<a href=\"https://www.elastic.co/\">LogStash (ELK三大件之一)</a></p>","frontmatter":{"title":"阅读笔记《微服务：架构与实践》","date":"2017-11-27T09:23:08.000Z","category":"阅读笔记","tags":["互联网","技术","阅读"],"cover":null},"excerpt":"…","tableOfContents":"<ul>\n<li><a href=\"/posts/microservice-in-action/#%E5%8D%95%E5%9D%97%E6%9E%B6%E6%9E%84\">单块架构</a></li>\n<li><a href=\"/posts/microservice-in-action/#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84\">微服务架构</a></li>\n<li><a href=\"/posts/microservice-in-action/#%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E8%B7%B5\">微服务实践</a></li>\n</ul>","prev":{"fields":{"slug":"/posts/fh-21-subsite-summary"},"html":"<h1 id=\"引子\"><a href=\"#%E5%BC%95%E5%AD%90\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>引子</h1>\n<p>参加工作五年了，一直想找个实战项目综合性地练练手：从后端到前端，从后台到前台，技术选型，开发排期，开发环境，部署环境，通通自己来搞定。这是件很有挑战性的事情，同时也可遇不可求。</p>\n<p>不知是上天的眷顾还是捉弄，前段时间公司有个“分站”项目立项，委任我为项目经理（第一次作为项目负责人），但人手严重不足，只给我分配一个只有一年开发经验的PHP程序员，工作态度挺好，但基础实在薄弱，时间紧，任务重，许多问题实在是不能从零开始教她，最后没办法，硬着头皮自己包揽了大部分开发任务。</p>\n<p>一个多月的加班加点的生活，最终如期并且超出预期地完成了分站项目，值得好好总结总结：不吹不黑，讲讲从前端转后端，搞定PHP项目是怎样的一种体验，无关情怀，只讲事实。总结分为两部分，第一部分介绍飞华分站这个项目，第二部分分享下对写代码这件事的思考。</p>\n<h1 id=\"飞华分站\"><a href=\"#%E9%A3%9E%E5%8D%8E%E5%88%86%E7%AB%99\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>飞华分站</h1>\n<p>飞华分站项目，是以省为站点单位建站与管理平台，其实就是门户网站在各个行政区域的本地化站点，有如下功能：\n后台，其实就是数据的管理，交互非常多：</p>\n<ul>\n<li>登录，注册，角色，权限控制等标配功能</li>\n<li>一个后台对应多个站点</li>\n<li>后台角色分为：超级管理员、站点管理员和站点编辑</li>\n<li>超级管理员可以编辑站点（增删改查），并拥有站点管理员和编辑的所有权限</li>\n<li>站点管理员可以管理编辑（新建，删除，重置密码等等），管理分类（增删改查），并拥有编辑的所有权限</li>\n<li>站点编辑可以编辑文章（增删改查）和手工（增删改查）</li>\n</ul>\n<p><img src=\"/images/sub_summary/fs3.login.png\" alt=\"后台登录\" title=\"后台登录\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-index.png\" alt=\"超级管理员后台首页\" title=\"超级管理员后台首页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-list.png\" alt=\"后台用户管理界面\" title=\"后台用户管理界面\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/fs3-edit.png\" alt=\"后台文章管理界面\" title=\"后台文章管理界面\"></p>\n<p>前台，纯展示页面，分为首页，列表页，详情页：</p>\n<p><img src=\"/images/sub_summary/site.index.png\" alt=\"分站前台首页\" title=\"分站前台首页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/site-list.png\" alt=\"分站前台列表页\" title=\"分站前台列表页\"></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/site-detail.png\" alt=\"分站前台详情页\" title=\"分站前台详情页\"></p>\n<h1 id=\"改进\"><a href=\"#%E6%94%B9%E8%BF%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>改进</h1>\n<p>公司有自己的PHP框架，这么多年了，自己也或多或少地了解了这套框架的代码，有些地方已经挺老旧了，基于此套代码，我做了如下改进：</p>\n<h2 id=\"代码瘦身\"><a href=\"#%E4%BB%A3%E7%A0%81%E7%98%A6%E8%BA%AB\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码瘦身</h2>\n<p>删掉了巨量无用的代码，最终打包出的代码从70+M锐减到20+M</p>\n<h2 id=\"数据库的使用方式\"><a href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数据库的使用方式</h2>\n<p>mysqli ==>PDO（Medoo）</p>\n<p>PDO优势：</p>\n<ul>\n<li>\n<p>PDO真正的以底层实现的统一接口数库操作接口，不管后端使用的是何种数据库，如果代码封装好了以后，应用层调用基本上差不多的，当后端数据库更换了以后，应用层代码基本不用修改. </p>\n</li>\n<li>\n<p>支持更高级的DB特性操作，如：存储过程的调度等,mysql原生库是不支持的. </p>\n</li>\n<li>\n<p>PHP官方主推，兼容性稳定性必然要高于<code class=\"language-text\">MySQL Extension</code>,可以直接使用<code class=\"language-text\">pecl upgrade pdo</code> 命令升级. </p>\n</li>\n<li>\n<p>可以防止SQL注入，确保数据库更加安全</p>\n<p>真正感到爽的是：可以以OO方式来存取数据，不用自己拼sql语句，减少了出错的可能性，更易维护。</p>\n</li>\n</ul>\n<h2 id=\"类库的加载方式\"><a href=\"#%E7%B1%BB%E5%BA%93%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>类库的加载方式</h2>\n<p><code class=\"language-text\">require XXX</code> ==> <code class=\"language-text\">Composer</code></p>\n<h2 id=\"开发体验\"><a href=\"#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>开发体验</h2>\n<p>SVN本地提交后刷新看效果 ==> Docker本地开发</p>\n<h2 id=\"后台颜值交互\"><a href=\"#%E5%90%8E%E5%8F%B0%E9%A2%9C%E5%80%BC%E4%BA%A4%E4%BA%92\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>后台颜值&#x26;交互</h2>\n<ul>\n<li>Bootstrap-UI ==> Semantic-UI</li>\n<li>同步操作，刷新页面 ==> 异步操作，即时响应</li>\n</ul>\n<h2 id=\"同一功能，不同的实现\"><a href=\"#%E5%90%8C%E4%B8%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>同一功能，不同的实现</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">功能点</th>\n<th align=\"left\">新实现</th>\n<th align=\"left\">老实现</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">分页</td>\n<td align=\"left\">结构化<br><strong>body数据</strong></td>\n<td align=\"left\">PHP拼接HTML</td>\n</tr>\n<tr>\n<td align=\"left\">手工</td>\n<td align=\"left\">标识<br><strong>更灵活，更一致，减少了理解成本和数据库表</strong></td>\n<td align=\"left\">模块</td>\n</tr>\n<tr>\n<td align=\"left\">表单验证</td>\n<td align=\"left\">自动化、可配置<br><strong>增强了体验的同时也精简了代码</strong></td>\n<td align=\"left\">手写</td>\n</tr>\n<tr>\n<td align=\"left\">缩略图上传</td>\n<td align=\"left\">多张、可配置</td>\n<td align=\"left\">单张</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"新工具\"><a href=\"#%E6%96%B0%E5%B7%A5%E5%85%B7\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新工具</h1>\n<p>为了支持以上列出的改进，经过大量的调研，引入了以下新工具：</p>\n<ul>\n<li><a href=\"https://www.docker.com/\">docker</a>：方便开发环境的搭建</li>\n</ul>\n<p>docker v.s. VM</p>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>Docker</th>\n<th>VM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>启动速度</td>\n<td>秒级</td>\n<td>分钟级</td>\n</tr>\n<tr>\n<td>硬盘使用</td>\n<td>MB</td>\n<td>GB</td>\n</tr>\n<tr>\n<td>性能</td>\n<td>接近原生</td>\n<td>弱于</td>\n</tr>\n<tr>\n<td>系统支持量</td>\n<td>单机支持上千容器</td>\n<td>一般十几个</td>\n</tr>\n</tbody>\n</table>\n<p>无论是性能、效率、还是资源占用上，比传统虚拟机都有非常明显的优势。当然，对于开发流程而言，要求不仅限于性能、效率和资源占用。 还要考虑制作、分发、部署、管理是否方便快捷、是否可以自动化。 这些通过Docker都可以让流程更高效，机器干机器干的事，人干人该干的事。 降低了应用环境的管理成本，就可以投入更多的精力到更有价值的事情上，比如<strong>需求消化</strong>，<strong>关注代码质量</strong>。 </p>\n<ul>\n<li>\n<p><a href=\"https://getcomposer.org/\">Composer</a>：方便各种PHP类库的引用</p>\n</li>\n<li>\n<p><a href=\"https://medoo.in/api/quote\">Medoo</a>：数据库连接与使用</p>\n</li>\n<li>\n<p><a href=\"https://semantic-ui.com/\">Semantic-UI</a>：后台UI快速搭建</p>\n</li>\n</ul>\n<h1 id=\"三句话\"><a href=\"#%E4%B8%89%E5%8F%A5%E8%AF%9D\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>三句话</h1>\n<p>也是三个原则，贯穿开发始终</p>\n<ul>\n<li>Machine Repeats,Human Creates.</li>\n<li>Simple Short Straightforward (3S原则)</li>\n<li>脱离业务场景谈技术的优劣都是耍流氓</li>\n</ul>\n<h2 id=\"环境即基础\"><a href=\"#%E7%8E%AF%E5%A2%83%E5%8D%B3%E5%9F%BA%E7%A1%80\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>环境即基础</h2>\n<p>搭建能提高开发效率的环境：</p>\n<ul>\n<li>docker</li>\n<li>composer</li>\n<li>semantic-ui</li>\n<li>medoo</li>\n</ul>\n<h2 id=\"代码即表达\"><a href=\"#%E4%BB%A3%E7%A0%81%E5%8D%B3%E8%A1%A8%E8%BE%BE\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码即表达</h2>\n<ul>\n<li>时刻谨记：维护你代码的人是一个<strong>知道你住址的狂暴精神病患者</strong></li>\n<li>做好格式化（借助编辑器或插件，自动格式化）</li>\n<li>命名规范：类/函数/变量/数据库字段</li>\n<li>代码长度：e.g.一个函数不要超过一个屏幕</li>\n<li>\n<p>好代码本身就是最好的文档：</p>\n<blockquote>\n<p>如果你是医生，病人在请求手术前别洗手，因为那会花太多时间，你会照办吗？本该是病人说了算，但医生却绝对应该拒绝。为什么？因为医生比病人更了解感染的风险。医生如果按病人说的办，就是一种不专业的态度。 同理，程序员遵从不了解混乱代码风险的产品经理（策划）的意愿，都是不专业的做法。</p>\n</blockquote>\n</li>\n</ul>\n<p>推荐读物：\n<img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/clean-code.png\" alt=\"write clean code\" title=\"write clean code\"></p>\n<h2 id=\"思维即能力\"><a href=\"#%E6%80%9D%E7%BB%B4%E5%8D%B3%E8%83%BD%E5%8A%9B\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>思维即能力</h2>\n<p>一开始就把事情做对：<strong>CODE LESS THINK MORE</strong></p>\n<p><img src=\"https://raw.githubusercontent.com/zerosoul/sub_summary/master/assets/images/think-more-code.png\" alt=\"think more code less\" title=\"think more code less\"></p>\n<h1 id=\"最后\"><a href=\"#%E6%9C%80%E5%90%8E\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>最后</h1>\n<p>在此只是提纲挈领地罗列出自己的观点，很多点都可以展开来说，比如Docker就是一个值得写一系列文章来介绍，以后有时间我在展开来讲。</p>","frontmatter":{"title":"一次项目总结","date":"2017-11-28T12:32:58.000Z","category":"技术","tags":["技术","总结","全栈","备忘"],"cover":null},"tableOfContents":"<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%BC%95%E5%AD%90\">引子</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E9%A3%9E%E5%8D%8E%E5%88%86%E7%AB%99\">飞华分站</a></li>\n<li>\n<p><a href=\"/posts/fh-21-subsite-summary/#%E6%94%B9%E8%BF%9B\">改进</a></p>\n<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E4%BB%A3%E7%A0%81%E7%98%A6%E8%BA%AB\">代码瘦身</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F\">数据库的使用方式</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E7%B1%BB%E5%BA%93%E7%9A%84%E5%8A%A0%E8%BD%BD%E6%96%B9%E5%BC%8F\">类库的加载方式</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%BC%80%E5%8F%91%E4%BD%93%E9%AA%8C\">开发体验</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%90%8E%E5%8F%B0%E9%A2%9C%E5%80%BC%E4%BA%A4%E4%BA%92\">后台颜值&#x26;交互</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E5%90%8C%E4%B8%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AE%9E%E7%8E%B0\">同一功能，不同的实现</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%96%B0%E5%B7%A5%E5%85%B7\">新工具</a></li>\n<li>\n<p><a href=\"/posts/fh-21-subsite-summary/#%E4%B8%89%E5%8F%A5%E8%AF%9D\">三句话</a></p>\n<ul>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E7%8E%AF%E5%A2%83%E5%8D%B3%E5%9F%BA%E7%A1%80\">环境即基础</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E4%BB%A3%E7%A0%81%E5%8D%B3%E8%A1%A8%E8%BE%BE\">代码即表达</a></li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%80%9D%E7%BB%B4%E5%8D%B3%E8%83%BD%E5%8A%9B\">思维即能力</a></li>\n</ul>\n</li>\n<li><a href=\"/posts/fh-21-subsite-summary/#%E6%9C%80%E5%90%8E\">最后</a></li>\n</ul>","excerpt":"…"},"next":{"fields":{"slug":"/posts/cleaning-up-your-websites-root-directory"},"html":"<p>曾几何时，只需要一个<code class=\"language-text\">favicon.ico</code>就可以满足网站的图标需求，随着移动端开发的繁荣，一个小小的图标也需要适配各种设备，虽然从牌子上区分主要就是苹果和安卓，但是一考虑到屏幕分辨率，真特么头大：</p>\n<ul>\n<li>android-chrome-144×144.png</li>\n<li>android-chrome-192×192.png</li>\n<li>android-chrome-36×36.png</li>\n<li>android-chrome-48×48.png</li>\n<li>android-chrome-72×72.png</li>\n<li>android-chrome-96×96.png</li>\n<li>apple-touch-icon-114×114.png</li>\n<li>apple-touch-icon-120×120.png</li>\n<li>apple-touch-icon-144×144.png</li>\n<li>apple-touch-icon-152×152.png</li>\n<li>apple-touch-icon-180×180.png</li>\n<li>apple-touch-icon-57×57.png</li>\n<li>apple-touch-icon-60×60.png</li>\n<li>apple-touch-icon-72×72.png</li>\n<li>apple-touch-icon-76×76.png</li>\n<li>apple-touch-icon.png</li>\n<li>apple-touch-icon-precomposed.png</li>\n<li>browserconfig.xml</li>\n<li>favicon-16×16.png</li>\n<li>favicon-194×194.png</li>\n<li>favicon-32×32.png</li>\n<li>favicon-96×96.png</li>\n<li>favicon.ico</li>\n<li>manifest.json</li>\n<li>mstile-144×144.png</li>\n<li>mstile-150×150.png</li>\n<li>mstile-310×150.png</li>\n<li>mstile-310×310.png</li>\n<li>mstile-70×70.png</li>\n<li>safari-pinned-tab.svg</li>\n</ul>\n<p>像这种生成各种图标的活儿，挺适合让机器来干：只需要给出一个最大分辨率的图，机器便能返回一个包含各种图标的资源包。我们只需要把这些图放到特定某一位置然后配置下<code class=\"language-text\">nginx</code>，万事大吉。根据这个想法，试着Google了一下，果然有个利器，而且是在线免费生成：<a href=\"http://realfavicongenerator.net/\">Favicon Generator. For real.</a>。</p>\n<p>通过<strong>Favicon Generator</strong>生成的图标资源，不建议放在项目根目录，而是集中放到某处，比如：<code class=\"language-text\">/assets/favicons/</code>，方便管理，通过配置<code class=\"language-text\">nginx</code>达到同样效果：</p>\n<div class=\"gatsby-highlight\" data-language=\"nginx\">\n      <pre class=\"language-nginx\"><code class=\"language-nginx\"><span class=\"token keyword\">location</span> <span class=\"token operator\">~</span> <span class=\"token operator\">^</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>android<span class=\"token operator\">-</span>chrome<span class=\"token operator\">|</span>apple<span class=\"token operator\">-</span>touch<span class=\"token operator\">-</span>icon<span class=\"token operator\">|</span>browserconfig<span class=\"token operator\">|</span>favicon<span class=\"token operator\">|</span>manifest<span class=\"token operator\">|</span>mstile<span class=\"token operator\">|</span>safari<span class=\"token operator\">-</span>pinned<span class=\"token operator\">-</span>tab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>\\<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">root</span> <span class=\"token operator\">/</span>var<span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>example<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>assets<span class=\"token operator\">/</span>favicons<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>这样，我的目的达到了：既能一键生成各种繁琐的图标，又清理了项目根目录，可谓一箭双雕。人生苦短，重复性的活儿交给机器，我们负责创造和下达指令。</p>","frontmatter":{"title":"清理项目根目录的各种图标","date":"2017-11-24T06:00:41.000Z","category":"技术","tags":["运维","前端","备忘"],"cover":null},"tableOfContents":"","excerpt":"曾几何时，只需要一个 就可以满足网站的图标需求，随着移动端开发的繁荣，一个小小的图标也需要适配各种设备，虽然从牌子上区分主要就是苹果和安卓，但是一考虑到屏幕分辨率，真特么头大： android-chrome-144×144.png android-chrome-192×192.png android…"}}}